{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/custom-setup.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { ChevronLeft, Save, Settings, BookOpen, Users, Calendar, Target, HelpCircle } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { projectIcons, projectColors, type ProjectType } from '../types';\n\ninterface CustomSetupProps {\n  onBack: () => void;\n}\n\ninterface CustomProjectConfig {\n  title: string;\n  description: string;\n  type: ProjectType;\n  subjects: string[];\n  difficulty: string;\n  timeframe: string;\n  goal: string;\n  studyFrequency: string;\n  collaboration: string;\n  visibility: string;\n  tags: string[];\n  customSettings: {\n    enableAI: boolean;\n    enableCollaboration: boolean;\n    enableProgressTracking: boolean;\n    enableReminders: boolean;\n  };\n}\n\nconst difficultyOptions = [\n  { value: 'beginner', label: 'Beginner', description: 'New to the subject' },\n  { value: 'intermediate', label: 'Intermediate', description: 'Some knowledge' },\n  { value: 'advanced', label: 'Advanced', description: 'Strong foundation' },\n  { value: 'expert', label: 'Expert', description: 'Deep knowledge' }\n];\n\nconst timeframeOptions = [\n  { value: '1-week', label: '1 Week' },\n  { value: '2-weeks', label: '2 Weeks' },\n  { value: '1-month', label: '1 Month' },\n  { value: '3-months', label: '3 Months' },\n  { value: '6-months', label: '6 Months' },\n  { value: '1-year', label: '1 Year' },\n  { value: 'ongoing', label: 'Ongoing' }\n];\n\nconst frequencyOptions = [\n  { value: 'daily', label: 'Daily' },\n  { value: '2-3-times-week', label: '2-3 times per week' },\n  { value: 'weekly', label: 'Weekly' },\n  { value: 'bi-weekly', label: 'Bi-weekly' },\n  { value: 'monthly', label: 'Monthly' },\n  { value: 'flexible', label: 'Flexible' }\n];\n\nconst collaborationOptions = [\n  { value: 'solo', label: 'Solo Learning' },\n  { value: 'small-group', label: 'Small Group (2-5 people)' },\n  { value: 'large-group', label: 'Large Group (6+ people)' },\n  { value: 'mentor', label: 'With a Mentor' },\n  { value: 'flexible', label: 'Flexible' }\n];\n\nconst visibilityOptions = [\n  { value: 'private', label: 'Private', description: 'Only you can see this project' },\n  { value: 'shared', label: 'Shared', description: 'Invited collaborators can see this project' },\n  { value: 'public', label: 'Public', description: 'Anyone can discover this project' }\n];\n\nconst subjectOptions = [\n  { value: 'biology', label: 'Biology', color: 'bg-green-100 text-green-800' },\n  { value: 'chemistry', label: 'Chemistry', color: 'bg-blue-100 text-blue-800' },\n  { value: 'physics', label: 'Physics', color: 'bg-purple-100 text-purple-800' },\n  { value: 'math', label: 'Mathematics', color: 'bg-orange-100 text-orange-800' },\n  { value: 'computer-science', label: 'Computer Science', color: 'bg-indigo-100 text-indigo-800' },\n  { value: 'literature', label: 'Literature', color: 'bg-red-100 text-red-800' },\n  { value: 'history', label: 'History', color: 'bg-amber-100 text-amber-800' },\n  { value: 'geography', label: 'Geography', color: 'bg-teal-100 text-teal-800' }\n];\n\nexport function CustomSetup({ onBack }: CustomSetupProps) {\n  const router = useRouter();\n  const [config, setConfig] = useState<CustomProjectConfig>({\n    title: '',\n    description: '',\n    type: 'biology',\n    subjects: [],\n    difficulty: '',\n    timeframe: '',\n    goal: '',\n    studyFrequency: '',\n    collaboration: '',\n    visibility: 'private',\n    tags: [],\n    customSettings: {\n      enableAI: true,\n      enableCollaboration: true,\n      enableProgressTracking: true,\n      enableReminders: true\n    }\n  });\n\n  const [newTag, setNewTag] = useState('');\n\n  const handleInputChange = (field: keyof CustomProjectConfig, value: string) => {\n    setConfig(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleSubjectToggle = (subject: string) => {\n    setConfig(prev => ({\n      ...prev,\n      subjects: prev.subjects.includes(subject)\n        ? prev.subjects.filter(s => s !== subject)\n        : [...prev.subjects, subject]\n    }));\n  };\n\n  const handleAddTag = () => {\n    if (newTag.trim() && !config.tags.includes(newTag.trim())) {\n      setConfig(prev => ({\n        ...prev,\n        tags: [...prev.tags, newTag.trim()]\n      }));\n      setNewTag('');\n    }\n  };\n\n  const handleRemoveTag = (tagToRemove: string) => {\n    setConfig(prev => ({\n      ...prev,\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\n    }));\n  };\n\n  const handleSettingToggle = (setting: keyof CustomProjectConfig['customSettings']) => {\n    setConfig(prev => ({\n      ...prev,\n      customSettings: {\n        ...prev.customSettings,\n        [setting]: !prev.customSettings[setting]\n      }\n    }));\n  };\n\n  const handleCreateProject = async () => {\n    try {\n      // TODO: Implement actual project creation API call\n      console.log('Creating custom project with config:', config);\n      \n      // For now, we'll simulate project creation\n      const mockProject = {\n        id: Math.random().toString(36).substr(2, 9), // Generate random ID\n        name: config.title,\n        project_type: 'school',\n        course_name: config.title,\n        goal_description: config.goal,\n        study_frequency: config.studyFrequency,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      };\n      \n      // Clean up any localStorage data that might exist\n      try {\n        localStorage.removeItem('project-setup-guided-setup');\n        localStorage.removeItem('self-study-guided-setup');\n        console.log('ðŸ§¹ Cleaned up localStorage after successful custom project creation');\n      } catch (error) {\n        console.warn('Failed to cleanup localStorage:', error);\n      }\n      \n      // Navigate to the new project's overview page\n      router.push(`/projects/${mockProject.id}/overview`);\n    } catch (error) {\n      console.error('Failed to create custom project:', error);\n      // Handle error (e.g., show a toast notification)\n    }\n  };\n\n  const isFormValid = () => {\n    return config.title.trim() && \n           config.description.trim() && \n           config.subjects.length > 0 &&\n           config.difficulty &&\n           config.timeframe &&\n           config.goal.trim();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-indigo-50\">\n      <div className=\"max-w-6xl mx-auto p-4 sm:p-6 lg:p-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-4 sm:mb-6 lg:mb-8\">\n          <Button variant=\"ghost\" onClick={onBack} className=\"flex items-center\">\n            <ChevronLeft size={16} className=\"mr-1\" />\n            Back to Selection\n          </Button>\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"h-4 w-4 sm:h-5 sm:w-5 text-purple-600\" />\n            <span className=\"text-sm font-medium text-purple-600\">Custom Setup</span>\n          </div>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8\">\n          {/* Main Configuration */}\n          <div className=\"lg:col-span-2 space-y-4 sm:space-y-6\">\n            {/* Basic Information */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n                  <BookOpen className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                  Basic Information\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 sm:space-y-4\">\n                <div>\n                  <Label htmlFor=\"title\" className=\"text-sm sm:text-base\">Project Title *</Label>\n                  <Input\n                    id=\"title\"\n                    placeholder=\"Enter your project title...\"\n                    value={config.title}\n                    onChange={(e) => handleInputChange('title', e.target.value)}\n                    className=\"mt-1\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"description\" className=\"text-sm sm:text-base\">Description *</Label>\n                  <Textarea\n                    id=\"description\"\n                    placeholder=\"Describe your project...\"\n                    value={config.description}\n                    onChange={(e) => handleInputChange('description', e.target.value)}\n                    className=\"min-h-[80px] sm:min-h-[100px] mt-1\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"text-sm sm:text-base\">Primary Subject *</Label>\n                  <RadioGroup value={config.type} onValueChange={(value) => handleInputChange('type', value)}>\n                    <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-2 sm:gap-3 mt-2\">\n                      {Object.entries(projectIcons).map(([type, Icon]) => (\n                        <div\n                          key={type}\n                          className={`flex flex-col items-center p-2 sm:p-3 border rounded-lg cursor-pointer transition-all ${\n                            config.type === type\n                              ? 'border-purple-500 bg-purple-50'\n                              : 'border-gray-200 hover:border-gray-300'\n                          }`}\n                          onClick={() => handleInputChange('type', type)}\n                        >\n                          <span className={`text-2xl sm:text-3xl mb-1 sm:mb-2 ${(projectColors[type as keyof typeof projectColors] || projectColors.default).split(' ')[1]}`}>\n                            {projectIcons[type as keyof typeof projectIcons] || projectIcons.default}\n                          </span>\n                          <span className=\"text-xs sm:text-sm font-medium text-center\">\n                            {type.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </RadioGroup>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Learning Configuration */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n                  <Target className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                  Learning Configuration\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 sm:space-y-4\">\n                <div>\n                  <Label className=\"text-sm sm:text-base\">Difficulty Level *</Label>\n                  <RadioGroup value={config.difficulty} onValueChange={(value) => handleInputChange('difficulty', value)}>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2 sm:gap-3 mt-2\">\n                      {difficultyOptions.map((option) => (\n                        <div key={option.value} className=\"flex items-start space-x-2 sm:space-x-3 p-2 sm:p-3 border rounded-lg hover:bg-gray-50 cursor-pointer\">\n                          <RadioGroupItem value={option.value} id={option.value} />\n                          <div>\n                            <Label htmlFor={option.value} className=\"text-xs sm:text-sm font-medium cursor-pointer\">\n                              {option.label}\n                            </Label>\n                            <p className=\"text-xs text-gray-600\">{option.description}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </RadioGroup>\n                </div>\n\n                <div>\n                  <Label className=\"text-sm sm:text-base\">Additional Subjects</Label>\n                  <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-2 sm:gap-3 mt-2\">\n                    {subjectOptions.map((subject) => (\n                      <div\n                        key={subject.value}\n                        onClick={() => handleSubjectToggle(subject.value)}\n                        className={`p-2 sm:p-3 border rounded-lg cursor-pointer transition-all ${\n                          config.subjects.includes(subject.value)\n                            ? 'border-purple-500 bg-purple-50'\n                            : 'border-gray-200 hover:border-gray-300'\n                        }`}\n                      >\n                        <Badge className={`w-full justify-center text-xs sm:text-sm ${subject.color}`}>\n                          {subject.label}\n                        </Badge>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"goal\" className=\"text-sm sm:text-base\">Learning Goal *</Label>\n                  <Textarea\n                    id=\"goal\"\n                    placeholder=\"What do you want to achieve with this project?\"\n                    value={config.goal}\n                    onChange={(e) => handleInputChange('goal', e.target.value)}\n                    className=\"min-h-[80px] sm:min-h-[100px] mt-1\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Schedule & Collaboration */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n                  <Calendar className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                  Schedule & Collaboration\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 sm:space-y-4\">\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                  <div>\n                    <Label className=\"text-sm sm:text-base\">Timeline *</Label>\n                    <RadioGroup value={config.timeframe} onValueChange={(value) => handleInputChange('timeframe', value)}>\n                      <div className=\"space-y-1 sm:space-y-2 mt-2\">\n                        {timeframeOptions.map((option) => (\n                          <div key={option.value} className=\"flex items-center space-x-2\">\n                            <RadioGroupItem value={option.value} id={option.value} />\n                            <Label htmlFor={option.value} className=\"text-xs sm:text-sm cursor-pointer\">\n                              {option.label}\n                            </Label>\n                          </div>\n                        ))}\n                      </div>\n                    </RadioGroup>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm sm:text-base\">Study Frequency *</Label>\n                    <RadioGroup value={config.studyFrequency} onValueChange={(value) => handleInputChange('studyFrequency', value)}>\n                      <div className=\"space-y-1 sm:space-y-2 mt-2\">\n                        {frequencyOptions.map((option) => (\n                          <div key={option.value} className=\"flex items-center space-x-2\">\n                            <RadioGroupItem value={option.value} id={option.value} />\n                            <Label htmlFor={option.value} className=\"text-xs sm:text-sm cursor-pointer\">\n                              {option.label}\n                            </Label>\n                          </div>\n                        ))}\n                      </div>\n                    </RadioGroup>\n                  </div>\n                </div>\n\n                <div>\n                  <Label className=\"text-sm sm:text-base\">Collaboration Style</Label>\n                  <RadioGroup value={config.collaboration} onValueChange={(value) => handleInputChange('collaboration', value)}>\n                    <div className=\"space-y-1 sm:space-y-2 mt-2\">\n                      {collaborationOptions.map((option) => (\n                        <div key={option.value} className=\"flex items-center space-x-2\">\n                          <RadioGroupItem value={option.value} id={option.value} />\n                          <Label htmlFor={option.value} className=\"text-xs sm:text-sm cursor-pointer\">\n                            {option.label}\n                          </Label>\n                        </div>\n                      ))}\n                    </div>\n                  </RadioGroup>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-4 sm:space-y-6\">\n            {/* Visibility & Tags */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-base sm:text-lg\">Visibility & Tags</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 sm:space-y-4\">\n                <div>\n                  <Label className=\"text-sm sm:text-base\">Project Visibility</Label>\n                  <RadioGroup value={config.visibility} onValueChange={(value) => handleInputChange('visibility', value)}>\n                    <div className=\"space-y-1 sm:space-y-2 mt-2\">\n                      {visibilityOptions.map((option) => (\n                        <div key={option.value} className=\"flex items-start space-x-2\">\n                          <RadioGroupItem value={option.value} id={option.value} className=\"mt-1\" />\n                          <div>\n                            <Label htmlFor={option.value} className=\"text-xs sm:text-sm font-medium cursor-pointer\">\n                              {option.label}\n                            </Label>\n                            <p className=\"text-xs text-gray-600\">{option.description}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </RadioGroup>\n                </div>\n\n                <div>\n                  <Label className=\"text-sm sm:text-base\">Tags</Label>\n                  <div className=\"flex gap-2 mt-2\">\n                    <Input\n                      placeholder=\"Add tag...\"\n                      value={newTag}\n                      onChange={(e) => setNewTag(e.target.value)}\n                      onKeyPress={(e) => e.key === 'Enter' && handleAddTag()}\n                      className=\"text-sm\"\n                    />\n                    <Button size=\"sm\" onClick={handleAddTag} className=\"text-xs\">Add</Button>\n                  </div>\n                  <div className=\"flex flex-wrap gap-2 mt-2\">\n                    {config.tags.map((tag) => (\n                      <Badge key={tag} variant=\"secondary\" className=\"cursor-pointer text-xs\" onClick={() => handleRemoveTag(tag)}>\n                        {tag} Ã—\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Advanced Settings */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-base sm:text-lg\">Advanced Settings</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 sm:space-y-4\">\n                <div className=\"space-y-2 sm:space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Label htmlFor=\"enableAI\" className=\"text-xs sm:text-sm\">AI Assistance</Label>\n                      <HelpCircle className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"enableAI\"\n                      checked={config.customSettings.enableAI}\n                      onChange={() => handleSettingToggle('enableAI')}\n                      className=\"rounded border-gray-300\"\n                    />\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Label htmlFor=\"enableCollaboration\" className=\"text-xs sm:text-sm\">Collaboration Tools</Label>\n                      <HelpCircle className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"enableCollaboration\"\n                      checked={config.customSettings.enableCollaboration}\n                      onChange={() => handleSettingToggle('enableCollaboration')}\n                      className=\"rounded border-gray-300\"\n                    />\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Label htmlFor=\"enableProgressTracking\" className=\"text-xs sm:text-sm\">Progress Tracking</Label>\n                      <HelpCircle className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"enableProgressTracking\"\n                      checked={config.customSettings.enableProgressTracking}\n                      onChange={() => handleSettingToggle('enableProgressTracking')}\n                      className=\"rounded border-gray-300\"\n                    />\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Label htmlFor=\"enableReminders\" className=\"text-xs sm:text-sm\">Study Reminders</Label>\n                      <HelpCircle className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-400\" />\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"enableReminders\"\n                      checked={config.customSettings.enableReminders}\n                      onChange={() => handleSettingToggle('enableReminders')}\n                      className=\"rounded border-gray-300\"\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Create Button */}\n            <Card>\n              <CardContent className=\"pt-4 sm:pt-6\">\n                <Button \n                  onClick={handleCreateProject}\n                  disabled={!isFormValid()}\n                  className=\"w-full bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-sm\"\n                >\n                  <Save className=\"h-4 w-4 mr-2\" />\n                  Create Project\n                </Button>\n                <p className=\"text-xs text-gray-500 mt-2 text-center\">\n                  * Required fields\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":["CustomSetup","difficultyOptions","value","label","description","timeframeOptions","frequencyOptions","collaborationOptions","visibilityOptions","subjectOptions","color","onBack","router","useRouter","config","setConfig","useState","title","type","subjects","difficulty","timeframe","goal","studyFrequency","collaboration","visibility","tags","customSettings","enableAI","enableCollaboration","enableProgressTracking","enableReminders","newTag","setNewTag","handleInputChange","field","prev","handleSubjectToggle","subject","includes","filter","s","handleAddTag","trim","handleRemoveTag","tagToRemove","tag","handleSettingToggle","setting","handleCreateProject","console","log","mockProject","id","Math","random","toString","substr","name","project_type","course_name","goal_description","study_frequency","created_at","Date","toISOString","updated_at","localStorage","removeItem","error","warn","push","isFormValid","length","div","className","Button","variant","onClick","ChevronLeft","size","Settings","span","Card","CardHeader","CardTitle","BookOpen","CardContent","Label","htmlFor","Input","placeholder","onChange","e","target","Textarea","RadioGroup","onValueChange","Object","entries","projectIcons","map","Icon","projectColors","default","split","word","charAt","toUpperCase","slice","join","Target","option","RadioGroupItem","p","Badge","Calendar","onKeyPress","key","HelpCircle","input","checked","disabled","Save"],"mappings":"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"}