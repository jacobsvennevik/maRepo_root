{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/steps/shared/use-file-upload.ts"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { APIError } from \"../../../services/api\";\nimport { isTestMode } from \"../../../services/mock-data\";\n\nexport interface UploadProgress {\n  [fileName: string]: number;\n}\n\nexport interface FileUploadState {\n  files: File[];\n  uploadProgress: UploadProgress;\n  error: string | null;\n  isAnalyzing: boolean;\n  showSuccess: boolean;\n}\n\nexport interface FileUploadActions {\n  handleUpload: (newFiles: File[]) => void;\n  handleRemove: (index: number) => void;\n  setError: (error: string | null) => void;\n  setIsAnalyzing: (isAnalyzing: boolean) => void;\n  setShowSuccess: (showSuccess: boolean) => void;\n  clearProgress: () => void;\n}\n\nexport function useFileUpload(): [FileUploadState, FileUploadActions] {\n  const [files, setFiles] = useState<File[]>([]);\n  const [uploadProgress, setUploadProgress] = useState<UploadProgress>({});\n  const [error, setError] = useState<string | null>(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const router = useRouter();\n\n  const handleUpload = useCallback((newFiles: File[]) => {\n    setFiles((prev) => [...prev, ...newFiles]);\n    setError(null);\n  }, []);\n\n  const handleRemove = useCallback(\n    (index: number) => {\n      setFiles((prev) => prev.filter((_, i) => i !== index));\n      setError(null);\n\n      // Clear progress for the removed file\n      const removedFile = files[index];\n      if (removedFile) {\n        setUploadProgress((prev) => {\n          const newProgress = { ...prev };\n          delete newProgress[removedFile.name];\n          return newProgress;\n        });\n      }\n    },\n    [files],\n  );\n\n  const clearProgress = useCallback(() => {\n    setUploadProgress({});\n  }, []);\n\n  const state: FileUploadState = {\n    files,\n    uploadProgress,\n    error,\n    isAnalyzing,\n    showSuccess,\n  };\n\n  const actions: FileUploadActions = {\n    handleUpload,\n    handleRemove,\n    setError,\n    setIsAnalyzing,\n    setShowSuccess,\n    clearProgress,\n  };\n\n  return [state, actions];\n}\n\n// Helper function to handle API errors consistently\nexport function handleUploadError(error: unknown, router: any): string {\n  if (error instanceof APIError) {\n    if (error.statusCode === 401) {\n      router.push(\"/login\");\n      return \"Your session has expired. Please log in again.\";\n    }\n    return error.message;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return \"An unexpected error occurred. Please try again.\";\n}\n\n// Helper function to validate files\nexport function validateFiles(\n  files: File[],\n  validTypes: string[],\n  maxSizeMB: number,\n): { validFiles: File[]; invalidFiles: File[]; oversizedFiles: File[] } {\n  const validFiles: File[] = [];\n  const invalidFiles: File[] = [];\n  const oversizedFiles: File[] = [];\n\n  const maxSizeBytes = maxSizeMB * 1024 * 1024;\n\n  files.forEach((file) => {\n    const fileExtension = \".\" + file.name.split(\".\").pop()?.toLowerCase();\n    const isValidType = validTypes.some((type) =>\n      type.startsWith(\".\") ? fileExtension === type : file.type.includes(type),\n    );\n\n    if (!isValidType) {\n      invalidFiles.push(file);\n    } else if (file.size > maxSizeBytes) {\n      oversizedFiles.push(file);\n    } else {\n      validFiles.push(file);\n    }\n  });\n\n  return { validFiles, invalidFiles, oversizedFiles };\n}\n"],"names":["handleUploadError","useFileUpload","validateFiles","files","setFiles","useState","uploadProgress","setUploadProgress","error","setError","isAnalyzing","setIsAnalyzing","showSuccess","setShowSuccess","router","useRouter","handleUpload","useCallback","newFiles","prev","handleRemove","index","filter","_","i","removedFile","newProgress","name","clearProgress","state","actions","APIError","statusCode","push","message","Error","validTypes","maxSizeMB","validFiles","invalidFiles","oversizedFiles","maxSizeBytes","forEach","file","fileExtension","split","pop","toLowerCase","isValidType","some","type","startsWith","includes","size"],"mappings":"AAAA;;;;;;;;;;;;IAoFgBA,iBAAiB;eAAjBA;;IAxDAC,aAAa;eAAbA;;IAyEAC,aAAa;eAAbA;;;uBAnGsB;4BACZ;qBACD;AAwBlB,SAASD;IACd,MAAM,CAACE,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAAS,EAAE;IAC7C,MAAM,CAACC,gBAAgBC,kBAAkB,GAAGF,IAAAA,eAAQ,EAAiB,CAAC;IACtE,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAClD,MAAM,CAACK,aAAaC,eAAe,GAAGN,IAAAA,eAAQ,EAAC;IAC/C,MAAM,CAACO,aAAaC,eAAe,GAAGR,IAAAA,eAAQ,EAAC;IAC/C,MAAMS,SAASC,IAAAA,qBAAS;IAExB,MAAMC,eAAeC,IAAAA,kBAAW,EAAC,CAACC;QAChCd,SAAS,CAACe,OAAS;mBAAIA;mBAASD;aAAS;QACzCT,SAAS;IACX,GAAG,EAAE;IAEL,MAAMW,eAAeH,IAAAA,kBAAW,EAC9B,CAACI;QACCjB,SAAS,CAACe,OAASA,KAAKG,MAAM,CAAC,CAACC,GAAGC,IAAMA,MAAMH;QAC/CZ,SAAS;QAET,sCAAsC;QACtC,MAAMgB,cAActB,KAAK,CAACkB,MAAM;QAChC,IAAII,aAAa;YACflB,kBAAkB,CAACY;gBACjB,MAAMO,cAAc;oBAAE,GAAGP,IAAI;gBAAC;gBAC9B,OAAOO,WAAW,CAACD,YAAYE,IAAI,CAAC;gBACpC,OAAOD;YACT;QACF;IACF,GACA;QAACvB;KAAM;IAGT,MAAMyB,gBAAgBX,IAAAA,kBAAW,EAAC;QAChCV,kBAAkB,CAAC;IACrB,GAAG,EAAE;IAEL,MAAMsB,QAAyB;QAC7B1B;QACAG;QACAE;QACAE;QACAE;IACF;IAEA,MAAMkB,UAA6B;QACjCd;QACAI;QACAX;QACAE;QACAE;QACAe;IACF;IAEA,OAAO;QAACC;QAAOC;KAAQ;AACzB;AAGO,SAAS9B,kBAAkBQ,KAAc,EAAEM,MAAW;IAC3D,IAAIN,iBAAiBuB,aAAQ,EAAE;QAC7B,IAAIvB,MAAMwB,UAAU,KAAK,KAAK;YAC5BlB,OAAOmB,IAAI,CAAC;YACZ,OAAO;QACT;QACA,OAAOzB,MAAM0B,OAAO;IACtB;IAEA,IAAI1B,iBAAiB2B,OAAO;QAC1B,OAAO3B,MAAM0B,OAAO;IACtB;IAEA,OAAO;AACT;AAGO,SAAShC,cACdC,KAAa,EACbiC,UAAoB,EACpBC,SAAiB;IAEjB,MAAMC,aAAqB,EAAE;IAC7B,MAAMC,eAAuB,EAAE;IAC/B,MAAMC,iBAAyB,EAAE;IAEjC,MAAMC,eAAeJ,YAAY,OAAO;IAExClC,MAAMuC,OAAO,CAAC,CAACC;QACb,MAAMC,gBAAgB,MAAMD,KAAKhB,IAAI,CAACkB,KAAK,CAAC,KAAKC,GAAG,IAAIC;QACxD,MAAMC,cAAcZ,WAAWa,IAAI,CAAC,CAACC,OACnCA,KAAKC,UAAU,CAAC,OAAOP,kBAAkBM,OAAOP,KAAKO,IAAI,CAACE,QAAQ,CAACF;QAGrE,IAAI,CAACF,aAAa;YAChBT,aAAaN,IAAI,CAACU;QACpB,OAAO,IAAIA,KAAKU,IAAI,GAAGZ,cAAc;YACnCD,eAAeP,IAAI,CAACU;QACtB,OAAO;YACLL,WAAWL,IAAI,CAACU;QAClB;IACF;IAEA,OAAO;QAAEL;QAAYC;QAAcC;IAAe;AACpD"}