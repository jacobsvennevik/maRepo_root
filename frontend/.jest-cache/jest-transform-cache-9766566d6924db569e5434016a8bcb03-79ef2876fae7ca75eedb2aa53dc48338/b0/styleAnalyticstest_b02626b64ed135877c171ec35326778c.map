{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/utils/__tests__/styleAnalytics.test.ts"],"sourcesContent":["// Unit Tests for Analytics Wrapper\nimport styleAnalytics, { \n  trackStyleSelected, \n  trackStyleCustomized, \n  trackPreviewOpened,\n  trackValidationTriggered,\n  trackAutofixApplied \n} from '../styleAnalytics';\n\n// Mock console.log to capture analytics events\nconst mockConsoleLog = jest.fn();\nconst originalConsoleLog = console.log;\n\nbeforeEach(() => {\n  console.log = mockConsoleLog;\n  styleAnalytics.clearEvents();\n});\n\nafterEach(() => {\n  console.log = originalConsoleLog;\n  jest.clearAllMocks();\n});\n\ndescribe('Style Analytics', () => {\n  describe('trackStyleSelected', () => {\n    it('should track style selection events', () => {\n      trackStyleSelected('mcq_quiz', 'MCQ Quiz', 'preset');\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] style_selected:',\n        expect.objectContaining({\n          style_id: 'mcq_quiz',\n          preset_name: 'MCQ Quiz',\n          source: 'preset'\n        })\n      );\n    });\n\n    it('should track custom style selection', () => {\n      trackStyleSelected('custom', undefined, 'custom');\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] style_selected:',\n        expect.objectContaining({\n          style_id: 'custom',\n          source: 'custom'\n        })\n      );\n    });\n  });\n\n  describe('trackStyleCustomized', () => {\n    it('should track style customization events', () => {\n      trackStyleCustomized('mcq_quiz', 'timing.total_minutes', 15, 20, 'total_minutes');\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] style_customized:',\n        expect.objectContaining({\n          style_id: 'mcq_quiz',\n          path: 'timing.total_minutes',\n          from: 15,\n          to: 20,\n          field_name: 'total_minutes'\n        })\n      );\n    });\n\n    it('should handle missing field name', () => {\n      trackStyleCustomized('mcq_quiz', 'timing.total_minutes', 15, 20);\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] style_customized:',\n        expect.objectContaining({\n          field_name: 'total_minutes'\n        })\n      );\n    });\n  });\n\n  describe('trackPreviewOpened', () => {\n    it('should track preview opened events', () => {\n      trackPreviewOpened('mcq_quiz', 3);\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] preview_opened:',\n        expect.objectContaining({\n          style_id: 'mcq_quiz',\n          preview_type: 'opened',\n          item_count: 3\n        })\n      );\n    });\n\n    it('should use default item count', () => {\n      trackPreviewOpened('mcq_quiz');\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] preview_opened:',\n        expect.objectContaining({\n          item_count: 3\n        })\n      );\n    });\n  });\n\n  describe('trackValidationTriggered', () => {\n    it('should track validation events', () => {\n      trackValidationTriggered('mcq_quiz', 2, true, false);\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] validation_triggered:',\n        expect.objectContaining({\n          style_id: 'mcq_quiz',\n          issue_count: 2,\n          has_errors: true,\n          has_warnings: false\n        })\n      );\n    });\n  });\n\n  describe('trackAutofixApplied', () => {\n    it('should track autofix application', () => {\n      trackAutofixApplied('mcq_quiz', 2, ['item_mix', 'timing.per_item_seconds']);\n      \n      expect(mockConsoleLog).toHaveBeenCalledWith(\n        '[StyleAnalytics] autofix_applied:',\n        expect.objectContaining({\n          style_id: 'mcq_quiz',\n          fix_count: 2,\n          fixes: ['item_mix', 'timing.per_item_seconds']\n        })\n      );\n    });\n  });\n\n  describe('StyleAnalytics class', () => {\n    it('should store events internally', () => {\n      styleAnalytics.styleSelected('test-style');\n      \n      const events = styleAnalytics.getEvents();\n      expect(events).toHaveLength(1);\n      expect(events[0].eventName).toBe('style_selected');\n    });\n\n    it('should filter events by type', () => {\n      styleAnalytics.styleSelected('test-style');\n      styleAnalytics.styleCustomized('test-style', 'path', 'from', 'to');\n      \n      const styleSelectedEvents = styleAnalytics.getEventsByType('style_selected');\n      expect(styleSelectedEvents).toHaveLength(1);\n      \n      const styleCustomizedEvents = styleAnalytics.getEventsByType('style_customized');\n      expect(styleCustomizedEvents).toHaveLength(1);\n    });\n\n    it('should provide analytics summary', () => {\n      // Mock Date.now to return different timestamps\n      const originalDateNow = Date.now;\n      let timestamp = 1000;\n      Date.now = jest.fn(() => timestamp++);\n      \n      styleAnalytics.styleSelected('test-style');\n      styleAnalytics.styleCustomized('test-style', 'path', 'from', 'to');\n      styleAnalytics.styleSelected('another-style');\n      \n      const summary = styleAnalytics.getSummary();\n      \n      expect(summary.totalEvents).toBe(3);\n      expect(summary.eventTypes.style_selected).toBe(2);\n      expect(summary.eventTypes.style_customized).toBe(1);\n      expect(summary.timeRange.start).toBeGreaterThan(0);\n      expect(summary.timeRange.end).toBeGreaterThan(summary.timeRange.start);\n      \n      // Restore original Date.now\n      Date.now = originalDateNow;\n    });\n\n    it('should clear events', () => {\n      styleAnalytics.styleSelected('test-style');\n      expect(styleAnalytics.getEvents()).toHaveLength(1);\n      \n      styleAnalytics.clearEvents();\n      expect(styleAnalytics.getEvents()).toHaveLength(0);\n    });\n\n    it('should respect enabled/disabled state', () => {\n      styleAnalytics.setEnabled(false);\n      styleAnalytics.styleSelected('test-style');\n      \n      expect(mockConsoleLog).not.toHaveBeenCalled();\n      expect(styleAnalytics.getEvents()).toHaveLength(0);\n      \n      styleAnalytics.setEnabled(true);\n      styleAnalytics.styleSelected('test-style');\n      \n      expect(mockConsoleLog).toHaveBeenCalled();\n      expect(styleAnalytics.getEvents()).toHaveLength(1);\n    });\n  });\n});\n"],"names":["mockConsoleLog","jest","fn","originalConsoleLog","console","log","beforeEach","styleAnalytics","clearEvents","afterEach","clearAllMocks","describe","it","trackStyleSelected","expect","toHaveBeenCalledWith","objectContaining","style_id","preset_name","source","undefined","trackStyleCustomized","path","from","to","field_name","trackPreviewOpened","preview_type","item_count","trackValidationTriggered","issue_count","has_errors","has_warnings","trackAutofixApplied","fix_count","fixes","styleSelected","events","getEvents","toHaveLength","eventName","toBe","styleCustomized","styleSelectedEvents","getEventsByType","styleCustomizedEvents","originalDateNow","Date","now","timestamp","summary","getSummary","totalEvents","eventTypes","style_selected","style_customized","timeRange","start","toBeGreaterThan","end","setEnabled","not","toHaveBeenCalled"],"mappings":"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"}