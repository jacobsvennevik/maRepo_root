{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/files/file-storage.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams } from 'next/navigation';\nimport { \n  Upload, \n  Search, \n  Filter, \n  Grid3X3, \n  List, \n  Star, \n  MoreVertical,\n  Download,\n  Share2,\n  Edit3,\n  Trash2,\n  Eye,\n  Clock,\n  FileText,\n  Image,\n  Video,\n  Archive,\n  FileSpreadsheet,\n  FileCode,\n  FileVideo,\n  FileAudio,\n  Plus,\n  ArrowUp,\n  ArrowRight,\n  ChevronDown,\n  Loader2,\n  AlertCircle,\n  FolderOpen,\n  HardDrive\n} from 'lucide-react';\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n  DropdownMenuLabel,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { axiosApi } from \"@/lib/axios-api\";\n\n// Import sub-components\nimport { FileStorageLoading } from './file-storage-loading';\nimport { FileStorageError } from './file-storage-error';\nimport { FileStorageEmpty } from './file-storage-empty';\nimport { RecentFileCard } from './recent-file-card';\nimport { FileTypeBreakdown } from './file-type-breakdown';\nimport { FileListView } from './file-list-view';\nimport { FileGridView } from './file-grid-view';\nimport { StorageUsageSidebar } from './storage-usage-sidebar';\nimport { FileDetailsPanel } from './file-details-panel';\n\n// File types and interfaces\ninterface FileItem {\n  id: string;\n  name: string;\n  type: 'pdf' | 'docx' | 'pptx' | 'txt' | 'png' | 'jpg' | 'jpeg' | 'csv' | 'md' | 'zip' | 'mp4' | 'mp3' | 'wav';\n  size: number;\n  uploadedAt: string;\n  lastModified: string;\n  status: 'uploading' | 'completed' | 'error' | 'processing';\n  progress?: number;\n  error?: string;\n  isFavorite?: boolean;\n  tags?: string[];\n  visibility: 'private' | 'shared' | 'public';\n  versionCount?: number;\n  sharedWith?: string[];\n  permissions?: string[];\n  color: string;\n  bgColor: string;\n  borderColor: string;\n}\n\ninterface StorageStats {\n  totalUsed: number;\n  totalAvailable: number;\n  breakdown: {\n    documents: { count: number; size: number };\n    images: { count: number; size: number };\n    videos: { count: number; size: number };\n    audio: { count: number; size: number };\n    archives: { count: number; size: number };\n  };\n}\n\ntype ViewMode = 'list' | 'grid';\ntype SortOption = 'name' | 'size' | 'date' | 'type';\ntype FilterOption = 'all' | 'documents' | 'images' | 'videos' | 'audio' | 'archives' | 'favorites';\n\n// Utility functions\nexport const getFileIcon = (type: string): React.ReactElement => {\n  switch (type) {\n    case 'pdf':\n      return <FileText className=\"h-5 w-5 text-red-500\" />;\n    case 'docx':\n      return <FileText className=\"h-5 w-5 text-blue-500\" />;\n    case 'pptx':\n      return <FileText className=\"h-5 w-5 text-orange-500\" />;\n    case 'txt':\n    case 'md':\n      return <FileText className=\"h-5 w-5 text-slate-500\" />;\n    case 'png':\n    case 'jpg':\n    case 'jpeg':\n      return <Image className=\"h-5 w-5 text-green-500\" />;\n    case 'csv':\n      return <FileSpreadsheet className=\"h-5 w-5 text-emerald-500\" />;\n    case 'zip':\n      return <Archive className=\"h-5 w-5 text-yellow-500\" />;\n    case 'mp4':\n      return <FileVideo className=\"h-5 w-5 text-indigo-500\" />;\n    case 'mp3':\n    case 'wav':\n      return <FileAudio className=\"h-5 w-5 text-purple-500\" />;\n    default:\n      return <FileText className=\"h-5 w-5 text-slate-500\" />;\n  }\n};\n\nexport const getFileTypeColor = (type: string): string => {\n  switch (type) {\n    case 'pdf':\n      return 'bg-red-100 text-red-700 border-red-200';\n    case 'docx':\n      return 'bg-blue-100 text-blue-700 border-blue-200';\n    case 'pptx':\n      return 'bg-orange-100 text-orange-700 border-orange-200';\n    case 'txt':\n    case 'md':\n      return 'bg-slate-100 text-slate-700 border-slate-200';\n    case 'png':\n    case 'jpg':\n    case 'jpeg':\n      return 'bg-green-100 text-green-700 border-green-200';\n    case 'csv':\n      return 'bg-emerald-100 text-emerald-700 border-emerald-200';\n    case 'zip':\n      return 'bg-yellow-100 text-yellow-700 border-yellow-200';\n    case 'mp4':\n      return 'bg-indigo-100 text-indigo-700 border-indigo-200';\n    case 'mp3':\n    case 'wav':\n      return 'bg-purple-100 text-purple-700 border-purple-200';\n    default:\n      return 'bg-slate-100 text-slate-700 border-slate-200';\n  }\n};\n\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport const formatDate = (dateString: string): string => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));\n  \n  if (diffInDays === 0) return 'Today';\n  if (diffInDays === 1) return 'Yesterday';\n  if (diffInDays < 7) return `${diffInDays} days ago`;\n  if (diffInDays < 30) return `${Math.floor(diffInDays / 7)} weeks ago`;\n  if (diffInDays < 365) return `${Math.floor(diffInDays / 30)} months ago`;\n  return `${Math.floor(diffInDays / 365)} years ago`;\n};\n\nexport const generateFileColors = (index: number) => {\n  const colors = [\n    { color: 'from-red-400 to-pink-500', bgColor: 'bg-gradient-to-br from-red-50 to-pink-50', borderColor: 'border-red-200' },\n    { color: 'from-blue-400 to-cyan-500', bgColor: 'bg-gradient-to-br from-blue-50 to-cyan-50', borderColor: 'border-blue-200' },\n    { color: 'from-green-400 to-emerald-500', bgColor: 'bg-gradient-to-br from-green-50 to-emerald-50', borderColor: 'border-green-200' },\n    { color: 'from-purple-400 to-violet-500', bgColor: 'bg-gradient-to-br from-purple-50 to-violet-50', borderColor: 'border-purple-200' },\n    { color: 'from-orange-400 to-amber-500', bgColor: 'bg-gradient-to-br from-orange-50 to-amber-50', borderColor: 'border-orange-200' },\n    { color: 'from-indigo-400 to-blue-500', bgColor: 'bg-gradient-to-br from-indigo-50 to-blue-50', borderColor: 'border-indigo-200' },\n    { color: 'from-pink-400 to-rose-500', bgColor: 'bg-gradient-to-br from-pink-50 to-rose-50', borderColor: 'border-pink-200' },\n    { color: 'from-teal-400 to-cyan-500', bgColor: 'bg-gradient-to-br from-teal-50 to-cyan-50', borderColor: 'border-teal-200' }\n  ];\n  return colors[index % colors.length];\n};\n\n// Main File Storage Component\nexport default function FileStorage() {\n  const params = useParams();\n  const projectId = params.projectId as string;\n  \n  // State management\n  const [files, setFiles] = useState<FileItem[]>([]);\n  const [filteredFiles, setFilteredFiles] = useState<FileItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState<string | null>(null);\n  const [uploadError, setUploadError] = useState<string | null>(null);\n  \n  // UI state\n  const [viewMode, setViewMode] = useState<ViewMode>('list');\n  const [sortBy, setSortBy] = useState<SortOption>('date');\n  const [filterBy, setFilterBy] = useState<FilterOption>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState<Set<string>>(new Set());\n  const [showDetails, setShowDetails] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<FileItem | null>(null);\n  \n  // Storage stats\n  const [storageStats, setStorageStats] = useState<StorageStats>({\n    totalUsed: 104.6 * 1024 * 1024 * 1024, // 104.6 GB\n    totalAvailable: 256 * 1024 * 1024 * 1024, // 256 GB\n    breakdown: {\n      documents: { count: 42, size: 112.8 * 1024 * 1024 },\n      images: { count: 75, size: 286.8 * 1024 * 1024 },\n      videos: { count: 32, size: 1639.2 * 1024 * 1024 },\n      audio: { count: 20, size: 23.6 * 1024 * 1024 },\n      archives: { count: 14, size: 213.3 * 1024 * 1024 },\n    }\n  });\n  \n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Fetch files from backend\n  const fetchFiles = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axiosApi.get(`projects/${projectId}/`);\n      const project = response.data;\n      \n      // Transform backend files to frontend format\n      const transformedFiles: FileItem[] = project.uploaded_files.map((file: any, index: number) => ({\n        id: file.id,\n        name: file.original_name || file.file.split('/').pop(),\n        type: file.file.split('.').pop().toLowerCase() as FileItem['type'],\n        size: file.file_size || 0,\n        uploadedAt: formatDate(file.uploaded_at),\n        lastModified: formatDate(file.uploaded_at),\n        status: file.processing_status === 'completed' ? 'completed' : \n                file.processing_status === 'failed' ? 'error' : 'processing',\n        isFavorite: false, // TODO: Add favorite functionality\n        tags: [], // TODO: Add tags functionality\n        visibility: 'private' as const,\n        versionCount: 1, // TODO: Add version tracking\n        sharedWith: [], // TODO: Add sharing functionality\n        permissions: ['read'], // TODO: Add permissions\n        ...generateFileColors(index)\n      }));\n      \n      setFiles(transformedFiles);\n    } catch (err: any) {\n      console.error('Failed to fetch files:', err);\n      setError(err.response?.data?.detail || 'Failed to load files');\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId]);\n\n  // Handle file upload\n  const handleFileUpload = useCallback(async (files: FileList) => {\n    if (!files.length) return;\n    \n    const file = files[0];\n    setUploading(true);\n    setUploadProgress(0);\n    setUploadError(null);\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Simulate progress\n      const progressInterval = setInterval(() => {\n        setUploadProgress(prev => Math.min(prev + 10, 90));\n      }, 200);\n\n      const response = await axiosApi.post(\n        `/projects/${projectId}/upload_file/`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n          onUploadProgress: (progressEvent) => {\n            if (progressEvent.total) {\n              const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n              setUploadProgress(progress);\n            }\n          },\n        }\n      );\n\n      clearInterval(progressInterval);\n      setUploadProgress(100);\n\n      // Refresh files\n      await fetchFiles();\n      \n      // Reset form\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } catch (err: any) {\n      console.error('Upload failed:', err);\n      setUploadError(err.response?.data?.detail || 'Upload failed');\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n    }\n  }, [projectId, fetchFiles]);\n\n  // Handle file selection\n  const handleFileSelect = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      handleFileUpload(e.target.files);\n    }\n  }, [handleFileUpload]);\n\n  // Filter and sort files\n  useEffect(() => {\n    let filtered = [...files];\n\n    // Apply search filter\n    if (searchQuery) {\n      filtered = filtered.filter(file => \n        file.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    // Apply type filter\n    if (filterBy !== 'all') {\n      filtered = filtered.filter(file => {\n        switch (filterBy) {\n          case 'documents':\n            return ['pdf', 'docx', 'pptx', 'txt', 'md'].includes(file.type);\n          case 'images':\n            return ['png', 'jpg', 'jpeg'].includes(file.type);\n          case 'videos':\n            return ['mp4'].includes(file.type);\n          case 'audio':\n            return ['mp3', 'wav'].includes(file.type);\n          case 'archives':\n            return ['zip'].includes(file.type);\n          case 'favorites':\n            return file.isFavorite;\n          default:\n            return true;\n        }\n      });\n    }\n\n    // Apply sorting\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.name.localeCompare(b.name);\n        case 'size':\n          return b.size - a.size;\n        case 'date':\n          return new Date(b.lastModified).getTime() - new Date(a.lastModified).getTime();\n        case 'type':\n          return a.type.localeCompare(b.type);\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredFiles(filtered);\n  }, [files, searchQuery, filterBy, sortBy]);\n\n  // Load files on mount\n  useEffect(() => {\n    fetchFiles();\n  }, [fetchFiles]);\n\n  // File actions\n  const handleToggleFavorite = (fileId: string) => {\n    setFiles(prev => prev.map(file => \n      file.id === fileId ? { ...file, isFavorite: !file.isFavorite } : file\n    ));\n  };\n\n  const handleSelectFile = (fileId: string) => {\n    setSelectedFiles(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(fileId)) {\n        newSet.delete(fileId);\n      } else {\n        newSet.add(fileId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleSelectAll = () => {\n    if (selectedFiles.size === filteredFiles.length) {\n      setSelectedFiles(new Set());\n    } else {\n      setSelectedFiles(new Set(filteredFiles.map(f => f.id)));\n    }\n  };\n\n  const handleFileAction = (action: string, fileId: string) => {\n    const file = files.find(f => f.id === fileId);\n    if (!file) return;\n\n    switch (action) {\n      case 'preview':\n        setSelectedFile(file);\n        setShowDetails(true);\n        break;\n      case 'download':\n        // TODO: Implement download\n        console.log('Download file:', file.name);\n        break;\n      case 'share':\n        // TODO: Implement sharing\n        console.log('Share file:', file.name);\n        break;\n      case 'rename':\n        // TODO: Implement rename\n        console.log('Rename file:', file.name);\n        break;\n    }\n  };\n\n  const handleBulkAction = (action: string) => {\n    const selectedFileIds = Array.from(selectedFiles);\n    console.log(`Bulk ${action}:`, selectedFileIds);\n    // TODO: Implement bulk actions\n  };\n\n  // Render loading state\n  if (loading) {\n    return <FileStorageLoading />;\n  }\n\n  // Render error state\n  if (error) {\n    return <FileStorageError error={error} onRetry={fetchFiles} />;\n  }\n\n  // Render empty state\n  if (files.length === 0) {\n    return <FileStorageEmpty onUpload={() => fileInputRef.current?.click()} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Header */}\n      <div className=\"border-b border-gray-200 bg-white\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">All files</h1>\n              <p className=\"text-sm text-gray-500 mt-1\">All of your files are displayed here</p>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Button \n                variant=\"ocean\" \n                size=\"lg\"\n                onClick={() => fileInputRef.current?.click()}\n                disabled={uploading}\n                className=\"font-semibold\"\n              >\n                <Upload className=\"h-5 w-5 mr-2\" />\n                Upload file\n              </Button>\n              <Button variant=\"outline\" size=\"lg\">\n                <Plus className=\"h-5 w-5 mr-2\" />\n                Create\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex\">\n        {/* Main Content */}\n        <div className=\"flex-1 p-6\">\n          {/* Recently Modified Section */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">Recently modified</h2>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-ocean-600 hover:text-ocean-700\">\n                View all\n                <ArrowRight className=\"h-4 w-4 ml-1\" />\n              </Button>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {filteredFiles.slice(0, 3).map((file) => (\n                <RecentFileCard key={file.id} file={file} />\n              ))}\n            </div>\n          </div>\n\n          {/* All Files Section */}\n          <div>\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">All files</h2>\n              \n              {/* Controls */}\n              <div className=\"flex items-center gap-4\">\n                {/* Search */}\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <Input\n                    placeholder=\"Search files...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10 w-64\"\n                  />\n                </div>\n\n                {/* Filter */}\n                <Select value={filterBy} onValueChange={(value) => setFilterBy(value as FilterOption)}>\n                  <SelectTrigger className=\"w-40\">\n                    <Filter className=\"h-4 w-4 mr-2\" />\n                    <SelectValue placeholder=\"Filter by type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All files</SelectItem>\n                    <SelectItem value=\"documents\">Documents</SelectItem>\n                    <SelectItem value=\"images\">Images</SelectItem>\n                    <SelectItem value=\"videos\">Videos</SelectItem>\n                    <SelectItem value=\"audio\">Audio</SelectItem>\n                    <SelectItem value=\"archives\">Archives</SelectItem>\n                    <SelectItem value=\"favorites\">Favorites</SelectItem>\n                  </SelectContent>\n                </Select>\n\n                {/* Sort */}\n                <Select value={sortBy} onValueChange={(value) => setSortBy(value as SortOption)}>\n                  <SelectTrigger className=\"w-40\">\n                    <SelectValue placeholder=\"Sort by\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"name\">Name</SelectItem>\n                    <SelectItem value=\"size\">Size</SelectItem>\n                    <SelectItem value=\"date\">Date</SelectItem>\n                    <SelectItem value=\"type\">Type</SelectItem>\n                  </SelectContent>\n                </Select>\n\n                {/* View Toggle */}\n                <div className=\"flex items-center border border-gray-200 rounded-lg overflow-hidden\">\n                  <Button\n                    variant={viewMode === 'list' ? 'default' : 'ghost'}\n                    size=\"sm\"\n                    onClick={() => setViewMode('list')}\n                    className=\"rounded-none border-0\"\n                  >\n                    <List className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant={viewMode === 'grid' ? 'default' : 'ghost'}\n                    size=\"sm\"\n                    onClick={() => setViewMode('grid')}\n                    className=\"rounded-none border-0\"\n                  >\n                    <Grid3X3 className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            {/* File Type Breakdown */}\n            <div className=\"mb-6\">\n              <FileTypeBreakdown files={filteredFiles} />\n            </div>\n\n            {/* Bulk Actions */}\n            {selectedFiles.size > 0 && (\n              <div className=\"mb-4 p-3 bg-ocean-50 border border-ocean-200 rounded-lg\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-ocean-700\">\n                    {selectedFiles.size} file{selectedFiles.size !== 1 ? 's' : ''} selected\n                  </span>\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleBulkAction('favorite')}\n                    >\n                      <Star className=\"h-4 w-4 mr-1\" />\n                      Favorite\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleBulkAction('download')}\n                    >\n                      <Download className=\"h-4 w-4 mr-1\" />\n                      Download\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleBulkAction('delete')}\n                      className=\"text-red-600 hover:text-red-700\"\n                    >\n                      <Trash2 className=\"h-4 w-4 mr-1\" />\n                      Delete\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Files Display */}\n            {viewMode === 'list' ? (\n              <FileListView \n                files={filteredFiles}\n                selectedFiles={selectedFiles}\n                onSelectFile={handleSelectFile}\n                onSelectAll={handleSelectAll}\n                onToggleFavorite={handleToggleFavorite}\n                onFileAction={handleFileAction}\n              />\n            ) : (\n              <FileGridView \n                files={filteredFiles}\n                selectedFiles={selectedFiles}\n                onSelectFile={handleSelectFile}\n                onToggleFavorite={handleToggleFavorite}\n                onFileAction={handleFileAction}\n              />\n            )}\n          </div>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"w-80 border-l border-gray-200 bg-gray-50 p-6\">\n          <StorageUsageSidebar stats={storageStats} />\n        </div>\n      </div>\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        className=\"hidden\"\n        onChange={handleFileSelect}\n        accept=\".pdf,.docx,.pptx,.txt,.png,.jpg,.jpeg,.csv,.md,.zip,.mp4,.mp3,.wav\"\n      />\n\n      {/* Floating Upload Button (Mobile) */}\n      <div className=\"fixed bottom-6 right-6 z-50 md:hidden\">\n        <Button\n          variant=\"ocean\"\n          size=\"lg\"\n          onClick={() => fileInputRef.current?.click()}\n          disabled={uploading}\n          className=\"rounded-full shadow-lg h-14 w-14 p-0\"\n        >\n          <Upload className=\"h-6 w-6\" />\n        </Button>\n      </div>\n\n      {/* Upload Progress */}\n      {uploading && (\n        <div className=\"fixed bottom-4 right-4 bg-white border border-gray-200 rounded-lg shadow-lg p-4 w-80 z-50\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium\">Uploading...</span>\n            <span className=\"text-sm text-gray-500\">{uploadProgress}%</span>\n          </div>\n          <Progress value={uploadProgress} className=\"h-2\" />\n        </div>\n      )}\n\n      {/* File Details Side Panel */}\n      {showDetails && selectedFile && (\n        <FileDetailsPanel \n          file={selectedFile}\n          onClose={() => setShowDetails(false)}\n        />\n      )}\n    </div>\n  );\n}"],"names":["FileStorage","formatDate","formatFileSize","generateFileColors","getFileIcon","getFileTypeColor","type","FileText","className","Image","FileSpreadsheet","Archive","FileVideo","FileAudio","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","dateString","date","Date","now","diffInDays","getTime","index","colors","color","bgColor","borderColor","length","params","useParams","projectId","files","setFiles","useState","filteredFiles","setFilteredFiles","loading","setLoading","uploading","setUploading","uploadProgress","setUploadProgress","error","setError","uploadError","setUploadError","viewMode","setViewMode","sortBy","setSortBy","filterBy","setFilterBy","searchQuery","setSearchQuery","selectedFiles","setSelectedFiles","Set","showDetails","setShowDetails","selectedFile","setSelectedFile","storageStats","setStorageStats","totalUsed","totalAvailable","breakdown","documents","count","size","images","videos","audio","archives","fileInputRef","useRef","fetchFiles","useCallback","response","axiosApi","get","project","data","transformedFiles","uploaded_files","map","file","id","name","original_name","split","pop","toLowerCase","file_size","uploadedAt","uploaded_at","lastModified","status","processing_status","isFavorite","tags","visibility","versionCount","sharedWith","permissions","err","console","detail","handleFileUpload","formData","FormData","append","progressInterval","setInterval","prev","min","post","headers","onUploadProgress","progressEvent","total","progress","round","loaded","clearInterval","current","value","handleFileSelect","e","target","useEffect","filtered","filter","includes","sort","a","b","localeCompare","handleToggleFavorite","fileId","handleSelectFile","newSet","has","delete","add","handleSelectAll","f","handleFileAction","action","find","handleBulkAction","selectedFileIds","Array","from","FileStorageLoading","FileStorageError","onRetry","FileStorageEmpty","onUpload","click","div","h1","p","Button","variant","onClick","disabled","Upload","Plus","h2","ArrowRight","slice","RecentFileCard","Search","Input","placeholder","onChange","Select","onValueChange","SelectTrigger","Filter","SelectValue","SelectContent","SelectItem","List","Grid3X3","FileTypeBreakdown","span","Star","Download","Trash2","FileListView","onSelectFile","onSelectAll","onToggleFavorite","onFileAction","FileGridView","StorageUsageSidebar","stats","input","ref","accept","Progress","FileDetailsPanel","onClose"],"mappings":"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"}