{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/components/wizard/shared/SourceSelectionStep.tsx"],"sourcesContent":["/**\n * Shared Source Selection Step Component\n * \n * Reusable component for selecting sources across different wizards\n * (quiz, flashcard, diagnostic creation). Supports multiple source types\n * including flashcards, files, and study materials.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { \n  Brain,\n  Upload,\n  ListChecks,\n  Loader2,\n  Search,\n  X,\n  File,\n  CheckCircle2,\n  BookOpen,\n  FileText,\n  AlertTriangle,\n} from 'lucide-react';\n\n// ============================================================================\n// Types and Interfaces\n// ============================================================================\n\nexport interface SourceConfig {\n  enabled: boolean;\n  count: number;\n  items?: any[];\n  loading?: boolean;\n}\n\nexport interface SourceSelectionConfig {\n  flashcards?: SourceConfig;\n  files?: SourceConfig;\n  studyMaterials?: SourceConfig;\n}\n\nexport interface SelectedSources {\n  flashcards: { ids: string[]; groundOnly: boolean };\n  files: { ids: string[]; groundOnly: boolean };\n  studyMaterials: { ids: string[]; groundOnly: boolean };\n}\n\ninterface SourceSelectionStepProps {\n  sources: SourceSelectionConfig;\n  selectedSources: SelectedSources;\n  onSourcesChange: (sources: SelectedSources) => void;\n  multiSelect?: boolean;\n  showGroundOnlyOption?: boolean;\n  minSources?: number;\n  onFileUpload?: (files: File[]) => void;\n  uploadedFiles?: File[];\n  onRemoveUploadedFile?: (index: number) => void;\n  searchTerm?: string;\n  onSearchChange?: (term: string) => void;\n}\n\n// ============================================================================\n// Source Type Configurations\n// ============================================================================\n\nconst SOURCE_TYPE_CONFIG = {\n  flashcards: {\n    icon: ListChecks,\n    label: 'Flashcard Decks',\n    description: 'Use existing flashcard decks as question sources',\n    color: 'bg-blue-100 text-blue-800',\n    emptyMessage: 'No flashcard decks found in this project',\n  },\n  files: {\n    icon: FileText,\n    label: 'Study Files',\n    description: 'Upload or select files to generate questions from',\n    color: 'bg-green-100 text-green-800',\n    emptyMessage: 'No files found in this project',\n  },\n  studyMaterials: {\n    icon: BookOpen,\n    label: 'Study Materials',\n    description: 'Use study materials and notes as sources',\n    color: 'bg-purple-100 text-purple-800',\n    emptyMessage: 'No study materials found in this project',\n  },\n};\n\n// ============================================================================\n// Utility Functions\n// ============================================================================\n\nconst getFileIcon = (fileName: string) => {\n  const extension = fileName.split('.').pop()?.toLowerCase();\n  switch (extension) {\n    case 'pdf': return '📄';\n    case 'docx':\n    case 'doc': return '📘';\n    case 'txt': return '📝';\n    case 'md': return '📋';\n    default: return '📄';\n  }\n};\n\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nconst formatTimeAgo = (dateString: string): string => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffMs = now.getTime() - date.getTime();\n  const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n  \n  if (diffDays === 0) return 'Today';\n  if (diffDays === 1) return 'Yesterday';\n  if (diffDays < 7) return `${diffDays} days ago`;\n  if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`;\n  return `${Math.floor(diffDays / 30)} months ago`;\n};\n\n// ============================================================================\n// Main Component\n// ============================================================================\n\nexport const SourceSelectionStep: React.FC<SourceSelectionStepProps> = ({\n  sources,\n  selectedSources,\n  onSourcesChange,\n  multiSelect = true,\n  showGroundOnlyOption = true,\n  minSources = 1,\n  onFileUpload,\n  uploadedFiles = [],\n  onRemoveUploadedFile,\n  searchTerm = '',\n  onSearchChange,\n}) => {\n  const [localSearchTerm, setLocalSearchTerm] = useState(searchTerm);\n\n  // Update local search when prop changes\n  useEffect(() => {\n    setLocalSearchTerm(searchTerm);\n  }, [searchTerm]);\n\n  // Handle search term changes\n  const handleSearchChange = (value: string) => {\n    setLocalSearchTerm(value);\n    onSearchChange?.(value);\n  };\n\n  // Filter items based on search term\n  const filterItems = (items: any[] = []) => {\n    if (!localSearchTerm.trim()) return items;\n    const term = localSearchTerm.toLowerCase();\n    return items.filter(item => \n      item.name?.toLowerCase().includes(term) ||\n      item.title?.toLowerCase().includes(term) ||\n      item.description?.toLowerCase().includes(term)\n    );\n  };\n\n  // Handle source selection\n  const handleSourceToggle = (sourceType: keyof SelectedSources, itemId: string) => {\n    const currentIds = selectedSources[sourceType].ids;\n    let newIds: string[];\n\n    if (multiSelect) {\n      newIds = currentIds.includes(itemId)\n        ? currentIds.filter(id => id !== itemId)\n        : [...currentIds, itemId];\n    } else {\n      newIds = currentIds.includes(itemId) ? [] : [itemId];\n    }\n\n    onSourcesChange({\n      ...selectedSources,\n      [sourceType]: {\n        ...selectedSources[sourceType],\n        ids: newIds,\n      },\n    });\n  };\n\n  // Handle ground-only option toggle\n  const handleGroundOnlyToggle = (sourceType: keyof SelectedSources, enabled: boolean) => {\n    onSourcesChange({\n      ...selectedSources,\n      [sourceType]: {\n        ...selectedSources[sourceType],\n        groundOnly: enabled,\n      },\n    });\n  };\n\n  // Calculate total selected sources\n  const totalSelected = Object.values(selectedSources).reduce(\n    (sum, source) => sum + source.ids.length, \n    0\n  ) + uploadedFiles.length;\n\n  const isValidSelection = totalSelected >= minSources;\n\n  // Render source section\n  const renderSourceSection = (sourceType: keyof SelectedSources) => {\n    const config = SOURCE_TYPE_CONFIG[sourceType];\n    const sourceConfig = sources[sourceType];\n    const selectedIds = selectedSources[sourceType].ids;\n    const groundOnly = selectedSources[sourceType].groundOnly;\n\n    if (!sourceConfig?.enabled) return null;\n\n    const Icon = config.icon;\n    const items = filterItems(sourceConfig.items);\n\n    return (\n      <div key={sourceType} className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <Icon className=\"h-5 w-5 text-slate-600\" />\n            <div>\n              <h3 className=\"font-medium text-slate-900\">{config.label}</h3>\n              <p className=\"text-sm text-slate-500\">{config.description}</p>\n            </div>\n          </div>\n          <Badge variant=\"secondary\" className={config.color}>\n            {sourceConfig.count} available\n          </Badge>\n        </div>\n\n        {sourceConfig.loading ? (\n          <div className=\"flex items-center justify-center py-8\">\n            <Loader2 className=\"h-6 w-6 animate-spin text-slate-400\" />\n            <span className=\"ml-2 text-sm text-slate-500\">Loading {config.label.toLowerCase()}...</span>\n          </div>\n        ) : items.length === 0 ? (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>{config.emptyMessage}</AlertDescription>\n          </Alert>\n        ) : (\n          <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n            {items.map((item: any) => {\n              const isSelected = selectedIds.includes(item.id);\n              return (\n                <div\n                  key={item.id}\n                  className={`p-3 border rounded-lg cursor-pointer transition-colors ${\n                    isSelected\n                      ? 'border-blue-300 bg-blue-50'\n                      : 'border-slate-200 hover:border-slate-300'\n                  }`}\n                  onClick={() => handleSourceToggle(sourceType, item.id)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <Checkbox checked={isSelected} readOnly />\n                      <div className=\"flex-1\">\n                        <h4 className=\"font-medium text-slate-900\">\n                          {sourceType === 'files' && getFileIcon(item.name)}\n                          {item.name || item.title}\n                        </h4>\n                        {item.description && (\n                          <p className=\"text-sm text-slate-500 mt-1\">{item.description}</p>\n                        )}\n                        <div className=\"flex items-center gap-4 mt-1 text-xs text-slate-400\">\n                          {item.size && <span>{formatFileSize(item.size)}</span>}\n                          {item.created_at && <span>{formatTimeAgo(item.created_at)}</span>}\n                          {item.flashcard_count && <span>{item.flashcard_count} cards</span>}\n                        </div>\n                      </div>\n                    </div>\n                    {isSelected && <CheckCircle2 className=\"h-5 w-5 text-blue-600\" />}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        {/* Ground-only option */}\n        {showGroundOnlyOption && selectedIds.length > 0 && (\n          <div className=\"flex items-center space-x-2 pt-2 border-t\">\n            <Checkbox\n              id={`ground-only-${sourceType}`}\n              checked={groundOnly}\n              onCheckedChange={(checked) => handleGroundOnlyToggle(sourceType, checked as boolean)}\n            />\n            <Label \n              htmlFor={`ground-only-${sourceType}`}\n              className=\"text-sm text-slate-600 cursor-pointer\"\n            >\n              Only generate questions from selected {config.label.toLowerCase()}\n            </Label>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center space-y-2\">\n        <h2 className=\"text-xl font-semibold text-slate-900\">Choose Sources</h2>\n        <p className=\"text-sm text-slate-600\">\n          Select where questions should be generated from. You can choose multiple sources.\n        </p>\n      </div>\n\n      {/* Search bar */}\n      {(sources.flashcards?.enabled || sources.files?.enabled || sources.studyMaterials?.enabled) && (\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-slate-400\" />\n          <Input\n            placeholder=\"Search sources...\"\n            value={localSearchTerm}\n            onChange={(e) => handleSearchChange(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n      )}\n\n      {/* File upload section (if enabled) */}\n      {sources.files?.enabled && onFileUpload && (\n        <div className=\"space-y-3\">\n          <Label>Upload New Files</Label>\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n            <Upload className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n            <p className=\"text-sm text-gray-600\">Drag & drop files here or click to browse</p>\n            <input \n              type=\"file\" \n              multiple \n              accept=\".pdf,.docx,.txt,.md\"\n              onChange={(e) => onFileUpload(Array.from(e.target.files || []))}\n              className=\"hidden\"\n              id=\"file-upload\"\n            />\n            <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\n              <Button variant=\"outline\" size=\"sm\" className=\"mt-2\">\n                Browse Files\n              </Button>\n            </label>\n          </div>\n\n          {/* Uploaded files list */}\n          {uploadedFiles.length > 0 && (\n            <div className=\"space-y-2\">\n              <Label>Uploaded Files</Label>\n              {uploadedFiles.map((file, index) => (\n                <div key={index} className=\"flex items-center justify-between p-2 bg-green-50 border border-green-200 rounded\">\n                  <div className=\"flex items-center gap-2\">\n                    <File className=\"h-4 w-4 text-green-600\" />\n                    <span className=\"text-sm font-medium\">{file.name}</span>\n                    <span className=\"text-xs text-slate-500\">{formatFileSize(file.size)}</span>\n                  </div>\n                  {onRemoveUploadedFile && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onRemoveUploadedFile(index)}\n                      className=\"h-6 w-6 p-0 text-red-500 hover:text-red-700\"\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Source sections */}\n      <div className=\"space-y-6\">\n        {renderSourceSection('flashcards')}\n        {renderSourceSection('files')}\n        {renderSourceSection('studyMaterials')}\n      </div>\n\n      {/* Selection summary */}\n      <div className=\"bg-slate-50 rounded-lg p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h4 className=\"font-medium text-slate-900\">Selection Summary</h4>\n            <p className=\"text-sm text-slate-500\">\n              {totalSelected} source{totalSelected !== 1 ? 's' : ''} selected\n              {minSources > 1 && ` (minimum ${minSources} required)`}\n            </p>\n          </div>\n          {isValidSelection ? (\n            <CheckCircle2 className=\"h-5 w-5 text-green-600\" />\n          ) : (\n            <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n          )}\n        </div>\n\n        {!isValidSelection && totalSelected < minSources && (\n          <Alert className=\"mt-3\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>\n              Please select at least {minSources} source{minSources !== 1 ? 's' : ''} to continue.\n            </AlertDescription>\n          </Alert>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SourceSelectionStep;\n\n"],"names":["SourceSelectionStep","SOURCE_TYPE_CONFIG","flashcards","icon","ListChecks","label","description","color","emptyMessage","files","FileText","studyMaterials","BookOpen","getFileIcon","fileName","extension","split","pop","toLowerCase","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatTimeAgo","dateString","date","Date","now","diffMs","getTime","diffDays","sources","selectedSources","onSourcesChange","multiSelect","showGroundOnlyOption","minSources","onFileUpload","uploadedFiles","onRemoveUploadedFile","searchTerm","onSearchChange","localSearchTerm","setLocalSearchTerm","useState","useEffect","handleSearchChange","value","filterItems","items","trim","term","filter","item","name","includes","title","handleSourceToggle","sourceType","itemId","currentIds","ids","newIds","id","handleGroundOnlyToggle","enabled","groundOnly","totalSelected","Object","values","reduce","sum","source","length","isValidSelection","renderSourceSection","config","sourceConfig","selectedIds","Icon","div","className","h3","p","Badge","variant","count","loading","Loader2","span","Alert","AlertTriangle","AlertDescription","map","isSelected","onClick","Checkbox","checked","readOnly","h4","size","created_at","flashcard_count","CheckCircle2","onCheckedChange","Label","htmlFor","h2","Search","Input","placeholder","onChange","e","target","Upload","input","type","multiple","accept","Array","from","Button","file","index","File","X"],"mappings":"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"}