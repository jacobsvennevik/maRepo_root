34f161184a63617f0dc4d8a7412e0462
/**
 * Shared Source Selection Step Component
 * 
 * Reusable component for selecting sources across different wizards
 * (quiz, flashcard, diagnostic creation). Supports multiple source types
 * including flashcards, files, and study materials.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    SourceSelectionStep: function() {
        return SourceSelectionStep;
    },
    default: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _button = require("../../ui/button");
const _input = require("../../ui/input");
const _label = require("../../ui/label");
const _badge = require("../../ui/badge");
const _alert = require("../../ui/alert");
const _checkbox = require("../../ui/checkbox");
const _lucidereact = require("lucide-react");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// ============================================================================
// Source Type Configurations
// ============================================================================
const SOURCE_TYPE_CONFIG = {
    flashcards: {
        icon: _lucidereact.ListChecks,
        label: 'Flashcard Decks',
        description: 'Use existing flashcard decks as question sources',
        color: 'bg-blue-100 text-blue-800',
        emptyMessage: 'No flashcard decks found in this project'
    },
    files: {
        icon: _lucidereact.FileText,
        label: 'Study Files',
        description: 'Upload or select files to generate questions from',
        color: 'bg-green-100 text-green-800',
        emptyMessage: 'No files found in this project'
    },
    studyMaterials: {
        icon: _lucidereact.BookOpen,
        label: 'Study Materials',
        description: 'Use study materials and notes as sources',
        color: 'bg-purple-100 text-purple-800',
        emptyMessage: 'No study materials found in this project'
    }
};
// ============================================================================
// Utility Functions
// ============================================================================
const getFileIcon = (fileName)=>{
    const extension = fileName.split('.').pop()?.toLowerCase();
    switch(extension){
        case 'pdf':
            return '📄';
        case 'docx':
        case 'doc':
            return '📘';
        case 'txt':
            return '📝';
        case 'md':
            return '📋';
        default:
            return '📄';
    }
};
const formatFileSize = (bytes)=>{
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = [
        'Bytes',
        'KB',
        'MB',
        'GB'
    ];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
};
const formatTimeAgo = (dateString)=>{
    const date = new Date(dateString);
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
    if (diffDays === 0) return 'Today';
    if (diffDays === 1) return 'Yesterday';
    if (diffDays < 7) return `${diffDays} days ago`;
    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`;
    return `${Math.floor(diffDays / 30)} months ago`;
};
const SourceSelectionStep = ({ sources, selectedSources, onSourcesChange, multiSelect = true, showGroundOnlyOption = true, minSources = 1, onFileUpload, uploadedFiles = [], onRemoveUploadedFile, searchTerm = '', onSearchChange })=>{
    const [localSearchTerm, setLocalSearchTerm] = (0, _react.useState)(searchTerm);
    // Update local search when prop changes
    (0, _react.useEffect)(()=>{
        setLocalSearchTerm(searchTerm);
    }, [
        searchTerm
    ]);
    // Handle search term changes
    const handleSearchChange = (value)=>{
        setLocalSearchTerm(value);
        onSearchChange?.(value);
    };
    // Filter items based on search term
    const filterItems = (items = [])=>{
        if (!localSearchTerm.trim()) return items;
        const term = localSearchTerm.toLowerCase();
        return items.filter((item)=>item.name?.toLowerCase().includes(term) || item.title?.toLowerCase().includes(term) || item.description?.toLowerCase().includes(term));
    };
    // Handle source selection
    const handleSourceToggle = (sourceType, itemId)=>{
        const currentIds = selectedSources[sourceType].ids;
        let newIds;
        if (multiSelect) {
            newIds = currentIds.includes(itemId) ? currentIds.filter((id)=>id !== itemId) : [
                ...currentIds,
                itemId
            ];
        } else {
            newIds = currentIds.includes(itemId) ? [] : [
                itemId
            ];
        }
        onSourcesChange({
            ...selectedSources,
            [sourceType]: {
                ...selectedSources[sourceType],
                ids: newIds
            }
        });
    };
    // Handle ground-only option toggle
    const handleGroundOnlyToggle = (sourceType, enabled)=>{
        onSourcesChange({
            ...selectedSources,
            [sourceType]: {
                ...selectedSources[sourceType],
                groundOnly: enabled
            }
        });
    };
    // Calculate total selected sources
    const totalSelected = Object.values(selectedSources).reduce((sum, source)=>sum + source.ids.length, 0) + uploadedFiles.length;
    const isValidSelection = totalSelected >= minSources;
    // Render source section
    const renderSourceSection = (sourceType)=>{
        const config = SOURCE_TYPE_CONFIG[sourceType];
        const sourceConfig = sources[sourceType];
        const selectedIds = selectedSources[sourceType].ids;
        const groundOnly = selectedSources[sourceType].groundOnly;
        if (!sourceConfig?.enabled) return null;
        const Icon = config.icon;
        const items = filterItems(sourceConfig.items);
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "space-y-3",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-3",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                    className: "h-5 w-5 text-slate-600"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                            className: "font-medium text-slate-900",
                                            children: config.label
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "text-sm text-slate-500",
                                            children: config.description
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                            variant: "secondary",
                            className: config.color,
                            children: [
                                sourceConfig.count,
                                " available"
                            ]
                        })
                    ]
                }),
                sourceConfig.loading ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-center py-8",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                            className: "h-6 w-6 animate-spin text-slate-400"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                            className: "ml-2 text-sm text-slate-500",
                            children: [
                                "Loading ",
                                config.label.toLowerCase(),
                                "..."
                            ]
                        })
                    ]
                }) : items.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.Alert, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                            className: "h-4 w-4"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_alert.AlertDescription, {
                            children: config.emptyMessage
                        })
                    ]
                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "space-y-2 max-h-64 overflow-y-auto",
                    children: items.map((item)=>{
                        const isSelected = selectedIds.includes(item.id);
                        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: `p-3 border rounded-lg cursor-pointer transition-colors ${isSelected ? 'border-blue-300 bg-blue-50' : 'border-slate-200 hover:border-slate-300'}`,
                            onClick: ()=>handleSourceToggle(sourceType, item.id),
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center justify-between",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-3",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                checked: isSelected,
                                                readOnly: true
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex-1",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                                        className: "font-medium text-slate-900",
                                                        children: [
                                                            sourceType === 'files' && getFileIcon(item.name),
                                                            item.name || item.title
                                                        ]
                                                    }),
                                                    item.description && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                        className: "text-sm text-slate-500 mt-1",
                                                        children: item.description
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center gap-4 mt-1 text-xs text-slate-400",
                                                        children: [
                                                            item.size && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                children: formatFileSize(item.size)
                                                            }),
                                                            item.created_at && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                children: formatTimeAgo(item.created_at)
                                                            }),
                                                            item.flashcard_count && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                children: [
                                                                    item.flashcard_count,
                                                                    " cards"
                                                                ]
                                                            })
                                                        ]
                                                    })
                                                ]
                                            })
                                        ]
                                    }),
                                    isSelected && /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle2, {
                                        className: "h-5 w-5 text-blue-600"
                                    })
                                ]
                            })
                        }, item.id);
                    })
                }),
                showGroundOnlyOption && selectedIds.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2 pt-2 border-t",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                            id: `ground-only-${sourceType}`,
                            checked: groundOnly,
                            onCheckedChange: (checked)=>handleGroundOnlyToggle(sourceType, checked)
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                            htmlFor: `ground-only-${sourceType}`,
                            className: "text-sm text-slate-600 cursor-pointer",
                            children: [
                                "Only generate questions from selected ",
                                config.label.toLowerCase()
                            ]
                        })
                    ]
                })
            ]
        }, sourceType);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center space-y-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                        className: "text-xl font-semibold text-slate-900",
                        children: "Choose Sources"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-sm text-slate-600",
                        children: "Select where questions should be generated from. You can choose multiple sources."
                    })
                ]
            }),
            (sources.flashcards?.enabled || sources.files?.enabled || sources.studyMaterials?.enabled) && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "relative",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                        className: "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-slate-400"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                        placeholder: "Search sources...",
                        value: localSearchTerm,
                        onChange: (e)=>handleSearchChange(e.target.value),
                        className: "pl-10"
                    })
                ]
            }),
            sources.files?.enabled && onFileUpload && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "space-y-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                        children: "Upload New Files"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "border-2 border-dashed border-gray-300 rounded-lg p-6 text-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Upload, {
                                className: "h-8 w-8 text-gray-400 mx-auto mb-2"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-sm text-gray-600",
                                children: "Drag & drop files here or click to browse"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                type: "file",
                                multiple: true,
                                accept: ".pdf,.docx,.txt,.md",
                                onChange: (e)=>onFileUpload(Array.from(e.target.files || [])),
                                className: "hidden",
                                id: "file-upload"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                htmlFor: "file-upload",
                                className: "cursor-pointer",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    variant: "outline",
                                    size: "sm",
                                    className: "mt-2",
                                    children: "Browse Files"
                                })
                            })
                        ]
                    }),
                    uploadedFiles.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                children: "Uploaded Files"
                            }),
                            uploadedFiles.map((file, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between p-2 bg-green-50 border border-green-200 rounded",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.File, {
                                                    className: "h-4 w-4 text-green-600"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-sm font-medium",
                                                    children: file.name
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-xs text-slate-500",
                                                    children: formatFileSize(file.size)
                                                })
                                            ]
                                        }),
                                        onRemoveUploadedFile && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "ghost",
                                            size: "sm",
                                            onClick: ()=>onRemoveUploadedFile(index),
                                            className: "h-6 w-6 p-0 text-red-500 hover:text-red-700",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                                className: "h-4 w-4"
                                            })
                                        })
                                    ]
                                }, index))
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "space-y-6",
                children: [
                    renderSourceSection('flashcards'),
                    renderSourceSection('files'),
                    renderSourceSection('studyMaterials')
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "bg-slate-50 rounded-lg p-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                        className: "font-medium text-slate-900",
                                        children: "Selection Summary"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                        className: "text-sm text-slate-500",
                                        children: [
                                            totalSelected,
                                            " source",
                                            totalSelected !== 1 ? 's' : '',
                                            " selected",
                                            minSources > 1 && ` (minimum ${minSources} required)`
                                        ]
                                    })
                                ]
                            }),
                            isValidSelection ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle2, {
                                className: "h-5 w-5 text-green-600"
                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                                className: "h-5 w-5 text-orange-500"
                            })
                        ]
                    }),
                    !isValidSelection && totalSelected < minSources && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.Alert, {
                        className: "mt-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                                className: "h-4 w-4"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.AlertDescription, {
                                children: [
                                    "Please select at least ",
                                    minSources,
                                    " source",
                                    minSources !== 1 ? 's' : '',
                                    " to continue."
                                ]
                            })
                        ]
                    })
                ]
            })
        ]
    });
};
const _default = SourceSelectionStep;

//# sourceMappingURL=data:application/json;base64,