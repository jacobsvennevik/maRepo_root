{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/components/ui/tag-badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Badge } from \"./badge\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface TagBadgeProps {\n  tag: string;\n  className?: string;\n  variant?: \"default\" | \"secondary\" | \"outline\";\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\nconst tagBadgeVariants = {\n  size: {\n    sm: \"text-xs px-2 py-0.5\",\n    md: \"text-sm px-2.5 py-1\",\n    lg: \"text-base px-3 py-1.5\",\n  },\n};\n\nexport function TagBadge({\n  tag,\n  className,\n  variant = \"secondary\",\n  size = \"sm\",\n}: TagBadgeProps) {\n  return (\n    <Badge\n      variant={variant}\n      className={cn(\n        tagBadgeVariants.size[size],\n        \"cursor-default select-none\",\n        className,\n      )}\n    >\n      {tag}\n    </Badge>\n  );\n}\n\nexport interface TagBadgeListProps {\n  tags: string[];\n  className?: string;\n  maxTags?: number;\n  showMore?: boolean;\n  variant?: \"default\" | \"secondary\" | \"outline\";\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\nexport function TagBadgeList({\n  tags,\n  className,\n  maxTags = 5,\n  showMore = true,\n  variant = \"secondary\",\n  size = \"sm\",\n}: TagBadgeListProps) {\n  if (!tags || tags.length === 0) {\n    return null;\n  }\n\n  const displayTags = tags.slice(0, maxTags);\n  const remainingCount = tags.length - maxTags;\n\n  return (\n    <div className={cn(\"flex flex-wrap gap-1\", className)}>\n      {displayTags.map((tag, index) => (\n        <TagBadge\n          key={`${tag}-${index}`}\n          tag={tag}\n          variant={variant}\n          size={size}\n        />\n      ))}\n      {showMore && remainingCount > 0 && (\n        <Badge\n          variant=\"outline\"\n          className={cn(\n            tagBadgeVariants.size[size],\n            \"cursor-default select-none text-muted-foreground\",\n          )}\n        >\n          +{remainingCount} more\n        </Badge>\n      )}\n    </div>\n  );\n}\n"],"names":["TagBadge","TagBadgeList","tagBadgeVariants","size","sm","md","lg","tag","className","variant","Badge","cn","tags","maxTags","showMore","length","displayTags","slice","remainingCount","div","map","index"],"mappings":";;;;;;;;;;;IAmBgBA,QAAQ;eAARA;;IA6BAC,YAAY;eAAZA;;;;+DAhDO;uBACD;uBACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASnB,MAAMC,mBAAmB;IACvBC,MAAM;QACJC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;AACF;AAEO,SAASN,SAAS,EACvBO,GAAG,EACHC,SAAS,EACTC,UAAU,WAAW,EACrBN,OAAO,IAAI,EACG;IACd,qBACE,qBAACO,YAAK;QACJD,SAASA;QACTD,WAAWG,IAAAA,SAAE,EACXT,iBAAiBC,IAAI,CAACA,KAAK,EAC3B,8BACAK;kBAGDD;;AAGP;AAWO,SAASN,aAAa,EAC3BW,IAAI,EACJJ,SAAS,EACTK,UAAU,CAAC,EACXC,WAAW,IAAI,EACfL,UAAU,WAAW,EACrBN,OAAO,IAAI,EACO;IAClB,IAAI,CAACS,QAAQA,KAAKG,MAAM,KAAK,GAAG;QAC9B,OAAO;IACT;IAEA,MAAMC,cAAcJ,KAAKK,KAAK,CAAC,GAAGJ;IAClC,MAAMK,iBAAiBN,KAAKG,MAAM,GAAGF;IAErC,qBACE,sBAACM;QAAIX,WAAWG,IAAAA,SAAE,EAAC,wBAAwBH;;YACxCQ,YAAYI,GAAG,CAAC,CAACb,KAAKc,sBACrB,qBAACrB;oBAECO,KAAKA;oBACLE,SAASA;oBACTN,MAAMA;mBAHD,GAAGI,IAAI,CAAC,EAAEc,OAAO;YAMzBP,YAAYI,iBAAiB,mBAC5B,sBAACR,YAAK;gBACJD,SAAQ;gBACRD,WAAWG,IAAAA,SAAE,EACXT,iBAAiBC,IAAI,CAACA,KAAK,EAC3B;;oBAEH;oBACGe;oBAAe;;;;;AAK3B"}