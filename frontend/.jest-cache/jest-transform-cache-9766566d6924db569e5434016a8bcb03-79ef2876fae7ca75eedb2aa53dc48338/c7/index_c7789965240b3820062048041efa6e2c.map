{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/quiz/utils/index.ts"],"sourcesContent":["/**\n * Quiz Feature Utilities\n * \n * Shared utility functions for the quiz feature to improve code reuse\n * and maintainability.\n */\n\nimport { DIFFICULTY_LEVELS, TIME_PER_QUESTION, QUESTION_MIX_RATIOS, GRADE_THRESHOLDS, TIME_EFFICIENCY_THRESHOLDS } from '../constants';\n\n// ============================================================================\n// File Handling Utilities\n// ============================================================================\n\nexport const getFileIcon = (fileName: string, fileType?: string) => {\n  const extension = fileType || fileName.split('.').pop()?.toLowerCase();\n  \n  const iconMap: Record<string, string> = {\n    pdf: 'text-red-500',\n    docx: 'text-blue-500',\n    doc: 'text-blue-500',\n    txt: 'text-gray-500',\n    jpg: 'text-green-500',\n    jpeg: 'text-green-500',\n    png: 'text-green-500',\n    tsx: 'text-purple-500',\n    ts: 'text-purple-500',\n    js: 'text-purple-500',\n    jsx: 'text-purple-500',\n    html: 'text-orange-500',\n    css: 'text-orange-500',\n  };\n  \n  return iconMap[extension || ''] || 'text-gray-500';\n};\n\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport const formatTimeAgo = (dateString: string): string => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n  \n  if (diffInSeconds < 60) return 'Just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\n  return `${Math.floor(diffInSeconds / 86400)}d ago`;\n};\n\nexport const isValidFileType = (file: File, allowedTypes: string[]): boolean => {\n  const fileExtension = file.name.split('.').pop()?.toLowerCase();\n  return allowedTypes.includes(fileExtension || '');\n};\n\nexport const getFileExtension = (fileName: string): string => {\n  return fileName.split('.').pop()?.toLowerCase() || '';\n};\n\n// ============================================================================\n// Quiz Configuration Utilities\n// ============================================================================\n\nexport const getDifficultySuggestions = (topic: string): string => {\n  const topicLower = topic.toLowerCase();\n  \n  if (topicLower.includes('basic') || topicLower.includes('intro') || topicLower.includes('fundamental')) {\n    return DIFFICULTY_LEVELS.BEGINNER;\n  }\n  \n  if (topicLower.includes('advanced') || topicLower.includes('expert') || topicLower.includes('research')) {\n    return DIFFICULTY_LEVELS.ADVANCED;\n  }\n  \n  if (topicLower.includes('master') || topicLower.includes('phd') || topicLower.includes('doctoral')) {\n    return DIFFICULTY_LEVELS.EXPERT;\n  }\n  \n  return DIFFICULTY_LEVELS.INTERMEDIATE;\n};\n\nexport const getSuggestedTimeLimit = (maxQuestions: number, difficulty: string): number => {\n  const baseTimePerQuestion = TIME_PER_QUESTION[difficulty as keyof typeof TIME_PER_QUESTION] || 90;\n  return maxQuestions * baseTimePerQuestion;\n};\n\nexport const getSuggestedQuestionMix = (maxQuestions: number, difficulty: string) => {\n  const ratio = QUESTION_MIX_RATIOS[difficulty as keyof typeof QUESTION_MIX_RATIOS] || QUESTION_MIX_RATIOS[DIFFICULTY_LEVELS.INTERMEDIATE];\n  \n  return {\n    MCQ: Math.round(maxQuestions * ratio.MCQ),\n    SHORT_ANSWER: Math.round(maxQuestions * ratio.SHORT_ANSWER),\n    PRINCIPLE: Math.round(maxQuestions * ratio.PRINCIPLE),\n  };\n};\n\nexport const getQuestionMixTotal = (questionMix: any): number => {\n  if (!questionMix) return 0;\n  return (questionMix.MCQ || 0) + (questionMix.SHORT_ANSWER || 0) + (questionMix.PRINCIPLE || 0);\n};\n\nexport const validateQuestionMix = (questionMix: any, maxQuestions: number): boolean => {\n  if (!questionMix) return true;\n  return getQuestionMixTotal(questionMix) === maxQuestions;\n};\n\n// ============================================================================\n// Scoring and Analytics Utilities\n// ============================================================================\n\nexport const calculateGrade = (score: number): 'A' | 'B' | 'C' | 'D' | 'F' => {\n  if (score >= GRADE_THRESHOLDS.A) return 'A';\n  if (score >= GRADE_THRESHOLDS.B) return 'B';\n  if (score >= GRADE_THRESHOLDS.C) return 'C';\n  if (score >= GRADE_THRESHOLDS.D) return 'D';\n  return 'F';\n};\n\nexport const calculateTimeEfficiency = (avgTimePerQuestion: number): 'fast' | 'normal' | 'slow' => {\n  if (avgTimePerQuestion <= TIME_EFFICIENCY_THRESHOLDS.FAST) return 'fast';\n  if (avgTimePerQuestion <= TIME_EFFICIENCY_THRESHOLDS.NORMAL) return 'normal';\n  return 'slow';\n};\n\nexport const calculateAccuracy = (correctAnswers: number, totalQuestions: number): number => {\n  if (totalQuestions === 0) return 0;\n  return Math.round((correctAnswers / totalQuestions) * 100);\n};\n\nexport const calculateAverageScore = (scores: number[]): number => {\n  if (scores.length === 0) return 0;\n  return Math.round(scores.reduce((sum, score) => sum + score, 0) / scores.length);\n};\n\n// ============================================================================\n// Time and Duration Utilities\n// ============================================================================\n\nexport const formatDuration = (seconds: number): string => {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = seconds % 60;\n  \n  if (hours > 0) {\n    return `${hours}h ${minutes}m ${secs}s`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${secs}s`;\n  } else {\n    return `${secs}s`;\n  }\n};\n\nexport const formatTimeLimit = (seconds: number): string => {\n  const minutes = Math.round(seconds / 60);\n  return `${minutes} min`;\n};\n\nexport const parseTimeLimit = (minutes: number): number => {\n  return minutes * 60;\n};\n\nexport const getTimeRemaining = (startTime: Date, timeLimitSec: number): number => {\n  const elapsed = Math.floor((Date.now() - startTime.getTime()) / 1000);\n  return Math.max(0, timeLimitSec - elapsed);\n};\n\n// ============================================================================\n// Validation Utilities\n// ============================================================================\n\nexport const validateQuizTitle = (title: string): string[] => {\n  const errors: string[] = [];\n  \n  if (!title || title.trim().length === 0) {\n    errors.push('Title is required');\n  } else if (title.length > 100) {\n    errors.push('Title must be less than 100 characters');\n  }\n  \n  return errors;\n};\n\nexport const validateQuizTopic = (topic: string): string[] => {\n  const errors: string[] = [];\n  \n  if (!topic || topic.trim().length === 0) {\n    errors.push('Topic is required');\n  } else if (topic.length > 200) {\n    errors.push('Topic must be less than 200 characters');\n  }\n  \n  return errors;\n};\n\nexport const validateQuestionCount = (count: number): string[] => {\n  const errors: string[] = [];\n  \n  if (count < 1) {\n    errors.push('Must have at least 1 question');\n  } else if (count > 50) {\n    errors.push('Cannot have more than 50 questions');\n  }\n  \n  return errors;\n};\n\nexport const validateTimeLimit = (seconds: number): string[] => {\n  const errors: string[] = [];\n  \n  if (seconds < 60) {\n    errors.push('Time limit must be at least 60 seconds');\n  } else if (seconds > 7200) {\n    errors.push('Time limit cannot exceed 2 hours');\n  }\n  \n  return errors;\n};\n\n// ============================================================================\n// UI Utilities\n// ============================================================================\n\nexport const getStatusColor = (status: string): string => {\n  const colorMap: Record<string, string> = {\n    draft: 'gray',\n    active: 'blue',\n    completed: 'green',\n    archived: 'orange',\n  };\n  \n  return colorMap[status] || 'gray';\n};\n\nexport const getDifficultyColor = (difficulty: number): string => {\n  if (difficulty <= 2) return 'green';\n  if (difficulty <= 3) return 'yellow';\n  if (difficulty <= 4) return 'orange';\n  return 'red';\n};\n\nexport const getBloomLevelDescription = (level: string): string => {\n  const descriptions: Record<string, string> = {\n    Remember: 'Recall facts and basic concepts',\n    Understand: 'Explain ideas or concepts',\n    Apply: 'Use information in new situations',\n    Analyze: 'Draw connections among ideas',\n    Evaluate: 'Justify decisions or courses of action',\n    Create: 'Produce new or original work',\n  };\n  \n  return descriptions[level] || 'Unknown level';\n};\n\nexport const formatPercentage = (value: number, decimals: number = 1): string => {\n  return `${value.toFixed(decimals)}%`;\n};\n\n// ============================================================================\n// Test Mode Utilities\n// ============================================================================\n\nexport const isTestModeActive = (): boolean => {\n  // Check if running in test environment\n  if (process.env.NODE_ENV === \"test\") {\n    return true;\n  }\n\n  // Check for explicit test mode flag in development\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    process.env.NEXT_PUBLIC_TEST_MODE === \"true\"\n  ) {\n    return true;\n  }\n\n  // Check for localhost and test mode\n  if (\n    typeof window !== \"undefined\" &&\n    window.location.hostname === \"localhost\" &&\n    process.env.NEXT_PUBLIC_TEST_MODE === \"true\"\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\n// ============================================================================\n// Data Transformation Utilities\n// ============================================================================\n\nexport const deriveTitleFromSource = (method: string, uploadedFiles: File[], selectedFiles: any[]): string => {\n  if (method === 'files') {\n    if (uploadedFiles.length > 0) {\n      const base = uploadedFiles[0].name.replace(/\\.[^.]+$/, '');\n      return `${base} Quiz`;\n    }\n    const picked = selectedFiles.find(f => f.id);\n    if (picked) {\n      const base = picked.name.replace(/\\.[^.]+$/, '');\n      return `${base} Quiz`;\n    }\n  }\n  return '';\n};\n\nexport const generateQuizId = (): string => {\n  return `quiz_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n};\n\nexport const sanitizeFileName = (fileName: string): string => {\n  return fileName.replace(/[^a-zA-Z0-9.-]/g, '_');\n};\n\n// ============================================================================\n// Local Storage Utilities\n// ============================================================================\n\nexport const saveToLocalStorage = (key: string, data: any): void => {\n  try {\n    localStorage.setItem(key, JSON.stringify(data));\n  } catch (error) {\n    console.warn('Failed to save to localStorage:', error);\n  }\n};\n\nexport const loadFromLocalStorage = <T>(key: string, defaultValue: T): T => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : defaultValue;\n  } catch (error) {\n    console.warn('Failed to load from localStorage:', error);\n    return defaultValue;\n  }\n};\n\nexport const removeFromLocalStorage = (key: string): void => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.warn('Failed to remove from localStorage:', error);\n  }\n};\n"],"names":["calculateAccuracy","calculateAverageScore","calculateGrade","calculateTimeEfficiency","deriveTitleFromSource","formatDuration","formatFileSize","formatPercentage","formatTimeAgo","formatTimeLimit","generateQuizId","getBloomLevelDescription","getDifficultyColor","getDifficultySuggestions","getFileExtension","getFileIcon","getQuestionMixTotal","getStatusColor","getSuggestedQuestionMix","getSuggestedTimeLimit","getTimeRemaining","isTestModeActive","isValidFileType","loadFromLocalStorage","parseTimeLimit","removeFromLocalStorage","sanitizeFileName","saveToLocalStorage","validateQuestionCount","validateQuestionMix","validateQuizTitle","validateQuizTopic","validateTimeLimit","fileName","fileType","extension","split","pop","toLowerCase","iconMap","pdf","docx","doc","txt","jpg","jpeg","png","tsx","ts","js","jsx","html","css","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","dateString","date","Date","now","diffInSeconds","getTime","file","allowedTypes","fileExtension","name","includes","topic","topicLower","DIFFICULTY_LEVELS","BEGINNER","ADVANCED","EXPERT","INTERMEDIATE","maxQuestions","difficulty","baseTimePerQuestion","TIME_PER_QUESTION","ratio","QUESTION_MIX_RATIOS","MCQ","round","SHORT_ANSWER","PRINCIPLE","questionMix","score","GRADE_THRESHOLDS","A","B","C","D","avgTimePerQuestion","TIME_EFFICIENCY_THRESHOLDS","FAST","NORMAL","correctAnswers","totalQuestions","scores","length","reduce","sum","seconds","hours","minutes","secs","startTime","timeLimitSec","elapsed","max","title","errors","trim","push","count","status","colorMap","draft","active","completed","archived","level","descriptions","Remember","Understand","Apply","Analyze","Evaluate","Create","value","decimals","process","env","NODE_ENV","NEXT_PUBLIC_TEST_MODE","window","location","hostname","method","uploadedFiles","selectedFiles","base","replace","picked","find","f","id","random","toString","substr","key","data","localStorage","setItem","JSON","stringify","error","console","warn","defaultValue","item","getItem","parse","removeItem"],"mappings":"AAAA;;;;;CAKC;;;;;;;;;;;IA2HYA,iBAAiB;eAAjBA;;IAKAC,qBAAqB;eAArBA;;IAnBAC,cAAc;eAAdA;;IAQAC,uBAAuB;eAAvBA;;IA6KAC,qBAAqB;eAArBA;;IAzJAC,cAAc;eAAdA;;IA3GAC,cAAc;eAAdA;;IA8NAC,gBAAgB;eAAhBA;;IAtNAC,aAAa;eAAbA;;IAiHAC,eAAe;eAAfA;;IA0JAC,cAAc;eAAdA;;IAlEAC,wBAAwB;eAAxBA;;IAPAC,kBAAkB;eAAlBA;;IA1KAC,wBAAwB;eAAxBA;;IARAC,gBAAgB;eAAhBA;;IA9CAC,WAAW;eAAXA;;IAuFAC,mBAAmB;eAAnBA;;IA8HAC,cAAc;eAAdA;;IAxIAC,uBAAuB;eAAvBA;;IALAC,qBAAqB;eAArBA;;IAgFAC,gBAAgB;eAAhBA;;IAoGAC,gBAAgB;eAAhBA;;IAnNAC,eAAe;eAAfA;;IAoRAC,oBAAoB;eAApBA;;IAzKAC,cAAc;eAAdA;;IAmLAC,sBAAsB;eAAtBA;;IA1BAC,gBAAgB;eAAhBA;;IAQAC,kBAAkB;eAAlBA;;IA5HAC,qBAAqB;eAArBA;;IA7FAC,mBAAmB;eAAnBA;;IAqEAC,iBAAiB;eAAjBA;;IAYAC,iBAAiB;eAAjBA;;IAwBAC,iBAAiB;eAAjBA;;;2BA3M2G;AAMjH,MAAMjB,cAAc,CAACkB,UAAkBC;IAC5C,MAAMC,YAAYD,YAAYD,SAASG,KAAK,CAAC,KAAKC,GAAG,IAAIC;IAEzD,MAAMC,UAAkC;QACtCC,KAAK;QACLC,MAAM;QACNC,KAAK;QACLC,KAAK;QACLC,KAAK;QACLC,MAAM;QACNC,KAAK;QACLC,KAAK;QACLC,IAAI;QACJC,IAAI;QACJC,KAAK;QACLC,MAAM;QACNC,KAAK;IACP;IAEA,OAAOb,OAAO,CAACJ,aAAa,GAAG,IAAI;AACrC;AAEO,MAAM7B,iBAAiB,CAAC+C;IAC7B,IAAIA,UAAU,GAAG,OAAO;IACxB,MAAMC,IAAI;IACV,MAAMC,QAAQ;QAAC;QAAS;QAAM;QAAM;KAAK;IACzC,MAAMC,IAAIC,KAAKC,KAAK,CAACD,KAAKE,GAAG,CAACN,SAASI,KAAKE,GAAG,CAACL;IAChD,OAAOM,WAAW,AAACP,CAAAA,QAAQI,KAAKI,GAAG,CAACP,GAAGE,EAAC,EAAGM,OAAO,CAAC,MAAM,MAAMP,KAAK,CAACC,EAAE;AACzE;AAEO,MAAMhD,gBAAgB,CAACuD;IAC5B,MAAMC,OAAO,IAAIC,KAAKF;IACtB,MAAMG,MAAM,IAAID;IAChB,MAAME,gBAAgBV,KAAKC,KAAK,CAAC,AAACQ,CAAAA,IAAIE,OAAO,KAAKJ,KAAKI,OAAO,EAAC,IAAK;IAEpE,IAAID,gBAAgB,IAAI,OAAO;IAC/B,IAAIA,gBAAgB,MAAM,OAAO,GAAGV,KAAKC,KAAK,CAACS,gBAAgB,IAAI,KAAK,CAAC;IACzE,IAAIA,gBAAgB,OAAO,OAAO,GAAGV,KAAKC,KAAK,CAACS,gBAAgB,MAAM,KAAK,CAAC;IAC5E,OAAO,GAAGV,KAAKC,KAAK,CAACS,gBAAgB,OAAO,KAAK,CAAC;AACpD;AAEO,MAAM7C,kBAAkB,CAAC+C,MAAYC;IAC1C,MAAMC,gBAAgBF,KAAKG,IAAI,CAACpC,KAAK,CAAC,KAAKC,GAAG,IAAIC;IAClD,OAAOgC,aAAaG,QAAQ,CAACF,iBAAiB;AAChD;AAEO,MAAMzD,mBAAmB,CAACmB;IAC/B,OAAOA,SAASG,KAAK,CAAC,KAAKC,GAAG,IAAIC,iBAAiB;AACrD;AAMO,MAAMzB,2BAA2B,CAAC6D;IACvC,MAAMC,aAAaD,MAAMpC,WAAW;IAEpC,IAAIqC,WAAWF,QAAQ,CAAC,YAAYE,WAAWF,QAAQ,CAAC,YAAYE,WAAWF,QAAQ,CAAC,gBAAgB;QACtG,OAAOG,4BAAiB,CAACC,QAAQ;IACnC;IAEA,IAAIF,WAAWF,QAAQ,CAAC,eAAeE,WAAWF,QAAQ,CAAC,aAAaE,WAAWF,QAAQ,CAAC,aAAa;QACvG,OAAOG,4BAAiB,CAACE,QAAQ;IACnC;IAEA,IAAIH,WAAWF,QAAQ,CAAC,aAAaE,WAAWF,QAAQ,CAAC,UAAUE,WAAWF,QAAQ,CAAC,aAAa;QAClG,OAAOG,4BAAiB,CAACG,MAAM;IACjC;IAEA,OAAOH,4BAAiB,CAACI,YAAY;AACvC;AAEO,MAAM7D,wBAAwB,CAAC8D,cAAsBC;IAC1D,MAAMC,sBAAsBC,4BAAiB,CAACF,WAA6C,IAAI;IAC/F,OAAOD,eAAeE;AACxB;AAEO,MAAMjE,0BAA0B,CAAC+D,cAAsBC;IAC5D,MAAMG,QAAQC,8BAAmB,CAACJ,WAA+C,IAAII,8BAAmB,CAACV,4BAAiB,CAACI,YAAY,CAAC;IAExI,OAAO;QACLO,KAAK9B,KAAK+B,KAAK,CAACP,eAAeI,MAAME,GAAG;QACxCE,cAAchC,KAAK+B,KAAK,CAACP,eAAeI,MAAMI,YAAY;QAC1DC,WAAWjC,KAAK+B,KAAK,CAACP,eAAeI,MAAMK,SAAS;IACtD;AACF;AAEO,MAAM1E,sBAAsB,CAAC2E;IAClC,IAAI,CAACA,aAAa,OAAO;IACzB,OAAO,AAACA,CAAAA,YAAYJ,GAAG,IAAI,CAAA,IAAMI,CAAAA,YAAYF,YAAY,IAAI,CAAA,IAAME,CAAAA,YAAYD,SAAS,IAAI,CAAA;AAC9F;AAEO,MAAM7D,sBAAsB,CAAC8D,aAAkBV;IACpD,IAAI,CAACU,aAAa,OAAO;IACzB,OAAO3E,oBAAoB2E,iBAAiBV;AAC9C;AAMO,MAAM/E,iBAAiB,CAAC0F;IAC7B,IAAIA,SAASC,2BAAgB,CAACC,CAAC,EAAE,OAAO;IACxC,IAAIF,SAASC,2BAAgB,CAACE,CAAC,EAAE,OAAO;IACxC,IAAIH,SAASC,2BAAgB,CAACG,CAAC,EAAE,OAAO;IACxC,IAAIJ,SAASC,2BAAgB,CAACI,CAAC,EAAE,OAAO;IACxC,OAAO;AACT;AAEO,MAAM9F,0BAA0B,CAAC+F;IACtC,IAAIA,sBAAsBC,qCAA0B,CAACC,IAAI,EAAE,OAAO;IAClE,IAAIF,sBAAsBC,qCAA0B,CAACE,MAAM,EAAE,OAAO;IACpE,OAAO;AACT;AAEO,MAAMrG,oBAAoB,CAACsG,gBAAwBC;IACxD,IAAIA,mBAAmB,GAAG,OAAO;IACjC,OAAO9C,KAAK+B,KAAK,CAAC,AAACc,iBAAiBC,iBAAkB;AACxD;AAEO,MAAMtG,wBAAwB,CAACuG;IACpC,IAAIA,OAAOC,MAAM,KAAK,GAAG,OAAO;IAChC,OAAOhD,KAAK+B,KAAK,CAACgB,OAAOE,MAAM,CAAC,CAACC,KAAKf,QAAUe,MAAMf,OAAO,KAAKY,OAAOC,MAAM;AACjF;AAMO,MAAMpG,iBAAiB,CAACuG;IAC7B,MAAMC,QAAQpD,KAAKC,KAAK,CAACkD,UAAU;IACnC,MAAME,UAAUrD,KAAKC,KAAK,CAAC,AAACkD,UAAU,OAAQ;IAC9C,MAAMG,OAAOH,UAAU;IAEvB,IAAIC,QAAQ,GAAG;QACb,OAAO,GAAGA,MAAM,EAAE,EAAEC,QAAQ,EAAE,EAAEC,KAAK,CAAC,CAAC;IACzC,OAAO,IAAID,UAAU,GAAG;QACtB,OAAO,GAAGA,QAAQ,EAAE,EAAEC,KAAK,CAAC,CAAC;IAC/B,OAAO;QACL,OAAO,GAAGA,KAAK,CAAC,CAAC;IACnB;AACF;AAEO,MAAMtG,kBAAkB,CAACmG;IAC9B,MAAME,UAAUrD,KAAK+B,KAAK,CAACoB,UAAU;IACrC,OAAO,GAAGE,QAAQ,IAAI,CAAC;AACzB;AAEO,MAAMtF,iBAAiB,CAACsF;IAC7B,OAAOA,UAAU;AACnB;AAEO,MAAM1F,mBAAmB,CAAC4F,WAAiBC;IAChD,MAAMC,UAAUzD,KAAKC,KAAK,CAAC,AAACO,CAAAA,KAAKC,GAAG,KAAK8C,UAAU5C,OAAO,EAAC,IAAK;IAChE,OAAOX,KAAK0D,GAAG,CAAC,GAAGF,eAAeC;AACpC;AAMO,MAAMpF,oBAAoB,CAACsF;IAChC,MAAMC,SAAmB,EAAE;IAE3B,IAAI,CAACD,SAASA,MAAME,IAAI,GAAGb,MAAM,KAAK,GAAG;QACvCY,OAAOE,IAAI,CAAC;IACd,OAAO,IAAIH,MAAMX,MAAM,GAAG,KAAK;QAC7BY,OAAOE,IAAI,CAAC;IACd;IAEA,OAAOF;AACT;AAEO,MAAMtF,oBAAoB,CAAC2C;IAChC,MAAM2C,SAAmB,EAAE;IAE3B,IAAI,CAAC3C,SAASA,MAAM4C,IAAI,GAAGb,MAAM,KAAK,GAAG;QACvCY,OAAOE,IAAI,CAAC;IACd,OAAO,IAAI7C,MAAM+B,MAAM,GAAG,KAAK;QAC7BY,OAAOE,IAAI,CAAC;IACd;IAEA,OAAOF;AACT;AAEO,MAAMzF,wBAAwB,CAAC4F;IACpC,MAAMH,SAAmB,EAAE;IAE3B,IAAIG,QAAQ,GAAG;QACbH,OAAOE,IAAI,CAAC;IACd,OAAO,IAAIC,QAAQ,IAAI;QACrBH,OAAOE,IAAI,CAAC;IACd;IAEA,OAAOF;AACT;AAEO,MAAMrF,oBAAoB,CAAC4E;IAChC,MAAMS,SAAmB,EAAE;IAE3B,IAAIT,UAAU,IAAI;QAChBS,OAAOE,IAAI,CAAC;IACd,OAAO,IAAIX,UAAU,MAAM;QACzBS,OAAOE,IAAI,CAAC;IACd;IAEA,OAAOF;AACT;AAMO,MAAMpG,iBAAiB,CAACwG;IAC7B,MAAMC,WAAmC;QACvCC,OAAO;QACPC,QAAQ;QACRC,WAAW;QACXC,UAAU;IACZ;IAEA,OAAOJ,QAAQ,CAACD,OAAO,IAAI;AAC7B;AAEO,MAAM7G,qBAAqB,CAACsE;IACjC,IAAIA,cAAc,GAAG,OAAO;IAC5B,IAAIA,cAAc,GAAG,OAAO;IAC5B,IAAIA,cAAc,GAAG,OAAO;IAC5B,OAAO;AACT;AAEO,MAAMvE,2BAA2B,CAACoH;IACvC,MAAMC,eAAuC;QAC3CC,UAAU;QACVC,YAAY;QACZC,OAAO;QACPC,SAAS;QACTC,UAAU;QACVC,QAAQ;IACV;IAEA,OAAON,YAAY,CAACD,MAAM,IAAI;AAChC;AAEO,MAAMxH,mBAAmB,CAACgI,OAAeC,WAAmB,CAAC;IAClE,OAAO,GAAGD,MAAMzE,OAAO,CAAC0E,UAAU,CAAC,CAAC;AACtC;AAMO,MAAMnH,mBAAmB;IAC9B,uCAAuC;IACvC,IAAIoH,QAAQC,GAAG,CAACC,QAAQ,KAAK,QAAQ;QACnC,OAAO;IACT;IAEA,mDAAmD;IACnD,IACEF,QAAQC,GAAG,CAACC,QAAQ,KAAK,iBACzBF,QAAQC,GAAG,CAACE,qBAAqB,KAAK,QACtC;QACA,OAAO;IACT;IAEA,oCAAoC;IACpC,IACE,OAAOC,WAAW,eAClBA,OAAOC,QAAQ,CAACC,QAAQ,KAAK,eAC7BN,QAAQC,GAAG,CAACE,qBAAqB,KAAK,QACtC;QACA,OAAO;IACT;IAEA,OAAO;AACT;AAMO,MAAMxI,wBAAwB,CAAC4I,QAAgBC,eAAuBC;IAC3E,IAAIF,WAAW,SAAS;QACtB,IAAIC,cAAcxC,MAAM,GAAG,GAAG;YAC5B,MAAM0C,OAAOF,aAAa,CAAC,EAAE,CAACzE,IAAI,CAAC4E,OAAO,CAAC,YAAY;YACvD,OAAO,GAAGD,KAAK,KAAK,CAAC;QACvB;QACA,MAAME,SAASH,cAAcI,IAAI,CAACC,CAAAA,IAAKA,EAAEC,EAAE;QAC3C,IAAIH,QAAQ;YACV,MAAMF,OAAOE,OAAO7E,IAAI,CAAC4E,OAAO,CAAC,YAAY;YAC7C,OAAO,GAAGD,KAAK,KAAK,CAAC;QACvB;IACF;IACA,OAAO;AACT;AAEO,MAAMzI,iBAAiB;IAC5B,OAAO,CAAC,KAAK,EAAEuD,KAAKC,GAAG,GAAG,CAAC,EAAET,KAAKgG,MAAM,GAAGC,QAAQ,CAAC,IAAIC,MAAM,CAAC,GAAG,IAAI;AACxE;AAEO,MAAMjI,mBAAmB,CAACO;IAC/B,OAAOA,SAASmH,OAAO,CAAC,mBAAmB;AAC7C;AAMO,MAAMzH,qBAAqB,CAACiI,KAAaC;IAC9C,IAAI;QACFC,aAAaC,OAAO,CAACH,KAAKI,KAAKC,SAAS,CAACJ;IAC3C,EAAE,OAAOK,OAAO;QACdC,QAAQC,IAAI,CAAC,mCAAmCF;IAClD;AACF;AAEO,MAAM3I,uBAAuB,CAAIqI,KAAaS;IACnD,IAAI;QACF,MAAMC,OAAOR,aAAaS,OAAO,CAACX;QAClC,OAAOU,OAAON,KAAKQ,KAAK,CAACF,QAAQD;IACnC,EAAE,OAAOH,OAAO;QACdC,QAAQC,IAAI,CAAC,qCAAqCF;QAClD,OAAOG;IACT;AACF;AAEO,MAAM5I,yBAAyB,CAACmI;IACrC,IAAI;QACFE,aAAaW,UAAU,CAACb;IAC1B,EAAE,OAAOM,OAAO;QACdC,QAAQC,IAAI,CAAC,uCAAuCF;IACtD;AACF"}