ef6131f1795ad31b485a4965a9ac9140
/**
 * Quiz Creation Schema
 * 
 * Comprehensive Zod schema for quiz creation following the established
 * patterns from the flashcard wizard.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DEFAULT_QUIZ_FORM_CONFIG: function() {
        return DEFAULT_QUIZ_FORM_CONFIG;
    },
    QUIZ_DELIVERY_MODE_OPTIONS: function() {
        return QUIZ_DELIVERY_MODE_OPTIONS;
    },
    QUIZ_DIFFICULTY_OPTIONS: function() {
        return QUIZ_DIFFICULTY_OPTIONS;
    },
    QUIZ_LANGUAGE_OPTIONS: function() {
        return QUIZ_LANGUAGE_OPTIONS;
    },
    QuizAdvancedConfigSchema: function() {
        return QuizAdvancedConfigSchema;
    },
    QuizBasicConfigSchema: function() {
        return QuizBasicConfigSchema;
    },
    QuizCreationSchema: function() {
        return QuizCreationSchema;
    },
    QuizMethodSchema: function() {
        return QuizMethodSchema;
    },
    QuizSourceConfigSchema: function() {
        return QuizSourceConfigSchema;
    },
    getQuizDifficultySuggestions: function() {
        return getQuizDifficultySuggestions;
    },
    getQuizQuestionMixTotal: function() {
        return getQuizQuestionMixTotal;
    },
    getQuizSuggestedQuestionMix: function() {
        return getQuizSuggestedQuestionMix;
    },
    getQuizSuggestedTimeLimit: function() {
        return getQuizSuggestedTimeLimit;
    },
    validateQuizConfig: function() {
        return validateQuizConfig;
    },
    validateQuizQuestionMix: function() {
        return validateQuizQuestionMix;
    }
});
const _zod = require("zod");
const QuizCreationSchema = _zod.z.object({
    // Basic Information
    title: _zod.z.string().min(1, 'Title is required').max(100, 'Title must be less than 100 characters').optional(),
    description: _zod.z.string().max(500, 'Description must be less than 500 characters').optional(),
    topic: _zod.z.string().min(1, 'Topic is required').max(200, 'Topic must be less than 200 characters').optional(),
    // Quiz Configuration
    quiz_type: _zod.z.enum([
        'formative',
        'summative',
        'diagnostic',
        'mastery'
    ]).default('formative'),
    difficulty: _zod.z.enum([
        'BEGINNER',
        'INTERMEDIATE',
        'ADVANCED',
        'EXPERT'
    ]).default('INTERMEDIATE'),
    delivery_mode: _zod.z.enum([
        'IMMEDIATE',
        'DEFERRED'
    ]).default('IMMEDIATE'),
    max_questions: _zod.z.number().min(1, 'Must have at least 1 question').max(50, 'Cannot have more than 50 questions').default(10),
    time_limit_sec: _zod.z.number().min(60, 'Time limit must be at least 60 seconds').max(7200, 'Time limit cannot exceed 2 hours').optional(),
    // Question Mix Configuration
    question_mix: _zod.z.object({
        MCQ: _zod.z.number().min(0).max(50).default(0),
        SHORT_ANSWER: _zod.z.number().min(0).max(50).default(0),
        PRINCIPLE: _zod.z.number().min(0).max(50).default(0)
    }).refine((mix)=>mix.MCQ + mix.SHORT_ANSWER + mix.PRINCIPLE > 0, 'At least one question type must be selected').optional(),
    // Source Configuration
    source_type: _zod.z.enum([
        'auto',
        'files',
        'manual'
    ]).default('auto'),
    source_ids: _zod.z.array(_zod.z.string()).optional(),
    uploaded_files: _zod.z.array(_zod.z.instanceof(File)).optional(),
    selected_existing_file_ids: _zod.z.array(_zod.z.union([
        _zod.z.string(),
        _zod.z.number()
    ])).optional(),
    // Advanced Configuration
    language: _zod.z.string().default('en'),
    scheduled_for: _zod.z.date().optional(),
    due_at: _zod.z.date().optional(),
    // Test Style Configuration (following diagnostic pattern)
    test_style: _zod.z.string().nullable().optional(),
    style_config_override: _zod.z.record(_zod.z.any()).optional(),
    // Validation and Constraints
    allow_retakes: _zod.z.boolean().default(true),
    show_hints: _zod.z.boolean().default(false),
    randomize_questions: _zod.z.boolean().default(true),
    randomize_choices: _zod.z.boolean().default(true),
    // Analytics and Tracking
    track_analytics: _zod.z.boolean().default(true),
    require_explanation: _zod.z.boolean().default(true)
}).refine((data)=>{
    // Ensure question mix matches max_questions if provided
    if (data.question_mix && data.max_questions) {
        const totalMix = data.question_mix.MCQ + data.question_mix.SHORT_ANSWER + data.question_mix.PRINCIPLE;
        return totalMix === data.max_questions;
    }
    return true;
}, 'Question mix must match the total number of questions').refine((data)=>{
    // Ensure due_at is after scheduled_for if both provided
    if (data.scheduled_for && data.due_at) {
        return data.due_at > data.scheduled_for;
    }
    return true;
}, 'Due date must be after scheduled date');
const QuizMethodSchema = _zod.z.object({
    method: _zod.z.enum([
        'auto',
        'files',
        'manual'
    ])
});
const QuizBasicConfigSchema = _zod.z.object({
    title: _zod.z.string().min(1, 'Title is required').max(100),
    topic: _zod.z.string().min(1, 'Topic is required').max(200),
    description: _zod.z.string().max(500).optional(),
    difficulty: _zod.z.enum([
        'BEGINNER',
        'INTERMEDIATE',
        'ADVANCED',
        'EXPERT'
    ]),
    max_questions: _zod.z.number().min(1).max(50),
    time_limit_sec: _zod.z.number().min(60).max(7200).optional()
});
const QuizSourceConfigSchema = _zod.z.object({
    source_type: _zod.z.enum([
        'auto',
        'files',
        'manual'
    ]),
    source_ids: _zod.z.array(_zod.z.string()).optional(),
    uploaded_files: _zod.z.array(_zod.z.instanceof(File)).optional(),
    selected_existing_file_ids: _zod.z.array(_zod.z.union([
        _zod.z.string(),
        _zod.z.number()
    ])).optional()
}).refine((data)=>{
    if (data.source_type === 'files') {
        return data.source_ids && data.source_ids.length > 0 || data.uploaded_files && data.uploaded_files.length > 0 || data.selected_existing_file_ids && data.selected_existing_file_ids.length > 0;
    }
    return true;
}, 'File source requires at least one file to be selected or uploaded');
const QuizAdvancedConfigSchema = _zod.z.object({
    delivery_mode: _zod.z.enum([
        'IMMEDIATE',
        'DEFERRED'
    ]),
    question_mix: _zod.z.object({
        MCQ: _zod.z.number().min(0).max(50),
        SHORT_ANSWER: _zod.z.number().min(0).max(50),
        PRINCIPLE: _zod.z.number().min(0).max(50)
    }).refine((mix)=>mix.MCQ + mix.SHORT_ANSWER + mix.PRINCIPLE > 0, 'At least one question type must be selected'),
    language: _zod.z.string().default('en'),
    scheduled_for: _zod.z.date().optional(),
    due_at: _zod.z.date().optional(),
    test_style: _zod.z.string().nullable().optional(),
    style_config_override: _zod.z.record(_zod.z.any()).optional(),
    allow_retakes: _zod.z.boolean().default(true),
    show_hints: _zod.z.boolean().default(false),
    randomize_questions: _zod.z.boolean().default(true),
    randomize_choices: _zod.z.boolean().default(true),
    track_analytics: _zod.z.boolean().default(true),
    require_explanation: _zod.z.boolean().default(true)
});
const DEFAULT_QUIZ_FORM_CONFIG = {
    difficulty: 'INTERMEDIATE',
    delivery_mode: 'IMMEDIATE',
    max_questions: 10,
    time_limit_sec: 900,
    language: 'en',
    source_type: 'auto',
    allow_retakes: true,
    show_hints: false,
    randomize_questions: true,
    randomize_choices: true,
    track_analytics: true,
    require_explanation: true,
    question_mix: {
        MCQ: 4,
        SHORT_ANSWER: 4,
        PRINCIPLE: 2
    }
};
const validateQuizConfig = (config)=>{
    try {
        QuizCreationSchema.parse(config);
        return {
            valid: true,
            errors: []
        };
    } catch (error) {
        if (error instanceof _zod.z.ZodError) {
            return {
                valid: false,
                errors: error.errors.map((err)=>`${err.path.join('.')}: ${err.message}`)
            };
        }
        return {
            valid: false,
            errors: [
                'Unknown validation error'
            ]
        };
    }
};
const getQuizQuestionMixTotal = (mix)=>{
    if (!mix) return 0;
    return mix.MCQ + mix.SHORT_ANSWER + mix.PRINCIPLE;
};
const validateQuizQuestionMix = (mix, maxQuestions)=>{
    if (!mix) return true;
    return getQuizQuestionMixTotal(mix) === maxQuestions;
};
const getQuizDifficultySuggestions = (topic)=>{
    const topicLower = topic.toLowerCase();
    if (topicLower.includes('basic') || topicLower.includes('intro') || topicLower.includes('fundamental')) {
        return 'BEGINNER';
    }
    if (topicLower.includes('advanced') || topicLower.includes('expert') || topicLower.includes('research')) {
        return 'ADVANCED';
    }
    if (topicLower.includes('master') || topicLower.includes('phd') || topicLower.includes('doctoral')) {
        return 'EXPERT';
    }
    return 'INTERMEDIATE';
};
const getQuizSuggestedTimeLimit = (maxQuestions, difficulty)=>{
    const baseTimePerQuestion = {
        'BEGINNER': 60,
        'INTERMEDIATE': 90,
        'ADVANCED': 120,
        'EXPERT': 150
    };
    return maxQuestions * baseTimePerQuestion[difficulty];
};
const getQuizSuggestedQuestionMix = (maxQuestions, difficulty)=>{
    const ratios = {
        'BEGINNER': {
            MCQ: 0.6,
            SHORT_ANSWER: 0.3,
            PRINCIPLE: 0.1
        },
        'INTERMEDIATE': {
            MCQ: 0.4,
            SHORT_ANSWER: 0.4,
            PRINCIPLE: 0.2
        },
        'ADVANCED': {
            MCQ: 0.3,
            SHORT_ANSWER: 0.4,
            PRINCIPLE: 0.3
        },
        'EXPERT': {
            MCQ: 0.2,
            SHORT_ANSWER: 0.3,
            PRINCIPLE: 0.5
        }
    };
    const ratio = ratios[difficulty];
    return {
        MCQ: Math.round(maxQuestions * ratio.MCQ),
        SHORT_ANSWER: Math.round(maxQuestions * ratio.SHORT_ANSWER),
        PRINCIPLE: Math.round(maxQuestions * ratio.PRINCIPLE)
    };
};
const QUIZ_DIFFICULTY_OPTIONS = [
    {
        value: 'BEGINNER',
        label: 'Beginner',
        description: 'Basic concepts and recall'
    },
    {
        value: 'INTERMEDIATE',
        label: 'Intermediate',
        description: 'Application and understanding'
    },
    {
        value: 'ADVANCED',
        label: 'Advanced',
        description: 'Analysis and synthesis'
    },
    {
        value: 'EXPERT',
        label: 'Expert',
        description: 'Evaluation and creation'
    }
];
const QUIZ_DELIVERY_MODE_OPTIONS = [
    {
        value: 'IMMEDIATE',
        label: 'Immediate Feedback',
        description: 'Show results after each question'
    },
    {
        value: 'DEFERRED',
        label: 'Deferred Feedback',
        description: 'Show results after completing the quiz'
    }
];
const QUIZ_LANGUAGE_OPTIONS = [
    {
        value: 'en',
        label: 'English'
    },
    {
        value: 'es',
        label: 'Spanish'
    },
    {
        value: 'fr',
        label: 'French'
    },
    {
        value: 'de',
        label: 'German'
    },
    {
        value: 'pt',
        label: 'Portuguese'
    },
    {
        value: 'it',
        label: 'Italian'
    }
];

//# sourceMappingURL=data:application/json;base64,