{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst TabsContext = React.createContext<{\n  selectedTab: string;\n  setSelectedTab: (value: string) => void;\n} | null>(null);\n\nconst Tabs = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    defaultValue?: string;\n    value?: string;\n    onValueChange?: (value: string) => void;\n  }\n>(\n  (\n    { className, defaultValue, value, onValueChange, children, ...props },\n    ref,\n  ) => {\n    const [selectedTab, setSelectedTab] = React.useState(\n      value || defaultValue || \"\",\n    );\n\n    React.useEffect(() => {\n      if (value !== undefined) {\n        setSelectedTab(value);\n      }\n    }, [value]);\n\n    const handleTabChange = React.useCallback(\n      (newValue: string) => {\n        setSelectedTab(newValue);\n        onValueChange?.(newValue);\n      },\n      [onValueChange],\n    );\n\n    return (\n      <TabsContext.Provider\n        value={{ selectedTab, setSelectedTab: handleTabChange }}\n      >\n        <div ref={ref} className={cn(\"w-full\", className)} {...props}>\n          {children}\n        </div>\n      </TabsContext.Provider>\n    );\n  },\n);\nTabs.displayName = \"Tabs\";\n\nconst TabsList = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = \"TabsList\";\n\nconst TabsTrigger = React.forwardRef<\n  HTMLButtonElement,\n  React.ButtonHTMLAttributes<HTMLButtonElement> & {\n    value: string;\n  }\n>(({ className, value, children, ...props }, ref) => {\n  const context = React.useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"TabsTrigger must be used within a Tabs component\");\n  }\n\n  const isSelected = context.selectedTab === value;\n\n  return (\n    <button\n      ref={ref}\n      className={cn(\n        \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n        isSelected\n          ? \"bg-white text-gray-900 shadow-sm\"\n          : \"text-gray-600 hover:text-gray-900 hover:bg-gray-50\",\n        className,\n      )}\n      onClick={() => context.setSelectedTab(value)}\n      role=\"tab\"\n      aria-selected={isSelected}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n});\nTabsTrigger.displayName = \"TabsTrigger\";\n\nconst TabsContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    value: string;\n  }\n>(({ className, value, children, ...props }, ref) => {\n  const context = React.useContext(TabsContext);\n  if (!context) {\n    throw new Error(\"TabsContent must be used within a Tabs component\");\n  }\n\n  const isSelected = context.selectedTab === value;\n\n  if (!isSelected) {\n    return null;\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-400 focus-visible:ring-offset-2\",\n        className,\n      )}\n      role=\"tabpanel\"\n      aria-labelledby={`tab-${value}`}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\nTabsContent.displayName = \"TabsContent\";\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":["Tabs","TabsContent","TabsList","TabsTrigger","TabsContext","React","createContext","forwardRef","className","defaultValue","value","onValueChange","children","props","ref","selectedTab","setSelectedTab","useState","useEffect","undefined","handleTabChange","useCallback","newValue","Provider","div","cn","displayName","context","useContext","Error","isSelected","button","onClick","role","aria-selected","aria-labelledby"],"mappings":"AAAA;;;;;;;;;;;;IAwISA,IAAI;eAAJA;;IAA6BC,WAAW;eAAXA;;IAAvBC,QAAQ;eAARA;;IAAUC,WAAW;eAAXA;;;;+DAtIF;uBACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMC,4BAAcC,OAAMC,aAAa,CAG7B;AAEV,MAAMN,qBAAOK,OAAME,UAAU,CAQ3B,CACE,EAAEC,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,aAAa,EAAEC,QAAQ,EAAE,GAAGC,OAAO,EACrEC;IAEA,MAAM,CAACC,aAAaC,eAAe,GAAGX,OAAMY,QAAQ,CAClDP,SAASD,gBAAgB;IAG3BJ,OAAMa,SAAS,CAAC;QACd,IAAIR,UAAUS,WAAW;YACvBH,eAAeN;QACjB;IACF,GAAG;QAACA;KAAM;IAEV,MAAMU,kBAAkBf,OAAMgB,WAAW,CACvC,CAACC;QACCN,eAAeM;QACfX,gBAAgBW;IAClB,GACA;QAACX;KAAc;IAGjB,qBACE,qBAACP,YAAYmB,QAAQ;QACnBb,OAAO;YAAEK;YAAaC,gBAAgBI;QAAgB;kBAEtD,cAAA,qBAACI;YAAIV,KAAKA;YAAKN,WAAWiB,IAAAA,SAAE,EAAC,UAAUjB;YAAa,GAAGK,KAAK;sBACzDD;;;AAIT;AAEFZ,KAAK0B,WAAW,GAAG;AAEnB,MAAMxB,yBAAWG,OAAME,UAAU,CAG/B,CAAC,EAAEC,SAAS,EAAE,GAAGK,OAAO,EAAEC,oBAC1B,qBAACU;QACCV,KAAKA;QACLN,WAAWiB,IAAAA,SAAE,EACX,yFACAjB;QAED,GAAGK,KAAK;;AAGbX,SAASwB,WAAW,GAAG;AAEvB,MAAMvB,4BAAcE,OAAME,UAAU,CAKlC,CAAC,EAAEC,SAAS,EAAEE,KAAK,EAAEE,QAAQ,EAAE,GAAGC,OAAO,EAAEC;IAC3C,MAAMa,UAAUtB,OAAMuB,UAAU,CAACxB;IACjC,IAAI,CAACuB,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IAEA,MAAMC,aAAaH,QAAQZ,WAAW,KAAKL;IAE3C,qBACE,qBAACqB;QACCjB,KAAKA;QACLN,WAAWiB,IAAAA,SAAE,EACX,kSACAK,aACI,qCACA,sDACJtB;QAEFwB,SAAS,IAAML,QAAQX,cAAc,CAACN;QACtCuB,MAAK;QACLC,iBAAeJ;QACd,GAAGjB,KAAK;kBAERD;;AAGP;AACAT,YAAYuB,WAAW,GAAG;AAE1B,MAAMzB,4BAAcI,OAAME,UAAU,CAKlC,CAAC,EAAEC,SAAS,EAAEE,KAAK,EAAEE,QAAQ,EAAE,GAAGC,OAAO,EAAEC;IAC3C,MAAMa,UAAUtB,OAAMuB,UAAU,CAACxB;IACjC,IAAI,CAACuB,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IAEA,MAAMC,aAAaH,QAAQZ,WAAW,KAAKL;IAE3C,IAAI,CAACoB,YAAY;QACf,OAAO;IACT;IAEA,qBACE,qBAACN;QACCV,KAAKA;QACLN,WAAWiB,IAAAA,SAAE,EACX,kIACAjB;QAEFyB,MAAK;QACLE,mBAAiB,CAAC,IAAI,EAAEzB,OAAO;QAC9B,GAAGG,KAAK;kBAERD;;AAGP;AACAX,YAAYyB,WAAW,GAAG"}