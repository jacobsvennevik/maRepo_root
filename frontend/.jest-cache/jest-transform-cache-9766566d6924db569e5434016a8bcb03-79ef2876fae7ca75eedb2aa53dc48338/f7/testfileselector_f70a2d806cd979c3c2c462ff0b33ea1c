8fd3d6130cca4db822ca58b3b24d10f2
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "TestFileSelector", {
    enumerable: true,
    get: function() {
        return TestFileSelector;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _card = require("../../../../components/ui/card");
const _badge = require("../../../../components/ui/badge");
const _lucidereact = require("lucide-react");
const _testmodeutils = require("../../services/test-mode-utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function TestFileSelector({ onFileSelect, fileType, title = "Select Test File", description = "Choose a test file to upload and process through the real backend" }) {
    const [selectedFile, setSelectedFile] = (0, _react.useState)(null);
    const availableFiles = (0, _testmodeutils.getAvailableTestFiles)();
    const filteredFiles = fileType ? availableFiles.filter((file)=>file.type === fileType) : availableFiles;
    const handleFileSelect = (filename)=>{
        const file = (0, _testmodeutils.getTestFile)(filename);
        if (file) {
            setSelectedFile(filename);
            onFileSelect(file);
        }
    };
    const getTypeIcon = (type)=>{
        switch(type){
            case 'syllabus':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                    className: "h-4 w-4 text-blue-500"
                });
            case 'course_content':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Upload, {
                    className: "h-4 w-4 text-green-500"
                });
            case 'test':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.TestTube, {
                    className: "h-4 w-4 text-purple-500"
                });
            default:
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                    className: "h-4 w-4 text-gray-500"
                });
        }
    };
    const getTypeBadge = (type)=>{
        const colors = {
            syllabus: 'bg-blue-100 text-blue-800 border-blue-200',
            course_content: 'bg-green-100 text-green-800 border-green-200',
            test: 'bg-purple-100 text-purple-800 border-purple-200'
        };
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
            variant: "outline",
            className: `text-xs ${colors[type] || 'bg-gray-100 text-gray-800'}`,
            children: type.replace('_', ' ')
        });
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: "border-yellow-200 bg-yellow-50/50",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                className: "pb-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                        className: "flex items-center gap-2 text-lg",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.TestTube, {
                                className: "h-5 w-5 text-yellow-600"
                            }),
                            title
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-sm text-yellow-700",
                        children: description
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "space-y-3",
                        children: filteredFiles.map((file)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: `p-3 border rounded-lg cursor-pointer transition-colors ${selectedFile === file.name ? 'border-yellow-400 bg-yellow-100' : 'border-gray-200 bg-white hover:border-yellow-300 hover:bg-yellow-50'}`,
                                onClick: ()=>handleFileSelect(file.name),
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-3",
                                            children: [
                                                getTypeIcon(file.type),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "font-medium text-sm",
                                                            children: file.name
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "text-xs text-gray-600",
                                                            children: file.description
                                                        })
                                                    ]
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-2",
                                            children: [
                                                getTypeBadge(file.type),
                                                selectedFile === file.name && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                    variant: "default",
                                                    className: "bg-yellow-600 text-white text-xs",
                                                    children: "Selected"
                                                })
                                            ]
                                        })
                                    ]
                                })
                            }, file.name))
                    }),
                    selectedFile && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "mt-4 p-3 bg-green-50 border border-green-200 rounded-lg",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2 text-green-800",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.TestTube, {
                                        className: "h-4 w-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                        className: "text-sm font-medium",
                                        children: [
                                            "Ready to process: ",
                                            selectedFile
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-xs text-green-600 mt-1",
                                children: "This file will be uploaded to the real backend and processed through the AI pipeline."
                            })
                        ]
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,