{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/shared/test-file-selector.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { FileText, Upload, TestTube } from 'lucide-react';\nimport { getAvailableTestFiles, getTestFile } from '../../services/test-mode-utils';\n\ninterface TestFileSelectorProps {\n  onFileSelect: (file: File) => void;\n  fileType?: 'syllabus' | 'course_content' | 'test';\n  title?: string;\n  description?: string;\n}\n\nexport function TestFileSelector({ \n  onFileSelect, \n  fileType,\n  title = \"Select Test File\",\n  description = \"Choose a test file to upload and process through the real backend\"\n}: TestFileSelectorProps) {\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\n  \n  const availableFiles = getAvailableTestFiles();\n  const filteredFiles = fileType \n    ? availableFiles.filter(file => file.type === fileType)\n    : availableFiles;\n\n  const handleFileSelect = (filename: string) => {\n    const file = getTestFile(filename);\n    if (file) {\n      setSelectedFile(filename);\n      onFileSelect(file);\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'syllabus':\n        return <FileText className=\"h-4 w-4 text-blue-500\" />;\n      case 'course_content':\n        return <Upload className=\"h-4 w-4 text-green-500\" />;\n      case 'test':\n        return <TestTube className=\"h-4 w-4 text-purple-500\" />;\n      default:\n        return <FileText className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const getTypeBadge = (type: string) => {\n    const colors = {\n      syllabus: 'bg-blue-100 text-blue-800 border-blue-200',\n      course_content: 'bg-green-100 text-green-800 border-green-200',\n      test: 'bg-purple-100 text-purple-800 border-purple-200'\n    };\n    \n    return (\n      <Badge variant=\"outline\" className={`text-xs ${colors[type as keyof typeof colors] || 'bg-gray-100 text-gray-800'}`}>\n        {type.replace('_', ' ')}\n      </Badge>\n    );\n  };\n\n  return (\n    <Card className=\"border-yellow-200 bg-yellow-50/50\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center gap-2 text-lg\">\n          <TestTube className=\"h-5 w-5 text-yellow-600\" />\n          {title}\n        </CardTitle>\n        <p className=\"text-sm text-yellow-700\">\n          {description}\n        </p>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-3\">\n          {filteredFiles.map((file) => (\n            <div\n              key={file.name}\n              className={`p-3 border rounded-lg cursor-pointer transition-colors ${\n                selectedFile === file.name\n                  ? 'border-yellow-400 bg-yellow-100'\n                  : 'border-gray-200 bg-white hover:border-yellow-300 hover:bg-yellow-50'\n              }`}\n              onClick={() => handleFileSelect(file.name)}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  {getTypeIcon(file.type)}\n                  <div>\n                    <div className=\"font-medium text-sm\">{file.name}</div>\n                    <div className=\"text-xs text-gray-600\">{file.description}</div>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  {getTypeBadge(file.type)}\n                  {selectedFile === file.name && (\n                    <Badge variant=\"default\" className=\"bg-yellow-600 text-white text-xs\">\n                      Selected\n                    </Badge>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        {selectedFile && (\n          <div className=\"mt-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 text-green-800\">\n              <TestTube className=\"h-4 w-4\" />\n              <span className=\"text-sm font-medium\">\n                Ready to process: {selectedFile}\n              </span>\n            </div>\n            <p className=\"text-xs text-green-600 mt-1\">\n              This file will be uploaded to the real backend and processed through the AI pipeline.\n            </p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n} "],"names":["TestFileSelector","onFileSelect","fileType","title","description","selectedFile","setSelectedFile","useState","availableFiles","getAvailableTestFiles","filteredFiles","filter","file","type","handleFileSelect","filename","getTestFile","getTypeIcon","FileText","className","Upload","TestTube","getTypeBadge","colors","syllabus","course_content","test","Badge","variant","replace","Card","CardHeader","CardTitle","p","CardContent","div","map","name","onClick","span"],"mappings":"AAAA;;;;;+BAgBgBA;;;eAAAA;;;;+DAdgB;sBAEyB;uBACnC;6BACqB;+BACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS5C,SAASA,iBAAiB,EAC/BC,YAAY,EACZC,QAAQ,EACRC,QAAQ,kBAAkB,EAC1BC,cAAc,mEAAmE,EAC3D;IACtB,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,eAAQ,EAAgB;IAEhE,MAAMC,iBAAiBC,IAAAA,oCAAqB;IAC5C,MAAMC,gBAAgBR,WAClBM,eAAeG,MAAM,CAACC,CAAAA,OAAQA,KAAKC,IAAI,KAAKX,YAC5CM;IAEJ,MAAMM,mBAAmB,CAACC;QACxB,MAAMH,OAAOI,IAAAA,0BAAW,EAACD;QACzB,IAAIH,MAAM;YACRN,gBAAgBS;YAChBd,aAAaW;QACf;IACF;IAEA,MAAMK,cAAc,CAACJ;QACnB,OAAQA;YACN,KAAK;gBACH,qBAAO,qBAACK,qBAAQ;oBAACC,WAAU;;YAC7B,KAAK;gBACH,qBAAO,qBAACC,mBAAM;oBAACD,WAAU;;YAC3B,KAAK;gBACH,qBAAO,qBAACE,qBAAQ;oBAACF,WAAU;;YAC7B;gBACE,qBAAO,qBAACD,qBAAQ;oBAACC,WAAU;;QAC/B;IACF;IAEA,MAAMG,eAAe,CAACT;QACpB,MAAMU,SAAS;YACbC,UAAU;YACVC,gBAAgB;YAChBC,MAAM;QACR;QAEA,qBACE,qBAACC,YAAK;YAACC,SAAQ;YAAUT,WAAW,CAAC,QAAQ,EAAEI,MAAM,CAACV,KAA4B,IAAI,6BAA6B;sBAChHA,KAAKgB,OAAO,CAAC,KAAK;;IAGzB;IAEA,qBACE,sBAACC,UAAI;QAACX,WAAU;;0BACd,sBAACY,gBAAU;gBAACZ,WAAU;;kCACpB,sBAACa,eAAS;wBAACb,WAAU;;0CACnB,qBAACE,qBAAQ;gCAACF,WAAU;;4BACnBhB;;;kCAEH,qBAAC8B;wBAAEd,WAAU;kCACVf;;;;0BAGL,sBAAC8B,iBAAW;;kCACV,qBAACC;wBAAIhB,WAAU;kCACZT,cAAc0B,GAAG,CAAC,CAACxB,qBAClB,qBAACuB;gCAEChB,WAAW,CAAC,uDAAuD,EACjEd,iBAAiBO,KAAKyB,IAAI,GACtB,oCACA,uEACJ;gCACFC,SAAS,IAAMxB,iBAAiBF,KAAKyB,IAAI;0CAEzC,cAAA,sBAACF;oCAAIhB,WAAU;;sDACb,sBAACgB;4CAAIhB,WAAU;;gDACZF,YAAYL,KAAKC,IAAI;8DACtB,sBAACsB;;sEACC,qBAACA;4DAAIhB,WAAU;sEAAuBP,KAAKyB,IAAI;;sEAC/C,qBAACF;4DAAIhB,WAAU;sEAAyBP,KAAKR,WAAW;;;;;;sDAG5D,sBAAC+B;4CAAIhB,WAAU;;gDACZG,aAAaV,KAAKC,IAAI;gDACtBR,iBAAiBO,KAAKyB,IAAI,kBACzB,qBAACV,YAAK;oDAACC,SAAQ;oDAAUT,WAAU;8DAAmC;;;;;;+BAnBvEP,KAAKyB,IAAI;;oBA6BnBhC,8BACC,sBAAC8B;wBAAIhB,WAAU;;0CACb,sBAACgB;gCAAIhB,WAAU;;kDACb,qBAACE,qBAAQ;wCAACF,WAAU;;kDACpB,sBAACoB;wCAAKpB,WAAU;;4CAAsB;4CACjBd;;;;;0CAGvB,qBAAC4B;gCAAEd,WAAU;0CAA8B;;;;;;;;AAQvD"}