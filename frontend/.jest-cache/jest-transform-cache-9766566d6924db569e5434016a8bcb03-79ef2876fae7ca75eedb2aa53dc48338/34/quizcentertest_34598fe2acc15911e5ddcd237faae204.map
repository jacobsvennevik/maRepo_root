{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/tests/api-integration/quiz-center.test.ts"],"sourcesContent":["/**\n * API Integration Tests for Quiz Center\n * These tests will identify and help fix Quiz Center API endpoint issues\n */\n\nimport { axiosApi } from '@/lib/axios';\njest.setTimeout(30000);\nimport { joinUrl } from '../utils/url';\n\n// Mock console.error to capture API errors\nconst originalConsoleError = console.error;\nlet apiErrors: any[] = [];\n\nbeforeEach(() => {\n  apiErrors = [];\n  console.error = jest.fn((...args: any[]) => {\n    const first = args[0];\n    const isInterestingString = typeof first === 'string' && (first.includes('API error') || first.includes('Server error'));\n    const hasAxiosFields = args.some((a: any) => a && typeof a === 'object' && (a.url || a.fullURL || a.method));\n    if (isInterestingString || hasAxiosFields) {\n      apiErrors.push(args);\n    }\n    return originalConsoleError(...args);\n  });\n});\n\nafterEach(() => {\n  console.error = originalConsoleError;\n});\n\ndescribe('Quiz Center API Integration Tests', () => {\n  const testProjectId = 'test-project-123';\n  \n  describe('Quiz Management API', () => {\n    it('should test quiz creation endpoint', async () => {\n      const endpoint = `projects/${testProjectId}/quizzes/`;\n      const quizData = {\n        title: 'Test Quiz',\n        description: 'A test quiz for API validation',\n        quiz_type: 'practice',\n        source_files: ['file1.pdf'],\n        difficulty: 'medium'\n      };\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        const response = await axiosApi.post(endpoint, quizData);\n        console.log('✅ Quiz creation success:', response.status);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n      }\n    });\n\n    it('should test quiz listing endpoint', async () => {\n      const endpoint = `projects/${testProjectId}/quizzes/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n      }\n    });\n\n    it('should test individual quiz retrieval', async () => {\n      const quizId = 'test-quiz-456';\n      const endpoint = `projects/${testProjectId}/quizzes/${quizId}/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (fullURL) {\n          expect(fullURL).toContain(quizId);\n        }\n      }\n    });\n\n    it('should test quiz update endpoint', async () => {\n      const quizId = 'test-quiz-456';\n      const endpoint = `projects/${testProjectId}/quizzes/${quizId}/`;\n      const updateData = {\n        title: 'Updated Test Quiz',\n        description: 'Updated description'\n      };\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.patch(endpoint, updateData);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.method) {\n          expect(error.config.method).toBe('patch');\n        }\n      }\n    });\n\n    it('should test quiz deletion endpoint', async () => {\n      const quizId = 'test-quiz-456';\n      const endpoint = `projects/${testProjectId}/quizzes/${quizId}/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.delete(endpoint);\n      } catch (error: any) {\n        if (error.config?.method) {\n          expect(error.config.method).toBe('delete');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n  });\n\n  describe('Quiz Session API', () => {\n    it('should test quiz session start endpoint', async () => {\n      const quizId = 'test-quiz-456';\n      const endpoint = `projects/${testProjectId}/quizzes/${quizId}/start/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.post(endpoint, {});\n      } catch (error: any) {\n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n\n    it('should test quiz answer submission endpoint', async () => {\n      const sessionId = 'test-session-789';\n      const endpoint = `quiz-sessions/${sessionId}/submit-answer/`;\n      const answerData = {\n        question_id: 'q1',\n        answer: 'A',\n        time_taken: 15000\n      };\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.post(endpoint, answerData);\n      } catch (error: any) {\n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n\n    it('should test quiz results endpoint', async () => {\n      const sessionId = 'test-session-789';\n      const endpoint = `quiz-sessions/${sessionId}/results/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n  });\n\n  describe('Quiz Analytics API', () => {\n    it('should test quiz analytics endpoint', async () => {\n      const quizId = 'test-quiz-456';\n      const endpoint = `projects/${testProjectId}/quizzes/${quizId}/analytics/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n      }\n    });\n\n    it('should test project quiz statistics endpoint', async () => {\n      const endpoint = `projects/${testProjectId}/quiz-statistics/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n      }\n    });\n  });\n\n  describe('Quiz Template API', () => {\n    it('should test quiz template listing', async () => {\n      const endpoint = 'quiz-templates/';\n      \n      console.log('🔍 Testing quiz templates:', endpoint);\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        console.log('❌ Quiz templates error:', {\n          url: error.config?.url\n        });\n        \n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n        expect(endpoint.startsWith('/')).toBe(false);\n      }\n    });\n\n    it('should test quiz generation from template', async () => {\n      const templateId = 'template-123';\n      const endpoint = `quiz-templates/${templateId}/generate/`;\n      const generationData = {\n        project_id: testProjectId,\n        source_files: ['file1.pdf'],\n        difficulty: 'medium',\n        question_count: 10\n      };\n      \n      console.log('🔍 Testing quiz generation from template:', endpoint);\n      \n      try {\n        await axiosApi.post(endpoint, generationData);\n      } catch (error: any) {\n        console.log('❌ Quiz generation error:', {\n          url: error.config?.url,\n          method: error.config?.method\n        });\n        \n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n  });\n\n  describe('Error Pattern Detection', () => {\n    it('should analyze Quiz Center API error patterns', () => {\n      console.log('📊 Quiz API Errors captured:', apiErrors);\n      \n      // Check for double slash patterns\n      const doubleSlashErrors = apiErrors.filter(err => \n        err.some((arg: any) => \n          typeof arg === 'object' && \n          (arg.url?.includes('//') || arg.fullURL?.includes('//projects/'))\n        )\n      );\n      \n      console.log('🔍 Double slash errors in Quiz API:', doubleSlashErrors.length);\n      \n      if (doubleSlashErrors.length > 0) {\n        console.warn('⚠️  Quiz API double slash issues detected!');\n        doubleSlashErrors.forEach((err, index) => {\n          console.warn(`❌ Quiz Error ${index + 1}:`, err);\n        });\n      }\n      \n      expect(doubleSlashErrors.length).toBe(0);\n    });\n  });\n\n  describe('Quiz Center URL Validation', () => {\n    it('should validate all quiz-related endpoint URLs', () => {\n      const testEndpoints = [\n        `projects/${testProjectId}/quizzes/`,\n        `projects/${testProjectId}/quizzes/123/`,\n        `projects/${testProjectId}/quizzes/123/start/`,\n        `projects/${testProjectId}/quizzes/123/analytics/`,\n        `projects/${testProjectId}/quiz-statistics/`,\n        'quiz-sessions/456/submit-answer/',\n        'quiz-sessions/456/results/',\n        'quiz-templates/',\n        'quiz-templates/123/generate/',\n      ];\n      \n      testEndpoints.forEach(endpoint => {\n        // Check for leading slash (should not have one)\n        expect(endpoint.startsWith('/')).toBe(false);\n        \n        // Check for double slashes\n        expect(endpoint.includes('//')).toBe(false);\n        \n        const fullURL = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n        expect(fullURL).toHaveNoDoubleSlash();\n      });\n    });\n  });\n});\n"],"names":["jest","setTimeout","originalConsoleError","console","error","apiErrors","beforeEach","fn","args","first","isInterestingString","includes","hasAxiosFields","some","a","url","fullURL","method","push","afterEach","describe","testProjectId","it","endpoint","quizData","title","description","quiz_type","source_files","difficulty","full","joinUrl","axiosApi","defaults","baseURL","expect","toHaveNoDoubleSlash","response","post","log","status","config","toBe","get","quizId","toContain","updateData","patch","delete","sessionId","answerData","question_id","answer","time_taken","startsWith","templateId","generationData","project_id","question_count","doubleSlashErrors","filter","err","arg","length","warn","forEach","index","testEndpoints"],"mappings":"AAAA;;;CAGC;;;;uBAEwB;qBAED;AADxBA,KAAKC,UAAU,CAAC;AAGhB,2CAA2C;AAC3C,MAAMC,uBAAuBC,QAAQC,KAAK;AAC1C,IAAIC,YAAmB,EAAE;AAEzBC,WAAW;IACTD,YAAY,EAAE;IACdF,QAAQC,KAAK,GAAGJ,KAAKO,EAAE,CAAC,CAAC,GAAGC;QAC1B,MAAMC,QAAQD,IAAI,CAAC,EAAE;QACrB,MAAME,sBAAsB,OAAOD,UAAU,YAAaA,CAAAA,MAAME,QAAQ,CAAC,gBAAgBF,MAAME,QAAQ,CAAC,eAAc;QACtH,MAAMC,iBAAiBJ,KAAKK,IAAI,CAAC,CAACC,IAAWA,KAAK,OAAOA,MAAM,YAAaA,CAAAA,EAAEC,GAAG,IAAID,EAAEE,OAAO,IAAIF,EAAEG,MAAM,AAAD;QACzG,IAAIP,uBAAuBE,gBAAgB;YACzCP,UAAUa,IAAI,CAACV;QACjB;QACA,OAAON,wBAAwBM;IACjC;AACF;AAEAW,UAAU;IACRhB,QAAQC,KAAK,GAAGF;AAClB;AAEAkB,SAAS,qCAAqC;IAC5C,MAAMC,gBAAgB;IAEtBD,SAAS,uBAAuB;QAC9BE,GAAG,sCAAsC;YACvC,MAAMC,WAAW,CAAC,SAAS,EAAEF,cAAc,SAAS,CAAC;YACrD,MAAMG,WAAW;gBACfC,OAAO;gBACPC,aAAa;gBACbC,WAAW;gBACXC,cAAc;oBAAC;iBAAY;gBAC3BC,YAAY;YACd;YAEA,MAAMC,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMC,WAAW,MAAML,eAAQ,CAACM,IAAI,CAACf,UAAUC;gBAC/CrB,QAAQoC,GAAG,CAAC,4BAA4BF,SAASG,MAAM;YACzD,EAAE,OAAOpC,OAAY;gBACnB,MAAMY,UAAUe,IAAAA,YAAO,EAAC3B,MAAMqC,MAAM,EAAEP,WAAW,IAAI9B,MAAMqC,MAAM,EAAE1B,OAAO;gBAC1EoB,OAAOnB,SAASoB,mBAAmB;gBACnC,IAAIhC,MAAMqC,MAAM,EAAExB,QAAQ;oBACxBkB,OAAO/B,MAAMqC,MAAM,CAACxB,MAAM,EAAEyB,IAAI,CAAC;gBACnC;YACF;QACF;QAEApB,GAAG,qCAAqC;YACtC,MAAMC,WAAW,CAAC,SAAS,EAAEF,cAAc,SAAS,CAAC;YAErD,MAAMS,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACW,GAAG,CAACpB;YACrB,EAAE,OAAOnB,OAAY;gBACnB,MAAMY,UAAUe,IAAAA,YAAO,EAAC3B,MAAMqC,MAAM,EAAEP,WAAW,IAAI9B,MAAMqC,MAAM,EAAE1B,OAAO;gBAC1EoB,OAAOnB,SAASoB,mBAAmB;YACrC;QACF;QAEAd,GAAG,yCAAyC;YAC1C,MAAMsB,SAAS;YACf,MAAMrB,WAAW,CAAC,SAAS,EAAEF,cAAc,SAAS,EAAEuB,OAAO,CAAC,CAAC;YAE/D,MAAMd,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACW,GAAG,CAACpB;YACrB,EAAE,OAAOnB,OAAY;gBACnB,MAAMY,UAAUe,IAAAA,YAAO,EAAC3B,MAAMqC,MAAM,EAAEP,WAAW,IAAI9B,MAAMqC,MAAM,EAAE1B,OAAO;gBAC1EoB,OAAOnB,SAASoB,mBAAmB;gBACnC,IAAIpB,SAAS;oBACXmB,OAAOnB,SAAS6B,SAAS,CAACD;gBAC5B;YACF;QACF;QAEAtB,GAAG,oCAAoC;YACrC,MAAMsB,SAAS;YACf,MAAMrB,WAAW,CAAC,SAAS,EAAEF,cAAc,SAAS,EAAEuB,OAAO,CAAC,CAAC;YAC/D,MAAME,aAAa;gBACjBrB,OAAO;gBACPC,aAAa;YACf;YAEA,MAAMI,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACe,KAAK,CAACxB,UAAUuB;YACjC,EAAE,OAAO1C,OAAY;gBACnB,MAAMY,UAAUe,IAAAA,YAAO,EAAC3B,MAAMqC,MAAM,EAAEP,WAAW,IAAI9B,MAAMqC,MAAM,EAAE1B,OAAO;gBAC1EoB,OAAOnB,SAASoB,mBAAmB;gBACnC,IAAIhC,MAAMqC,MAAM,EAAExB,QAAQ;oBACxBkB,OAAO/B,MAAMqC,MAAM,CAACxB,MAAM,EAAEyB,IAAI,CAAC;gBACnC;YACF;QACF;QAEApB,GAAG,sCAAsC;YACvC,MAAMsB,SAAS;YACf,MAAMrB,WAAW,CAAC,SAAS,EAAEF,cAAc,SAAS,EAAEuB,OAAO,CAAC,CAAC;YAE/D,MAAMd,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACgB,MAAM,CAACzB;YACxB,EAAE,OAAOnB,OAAY;gBACnB,IAAIA,MAAMqC,MAAM,EAAExB,QAAQ;oBACxBkB,OAAO/B,MAAMqC,MAAM,CAACxB,MAAM,EAAEyB,IAAI,CAAC;gBACnC;gBACA,IAAItC,MAAMqC,MAAM,EAAE1B,KAAK;oBACrBoB,OAAO/B,MAAMqC,MAAM,CAAC1B,GAAG,EAAE2B,IAAI,CAACnB;gBAChC;YACF;QACF;IACF;IAEAH,SAAS,oBAAoB;QAC3BE,GAAG,2CAA2C;YAC5C,MAAMsB,SAAS;YACf,MAAMrB,WAAW,CAAC,SAAS,EAAEF,cAAc,SAAS,EAAEuB,OAAO,OAAO,CAAC;YAErE,MAAMd,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACM,IAAI,CAACf,UAAU,CAAC;YACjC,EAAE,OAAOnB,OAAY;gBACnB,IAAIA,MAAMqC,MAAM,EAAExB,QAAQ;oBACxBkB,OAAO/B,MAAMqC,MAAM,CAACxB,MAAM,EAAEyB,IAAI,CAAC;gBACnC;gBACA,IAAItC,MAAMqC,MAAM,EAAE1B,KAAK;oBACrBoB,OAAO/B,MAAMqC,MAAM,CAAC1B,GAAG,EAAE2B,IAAI,CAACnB;gBAChC;YACF;QACF;QAEAD,GAAG,+CAA+C;YAChD,MAAM2B,YAAY;YAClB,MAAM1B,WAAW,CAAC,cAAc,EAAE0B,UAAU,eAAe,CAAC;YAC5D,MAAMC,aAAa;gBACjBC,aAAa;gBACbC,QAAQ;gBACRC,YAAY;YACd;YAEA,MAAMvB,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACM,IAAI,CAACf,UAAU2B;YAChC,EAAE,OAAO9C,OAAY;gBACnB,IAAIA,MAAMqC,MAAM,EAAExB,QAAQ;oBACxBkB,OAAO/B,MAAMqC,MAAM,CAACxB,MAAM,EAAEyB,IAAI,CAAC;gBACnC;gBACA,IAAItC,MAAMqC,MAAM,EAAE1B,KAAK;oBACrBoB,OAAO/B,MAAMqC,MAAM,CAAC1B,GAAG,EAAE2B,IAAI,CAACnB;gBAChC;YACF;QACF;QAEAD,GAAG,qCAAqC;YACtC,MAAM2B,YAAY;YAClB,MAAM1B,WAAW,CAAC,cAAc,EAAE0B,UAAU,SAAS,CAAC;YAEtD,MAAMnB,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACW,GAAG,CAACpB;YACrB,EAAE,OAAOnB,OAAY;gBACnB,IAAIA,MAAMqC,MAAM,EAAE1B,KAAK;oBACrBoB,OAAO/B,MAAMqC,MAAM,CAAC1B,GAAG,EAAE2B,IAAI,CAACnB;gBAChC;YACF;QACF;IACF;IAEAH,SAAS,sBAAsB;QAC7BE,GAAG,uCAAuC;YACxC,MAAMsB,SAAS;YACf,MAAMrB,WAAW,CAAC,SAAS,EAAEF,cAAc,SAAS,EAAEuB,OAAO,WAAW,CAAC;YAEzE,MAAMd,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACW,GAAG,CAACpB;YACrB,EAAE,OAAOnB,OAAY;gBACnB,MAAMY,UAAUe,IAAAA,YAAO,EAAC3B,MAAMqC,MAAM,EAAEP,WAAW,IAAI9B,MAAMqC,MAAM,EAAE1B,OAAO;gBAC1EoB,OAAOnB,SAASoB,mBAAmB;YACrC;QACF;QAEAd,GAAG,gDAAgD;YACjD,MAAMC,WAAW,CAAC,SAAS,EAAEF,cAAc,iBAAiB,CAAC;YAE7D,MAAMS,OAAOC,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;YACzDY,OAAOL,MAAMM,mBAAmB;YAEhC,IAAI;gBACF,MAAMJ,eAAQ,CAACW,GAAG,CAACpB;YACrB,EAAE,OAAOnB,OAAY;gBACnB,MAAMY,UAAUe,IAAAA,YAAO,EAAC3B,MAAMqC,MAAM,EAAEP,WAAW,IAAI9B,MAAMqC,MAAM,EAAE1B,OAAO;gBAC1EoB,OAAOnB,SAASoB,mBAAmB;YACrC;QACF;IACF;IAEAhB,SAAS,qBAAqB;QAC5BE,GAAG,qCAAqC;YACtC,MAAMC,WAAW;YAEjBpB,QAAQoC,GAAG,CAAC,8BAA8BhB;YAE1C,IAAI;gBACF,MAAMS,eAAQ,CAACW,GAAG,CAACpB;YACrB,EAAE,OAAOnB,OAAY;gBACnBD,QAAQoC,GAAG,CAAC,2BAA2B;oBACrCxB,KAAKX,MAAMqC,MAAM,EAAE1B;gBACrB;gBAEA,IAAIX,MAAMqC,MAAM,EAAE1B,KAAK;oBACrBoB,OAAO/B,MAAMqC,MAAM,CAAC1B,GAAG,EAAE2B,IAAI,CAACnB;gBAChC;gBACAY,OAAOZ,SAAS+B,UAAU,CAAC,MAAMZ,IAAI,CAAC;YACxC;QACF;QAEApB,GAAG,6CAA6C;YAC9C,MAAMiC,aAAa;YACnB,MAAMhC,WAAW,CAAC,eAAe,EAAEgC,WAAW,UAAU,CAAC;YACzD,MAAMC,iBAAiB;gBACrBC,YAAYpC;gBACZO,cAAc;oBAAC;iBAAY;gBAC3BC,YAAY;gBACZ6B,gBAAgB;YAClB;YAEAvD,QAAQoC,GAAG,CAAC,6CAA6ChB;YAEzD,IAAI;gBACF,MAAMS,eAAQ,CAACM,IAAI,CAACf,UAAUiC;YAChC,EAAE,OAAOpD,OAAY;gBACnBD,QAAQoC,GAAG,CAAC,4BAA4B;oBACtCxB,KAAKX,MAAMqC,MAAM,EAAE1B;oBACnBE,QAAQb,MAAMqC,MAAM,EAAExB;gBACxB;gBAEA,IAAIb,MAAMqC,MAAM,EAAExB,QAAQ;oBACxBkB,OAAO/B,MAAMqC,MAAM,CAACxB,MAAM,EAAEyB,IAAI,CAAC;gBACnC;gBACA,IAAItC,MAAMqC,MAAM,EAAE1B,KAAK;oBACrBoB,OAAO/B,MAAMqC,MAAM,CAAC1B,GAAG,EAAE2B,IAAI,CAACnB;gBAChC;YACF;QACF;IACF;IAEAH,SAAS,2BAA2B;QAClCE,GAAG,iDAAiD;YAClDnB,QAAQoC,GAAG,CAAC,gCAAgClC;YAE5C,kCAAkC;YAClC,MAAMsD,oBAAoBtD,UAAUuD,MAAM,CAACC,CAAAA,MACzCA,IAAIhD,IAAI,CAAC,CAACiD,MACR,OAAOA,QAAQ,YACdA,CAAAA,IAAI/C,GAAG,EAAEJ,SAAS,SAASmD,IAAI9C,OAAO,EAAEL,SAAS,cAAa;YAInER,QAAQoC,GAAG,CAAC,uCAAuCoB,kBAAkBI,MAAM;YAE3E,IAAIJ,kBAAkBI,MAAM,GAAG,GAAG;gBAChC5D,QAAQ6D,IAAI,CAAC;gBACbL,kBAAkBM,OAAO,CAAC,CAACJ,KAAKK;oBAC9B/D,QAAQ6D,IAAI,CAAC,CAAC,aAAa,EAAEE,QAAQ,EAAE,CAAC,CAAC,EAAEL;gBAC7C;YACF;YAEA1B,OAAOwB,kBAAkBI,MAAM,EAAErB,IAAI,CAAC;QACxC;IACF;IAEAtB,SAAS,8BAA8B;QACrCE,GAAG,kDAAkD;YACnD,MAAM6C,gBAAgB;gBACpB,CAAC,SAAS,EAAE9C,cAAc,SAAS,CAAC;gBACpC,CAAC,SAAS,EAAEA,cAAc,aAAa,CAAC;gBACxC,CAAC,SAAS,EAAEA,cAAc,mBAAmB,CAAC;gBAC9C,CAAC,SAAS,EAAEA,cAAc,uBAAuB,CAAC;gBAClD,CAAC,SAAS,EAAEA,cAAc,iBAAiB,CAAC;gBAC5C;gBACA;gBACA;gBACA;aACD;YAED8C,cAAcF,OAAO,CAAC1C,CAAAA;gBACpB,gDAAgD;gBAChDY,OAAOZ,SAAS+B,UAAU,CAAC,MAAMZ,IAAI,CAAC;gBAEtC,2BAA2B;gBAC3BP,OAAOZ,SAASZ,QAAQ,CAAC,OAAO+B,IAAI,CAAC;gBAErC,MAAM1B,UAAUe,IAAAA,YAAO,EAAC,AAACC,eAAQ,CAACC,QAAQ,CAASC,OAAO,EAAEX;gBAC5DY,OAAOnB,SAASoB,mBAAmB;YACrC;QACF;IACF;AACF"}