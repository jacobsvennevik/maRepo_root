7165c992005b6879ed9f54c600fbe227
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    projectColors: function() {
        return projectColors;
    },
    projectIcons: function() {
        return projectIcons;
    },
    validateProjectCreateInput: function() {
        return validateProjectCreateInput;
    }
});
function validateProjectCreateInput(input) {
    const { name, project_type, study_frequency, start_date, end_date, is_draft, important_dates, course_files, test_files, uploaded_files, mock_mode, seed_syllabus, seed_tests, seed_content, seed_flashcards, // Explicitly ignore deprecated fields
    purpose, goal, collaboration, learningStyle, studyPreference, learningDifficulties, evaluationTypes, courseType, assessmentType, ...rest } = input;
    // Log any unexpected fields for debugging
    if (Object.keys(rest).length > 0) {
        console.warn('Unexpected fields in project creation payload:', Object.keys(rest));
    }
    return {
        name: name || '',
        project_type: project_type || 'school',
        study_frequency,
        start_date,
        end_date,
        is_draft: is_draft ?? true,
        important_dates,
        course_files,
        test_files,
        uploaded_files,
        mock_mode: mock_mode ?? false,
        seed_syllabus: seed_syllabus ?? true,
        seed_tests: seed_tests ?? true,
        seed_content: seed_content ?? true,
        seed_flashcards: seed_flashcards ?? false
    };
}
const projectIcons = {
    biology: "üß¨",
    chemistry: "üß™",
    physics: "‚öõÔ∏è",
    math: "üßÆ",
    "computer-science": "üíª",
    default: "üìö"
};
const projectColors = {
    biology: "bg-green-500",
    chemistry: "bg-blue-500",
    physics: "bg-purple-500",
    math: "bg-orange-500",
    "computer-science": "bg-indigo-500",
    default: "bg-gray-500"
};

//# sourceMappingURL=data:application/json;base64,