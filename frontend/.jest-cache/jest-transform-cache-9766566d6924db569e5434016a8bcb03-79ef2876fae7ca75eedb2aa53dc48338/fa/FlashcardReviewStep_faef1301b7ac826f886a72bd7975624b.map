{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/components/FlashcardReviewStep.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { UseFormReturn } from 'react-hook-form';\n\nexport type ReviewCard = {\n  id: string;\n  front: string;\n  back: string;\n  tags: string[];\n};\n\nexport type FlashcardDeckForm = {\n  title: string;\n  description: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n  language: string;\n};\n\ntype Props = {\n  cards: ReviewCard[];\n  form: UseFormReturn<FlashcardDeckForm>;\n  mockMode?: boolean;\n  suggestedTitle?: string;\n  suggestedDescription?: string;\n};\n\nexport default function FlashcardReviewStep(props: Props) {\n  const { cards, form, mockMode, suggestedTitle, suggestedDescription } = props;\n\n  // Ensure we always have an array\n  const safeCards: ReviewCard[] = Array.isArray(cards) ? cards : [];\n\n  // Initialize form values once if empty (don't fight RHF controlled state)\n  React.useEffect(() => {\n    const v = form.getValues();\n    const needsTitle = !v.title && suggestedTitle;\n    const needsDesc = !v.description && suggestedDescription;\n\n    if (needsTitle || needsDesc) {\n      form.reset({\n        title: needsTitle ? suggestedTitle! : v.title,\n        description: needsDesc ? suggestedDescription! : v.description,\n        difficulty: (v.difficulty ?? 'medium') as FlashcardDeckForm['difficulty'],\n        language: v.language ?? 'en',\n      }, { keepDirty: false, keepTouched: true });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [suggestedTitle, suggestedDescription]);\n\n  const [showAll, setShowAll] = React.useState(false);\n  const displayed = showAll ? safeCards : safeCards.slice(0, 10);\n\n  // Simple derived stats\n  const total = safeCards.length;\n  const uniqueTags = React.useMemo(() => {\n    const set = new Set<string>();\n    safeCards.forEach(c => (c.tags || []).forEach(t => set.add(t)));\n    return set.size;\n  }, [safeCards]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Mock Mode Banner */}\n      {mockMode && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <div className=\"flex items-center gap-2\">\n            <span className=\"inline-block h-2 w-2 rounded-full bg-yellow-400\" />\n            <span className=\"text-sm text-yellow-800\">\n              Mock mode is ON — these flashcards are examples to preview the flow.\n            </span>\n          </div>\n        </div>\n      )}\n\n      {/* Deck Details */}\n      <section className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium\">Deck Title</label>\n          <input\n            className=\"w-full border rounded-lg p-2\"\n            {...form.register('title')}\n            placeholder=\"e.g., Key Concepts from Uploaded Materials\"\n          />\n        </div>\n\n        <div className=\"space-y-2 md:col-span-1\">\n          <label className=\"block text-sm font-medium\">Difficulty</label>\n          <select className=\"w-full border rounded-lg p-2\" {...form.register('difficulty')}>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </div>\n\n        <div className=\"space-y-2 md:col-span-2\">\n          <label className=\"block text-sm font-medium\">Description</label>\n          <textarea\n            className=\"w-full border rounded-lg p-2\"\n            rows={3}\n            {...form.register('description')}\n            placeholder=\"Short summary of what this deck covers…\"\n          />\n        </div>\n      </section>\n\n      {/* Summary Stats */}\n      <section className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div className=\"border rounded-2xl p-4 text-center\">\n          <div className=\"text-sm opacity-70\">Total Cards</div>\n          <div className=\"text-2xl font-semibold\">{total}</div>\n        </div>\n        <div className=\"border rounded-2xl p-4 text-center\">\n          <div className=\"text-sm opacity-70\">Previewed</div>\n          <div className=\"text-2xl font-semibold\">{displayed.length}</div>\n        </div>\n        <div className=\"border rounded-2xl p-4 text-center\">\n          <div className=\"text-sm opacity-70\">Unique Tags</div>\n          <div className=\"text-2xl font-semibold\">{uniqueTags}</div>\n        </div>\n        <div className=\"border rounded-2xl p-4 text-center\">\n          <div className=\"text-sm opacity-70\">Language</div>\n          <div className=\"text-2xl font-semibold\">{form.watch('language') || 'en'}</div>\n        </div>\n      </section>\n\n      {/* Cards Preview */}\n      <section className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-base font-semibold\">Preview</h3>\n          {total > 10 && (\n            <button\n              type=\"button\"\n              onClick={() => setShowAll(s => !s)}\n              className=\"text-sm underline\"\n            >\n              {showAll ? 'Show first 10' : `Show all (${total})`}\n            </button>\n          )}\n        </div>\n        <ul className=\"divide-y rounded-lg border\">\n          {displayed.map((c) => (\n            <li key={c.id} className=\"p-3\">\n              <div className=\"font-medium\">{c.front}</div>\n              <div className=\"text-sm opacity-80\">{c.back}</div>\n              {Array.isArray(c.tags) && c.tags.length > 0 && (\n                <div className=\"mt-1 text-xs opacity-60\">{c.tags.join(' • ')}</div>\n              )}\n            </li>\n          ))}\n          {displayed.length === 0 && (\n            <li className=\"p-3 text-sm opacity-70\">No cards to preview yet.</li>\n          )}\n        </ul>\n      </section>\n    </div>\n  );\n}\n"],"names":["FlashcardReviewStep","props","cards","form","mockMode","suggestedTitle","suggestedDescription","safeCards","Array","isArray","React","useEffect","v","getValues","needsTitle","title","needsDesc","description","reset","difficulty","language","keepDirty","keepTouched","showAll","setShowAll","useState","displayed","slice","total","length","uniqueTags","useMemo","set","Set","forEach","c","tags","t","add","size","div","className","span","section","label","input","register","placeholder","select","option","value","textarea","rows","watch","h3","button","type","onClick","s","ul","map","li","front","back","join","id"],"mappings":"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"}