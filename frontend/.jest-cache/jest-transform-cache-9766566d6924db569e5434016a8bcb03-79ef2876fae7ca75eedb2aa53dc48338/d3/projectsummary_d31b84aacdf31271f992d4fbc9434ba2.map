{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/project-summary.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { \n  Check, FileText, ChevronLeft, Calendar, Clock, Users, Target, \n  GraduationCap, BookOpen, FlaskConical, Presentation, FileCheck,\n  User, Trophy, Brain, Heart, Eye, Ear, HandIcon, PenTool,\n  Coffee, Moon, Sun, Zap, Smartphone, Monitor, Gamepad2\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ProjectSetup } from '../types';\nimport { uploadFile, createProject, finalizeProject, ProjectData } from '../services/api';\nimport { \n  EVALUATION_TYPE_OPTIONS,\n  DATE_TYPE_OPTIONS\n} from '../services/evaluation';\nimport { \n  SCHOOL_PURPOSE_OPTIONS, \n  PURPOSE_OPTIONS, \n  TEST_LEVEL_OPTIONS,\n  GRADE_LEVEL_OPTIONS,\n  TIMEFRAME_OPTIONS,\n  FREQUENCY_OPTIONS,\n  COLLABORATION_OPTIONS\n} from '../services/options';\nimport { formatFileSize, formatDate } from '../services/formatters';\n\nexport function ProjectSummary({ setup, onBack }: { setup: ProjectSetup; onBack: () => void }): React.ReactElement {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const router = useRouter();\n\n  // TODO: Replace with actual auth token\n  const authToken = '203e2ee2825aaf19fbd5a9a5c4768c243944058c';\n\n  const handleCreateProject = async () => {\n    setIsSubmitting(true);\n    try {\n      // 1. Upload files and get their URLs\n      const courseFileUrls = await Promise.all(\n        setup.courseFiles.map(file => uploadFile(file, 'course-files'))\n      );\n      const testFileUrls = await Promise.all(\n        setup.testFiles.map(file => uploadFile(file, 'test-files'))\n      );\n\n      // 2. Prepare project data\n      const projectData: ProjectData = {\n        name: setup.projectName,\n        project_type: 'school', // This is the school setup\n        course_name: setup.purpose, // Assuming purpose is course name for now\n        goal_description: setup.goal,\n        study_frequency: setup.studyFrequency,\n        important_dates: setup.importantDates.map(d => ({ title: d.description, date: d.date })),\n        // Include uploaded file URLs\n        course_files: courseFileUrls,\n        test_files: testFileUrls,\n        // Add other fields from the 'setup' object as needed\n      };\n\n      // 3. Create project\n      const newProject = await createProject(projectData);\n\n      // 4. Finalize project (set is_draft to false)\n      await finalizeProject(newProject.id);\n\n      // 5. Clean up localStorage after successful project creation\n      try {\n        localStorage.removeItem('project-setup-guided-setup');\n        console.log('ðŸ§¹ Cleaned up localStorage after successful project creation');\n      } catch (error) {\n        console.warn('Failed to cleanup localStorage:', error);\n      }\n\n      // 6. Navigate to the new project's overview page\n      router.push(`/projects/${newProject.id}/overview`);\n\n    } catch (error) {\n      console.error(\"Failed to create project:\", error);\n      // Handle error (e.g., show a toast notification)\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Helper functions to get labels from constants\n  const getPurposeLabel = (value: string) => {\n    if (value === 'custom' && setup.customDescription) {\n      return setup.customDescription;\n    }\n    return PURPOSE_OPTIONS.find(opt => opt.value === value)?.label || \n           SCHOOL_PURPOSE_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  const getTestLevelLabel = (value: string) => {\n    return TEST_LEVEL_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  const getGradeLevelLabel = (value: string) => {\n    return GRADE_LEVEL_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  const getTimeframeLabel = (value: string) => {\n    return TIMEFRAME_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  const getFrequencyLabel = (value: string) => {\n    return FREQUENCY_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  const getCollaborationLabel = (value: string) => {\n    return COLLABORATION_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  const getEvaluationTypeLabel = (value: string) => {\n    return EVALUATION_TYPE_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  const getDateTypeLabel = (value: string) => {\n    return DATE_TYPE_OPTIONS.find(opt => opt.value === value)?.label || value;\n  };\n\n  // Helper to format learning preferences\n  const formatLearningPreference = (value: string | string[] | undefined | null) => {\n    if (!value) return '';\n    if (Array.isArray(value)) {\n      return value.join(', ');\n    }\n    return value;\n  };\n\n  // Calculate study summary stats\n  const totalFiles = (setup.courseFiles || []).length + (setup.testFiles || []).length + (setup.uploadedFiles || []).length;\n  const totalFileSize = [...(setup.courseFiles || []), ...(setup.testFiles || []), ...(setup.uploadedFiles || [])]\n    .reduce((total, file) => total + file.size, 0);\n  const upcomingDates = setup.importantDates.filter(date => new Date(date.date) > new Date()).length;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <div className=\"max-w-6xl mx-auto p-4 sm:p-6 lg:p-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <Button variant=\"ghost\" onClick={onBack} className=\"flex items-center\">\n            <ChevronLeft size={16} className=\"mr-1\" />\n            Back to Setup\n          </Button>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"space-y-6\">\n          {/* Hero Section */}\n          <Card className=\"overflow-hidden\">\n            <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"flex items-center mb-2\">\n                    <div className=\"w-12 h-12 bg-white/20 rounded-full flex items-center justify-center mr-4\">\n                      <Check className=\"h-6 w-6\" />\n                    </div>\n                    <div>\n                      <h1 className=\"text-2xl font-bold\">{setup.projectName}</h1>\n                      <p className=\"text-blue-100\">{getPurposeLabel(setup.purpose || '')}</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-3xl font-bold\">{totalFiles}</div>\n                  <div className=\"text-sm text-blue-100\">Files Uploaded</div>\n                </div>\n              </div>\n              \n              {/* Quick Stats */}\n              <div className=\"mt-6 grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n                  <Calendar className=\"h-5 w-5 mx-auto mb-1\" />\n                  <div className=\"text-xs text-blue-100\">Timeline</div>\n                  <div className=\"font-semibold\">{getTimeframeLabel(setup.timeframe)}</div>\n                </div>\n                <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n                  <Clock className=\"h-5 w-5 mx-auto mb-1\" />\n                  <div className=\"text-xs text-blue-100\">Frequency</div>\n                  <div className=\"font-semibold\">{getFrequencyLabel(setup.studyFrequency)}</div>\n                </div>\n                <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n                  <Users className=\"h-5 w-5 mx-auto mb-1\" />\n                  <div className=\"text-xs text-blue-100\">Collaboration</div>\n                  <div className=\"font-semibold\">{getCollaborationLabel(setup.collaboration || '')}</div>\n                </div>\n                <div className=\"bg-white/10 rounded-lg p-3 text-center\">\n                  <Trophy className=\"h-5 w-5 mx-auto mb-1\" />\n                  <div className=\"text-xs text-blue-100\">Level</div>\n                  <div className=\"font-semibold\">{getTestLevelLabel(setup.testLevel)}</div>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Main Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Left Column - Core Info */}\n            <div className=\"lg:col-span-2 space-y-6\">\n              \n              {/* Academic Details */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <GraduationCap className=\"h-5 w-5 mr-2\" />\n                    Academic Details\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">Education Level</h4>\n                      <p className=\"text-gray-600\">{getTestLevelLabel(setup.testLevel)}</p>\n                      {setup.gradeLevel && (\n                        <p className=\"text-sm text-gray-500\">{getGradeLevelLabel(setup.gradeLevel)}</p>\n                      )}\n                    </div>\n                    {setup.assignmentDescription && (\n                      <div>\n                        <h4 className=\"font-medium text-gray-900 mb-1\">Course Description</h4>\n                        <p className=\"text-gray-600 text-sm\">{setup.assignmentDescription}</p>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Learning Preferences */}\n              {(setup.learningStyle || setup.studyPreference) && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Brain className=\"h-5 w-5 mr-2\" />\n                      Learning Preferences\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {setup.learningStyle && (\n                        <div>\n                          <h4 className=\"font-medium text-gray-900 mb-2\">Learning Style</h4>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {formatLearningPreference(setup.learningStyle).split(', ').filter(style => style.trim() !== '').map(style => (\n                              <Badge key={style} variant=\"outline\" className=\"text-xs\">\n                                {style === 'visual' && <Eye className=\"h-3 w-3 mr-1\" />}\n                                {style === 'auditory' && <Ear className=\"h-3 w-3 mr-1\" />}\n                                {style === 'kinesthetic' && <HandIcon className=\"h-3 w-3 mr-1\" />}\n                                {style === 'reading-writing' && <PenTool className=\"h-3 w-3 mr-1\" />}\n                                {style.charAt(0).toUpperCase() + style.slice(1)}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                      {setup.studyPreference && (\n                        <div>\n                          <h4 className=\"font-medium text-gray-900 mb-2\">Study Preferences</h4>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {formatLearningPreference(setup.studyPreference).split(', ').filter(pref => pref.trim() !== '').map(pref => (\n                              <Badge key={pref} variant=\"outline\" className=\"text-xs\">\n                                {pref === 'morning' && <Sun className=\"h-3 w-3 mr-1\" />}\n                                {pref === 'evening' && <Moon className=\"h-3 w-3 mr-1\" />}\n                                {pref === 'short-bursts' && <Zap className=\"h-3 w-3 mr-1\" />}\n                                {pref === 'long-sessions' && <Coffee className=\"h-3 w-3 mr-1\" />}\n                                {pref === 'mobile' && <Smartphone className=\"h-3 w-3 mr-1\" />}\n                                {pref === 'desktop' && <Monitor className=\"h-3 w-3 mr-1\" />}\n                                {pref === 'interactive' && <Gamepad2 className=\"h-3 w-3 mr-1\" />}\n                                {pref.charAt(0).toUpperCase() + pref.slice(1).replace('-', ' ')}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Goal */}\n              {setup.goal && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Target className=\"h-5 w-5 mr-2\" />\n                      Learning Goal\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-gray-700\">{setup.goal}</p>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n\n            {/* Right Column - Files & Dates */}\n            <div className=\"space-y-6\">\n              \n              {/* Study Materials */}\n              {totalFiles > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <span className=\"flex items-center\">\n                        <FileText className=\"h-5 w-5 mr-2\" />\n                        Study Materials\n                      </span>\n                      <Badge variant=\"secondary\">{totalFiles} files</Badge>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {/* Course Files */}\n                    {setup.courseFiles.length > 0 && (\n                      <div>\n                        <h4 className=\"font-medium text-gray-900 mb-2 flex items-center\">\n                          <BookOpen className=\"h-4 w-4 mr-1\" />\n                          Course Materials ({setup.courseFiles.length})\n                        </h4>\n                        <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                          {setup.courseFiles.slice(0, 3).map((file, index) => (\n                            <div key={index} className=\"flex items-center space-x-2 p-2 bg-blue-50 border border-blue-200 rounded text-xs\">\n                              <FileText className=\"h-3 w-3 text-blue-600\" />\n                              <span className=\"flex-1 truncate text-blue-800\">{file.name}</span>\n                              <span className=\"text-blue-600\">{formatFileSize(file.size)}</span>\n                            </div>\n                          ))}\n                          {setup.courseFiles.length > 3 && (\n                            <div className=\"text-xs text-gray-500 text-center\">\n                              +{setup.courseFiles.length - 3} more files\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Test Files */}\n                    {setup.testFiles.length > 0 && (\n                      <div>\n                        <h4 className=\"font-medium text-gray-900 mb-2 flex items-center\">\n                          <FileCheck className=\"h-4 w-4 mr-1\" />\n                          Test Materials ({setup.testFiles.length})\n                        </h4>\n                        <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                          {setup.testFiles.slice(0, 3).map((file, index) => (\n                            <div key={index} className=\"flex items-center space-x-2 p-2 bg-purple-50 border border-purple-200 rounded text-xs\">\n                              <FileCheck className=\"h-3 w-3 text-purple-600\" />\n                              <span className=\"flex-1 truncate text-purple-800\">{file.name}</span>\n                              <span className=\"text-purple-600\">{formatFileSize(file.size)}</span>\n                            </div>\n                          ))}\n                          {setup.testFiles.length > 3 && (\n                            <div className=\"text-xs text-gray-500 text-center\">\n                              +{setup.testFiles.length - 3} more files\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Other Files */}\n                    {setup.uploadedFiles && setup.uploadedFiles.length > 0 && (\n                      <div>\n                        <h4 className=\"font-medium text-gray-900 mb-2 flex items-center\">\n                          <FileText className=\"h-4 w-4 mr-1\" />\n                          Other Materials ({setup.uploadedFiles.length})\n                        </h4>\n                        <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                          {setup.uploadedFiles.slice(0, 3).map((file, index) => (\n                            <div key={index} className=\"flex items-center space-x-2 p-2 bg-gray-50 border border-gray-200 rounded text-xs\">\n                              <FileText className=\"h-3 w-3 text-gray-600\" />\n                              <span className=\"flex-1 truncate text-gray-800\">{file.name}</span>\n                              <span className=\"text-gray-600\">{formatFileSize(file.size)}</span>\n                            </div>\n                          ))}\n                          {setup.uploadedFiles.length > 3 && (\n                            <div className=\"text-xs text-gray-500 text-center\">\n                              +{setup.uploadedFiles.length - 3} more files\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                                         <div className=\"border-t border-gray-200 pt-3 mt-3\">\n                       <div className=\"text-xs text-gray-500 text-center\">\n                         Total: {formatFileSize(totalFileSize)}\n                       </div>\n                     </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Important Dates */}\n              {setup.importantDates.length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <span className=\"flex items-center\">\n                        <Calendar className=\"h-5 w-5 mr-2\" />\n                        Important Dates\n                      </span>\n                      <Badge variant=\"secondary\">{upcomingDates} upcoming</Badge>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3 max-h-48 overflow-y-auto\">\n                      {setup.importantDates\n                        .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n                        .map((dateItem, index) => {\n                          const dateType = DATE_TYPE_OPTIONS.find(opt => opt.value === dateItem.type);\n                          const isUpcoming = new Date(dateItem.date) > new Date();\n                          return (\n                            <div key={index} className={`p-3 rounded-lg border ${isUpcoming ? 'bg-yellow-50 border-yellow-200' : 'bg-gray-50 border-gray-200'}`}>\n                              <div className=\"flex items-start justify-between\">\n                                <div className=\"flex-1\">\n                                  <div className=\"flex items-center mb-1\">\n                                    <Badge className={`text-xs mr-2 ${dateType?.color || 'bg-gray-100 text-gray-800'}`}>\n                                      {dateType?.label || 'Other'}\n                                    </Badge>\n                                    {isUpcoming && (\n                                      <Badge variant=\"outline\" className=\"text-xs bg-yellow-100 text-yellow-800\">\n                                        Upcoming\n                                      </Badge>\n                                    )}\n                                  </div>\n                                  <p className=\"font-medium text-sm text-gray-900\">{dateItem.description}</p>\n                                  <p className=\"text-xs text-gray-600 mt-1\">{formatDate(dateItem.date)}</p>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Ready to start learning?</h3>\n                  <p className=\"text-sm text-gray-600\">Your personalized study plan is ready to be created.</p>\n                </div>\n                <div className=\"flex gap-3\">\n                  <Button variant=\"outline\" onClick={onBack}>\n                    Edit Setup\n                  </Button>\n                  <Button onClick={handleCreateProject} disabled={isSubmitting} className=\"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700\">\n                    {isSubmitting ? 'Creating Project...' : 'Create Project & Start Learning'}\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["ProjectSummary","setup","onBack","isSubmitting","setIsSubmitting","useState","router","useRouter","authToken","handleCreateProject","courseFileUrls","Promise","all","courseFiles","map","file","uploadFile","testFileUrls","testFiles","projectData","name","projectName","project_type","course_name","purpose","goal_description","goal","study_frequency","studyFrequency","important_dates","importantDates","d","title","description","date","course_files","test_files","newProject","createProject","finalizeProject","id","localStorage","removeItem","console","log","error","warn","push","getPurposeLabel","value","customDescription","PURPOSE_OPTIONS","find","opt","label","SCHOOL_PURPOSE_OPTIONS","getTestLevelLabel","TEST_LEVEL_OPTIONS","getGradeLevelLabel","GRADE_LEVEL_OPTIONS","getTimeframeLabel","TIMEFRAME_OPTIONS","getFrequencyLabel","FREQUENCY_OPTIONS","getCollaborationLabel","COLLABORATION_OPTIONS","getEvaluationTypeLabel","EVALUATION_TYPE_OPTIONS","getDateTypeLabel","DATE_TYPE_OPTIONS","formatLearningPreference","Array","isArray","join","totalFiles","length","uploadedFiles","totalFileSize","reduce","total","size","upcomingDates","filter","Date","div","className","Button","variant","onClick","ChevronLeft","Card","Check","h1","p","Calendar","timeframe","Clock","Users","collaboration","Trophy","testLevel","CardHeader","CardTitle","GraduationCap","CardContent","h4","gradeLevel","assignmentDescription","learningStyle","studyPreference","Brain","split","style","trim","Badge","Eye","Ear","HandIcon","PenTool","charAt","toUpperCase","slice","pref","Sun","Moon","Zap","Coffee","Smartphone","Monitor","Gamepad2","replace","Target","span","FileText","BookOpen","index","formatFileSize","FileCheck","sort","a","b","getTime","dateItem","dateType","type","isUpcoming","color","formatDate","h3","disabled"],"mappings":"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"}