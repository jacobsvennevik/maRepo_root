87398effd50991872c9861df29b7a1d2
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Tooltip: function() {
        return Tooltip;
    },
    TooltipContent: function() {
        return TooltipContent;
    },
    TooltipProvider: function() {
        return TooltipProvider;
    },
    TooltipTrigger: function() {
        return TooltipTrigger;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const TooltipContext = /*#__PURE__*/ _react.createContext(null);
const TooltipProvider = ({ children })=>{
    const [isOpen, setIsOpen] = _react.useState(false);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(TooltipContext.Provider, {
        value: {
            isOpen,
            setIsOpen
        },
        children: children
    });
};
const Tooltip = /*#__PURE__*/ _react.forwardRef(({ className, children, ...props }, ref)=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        ref: ref,
        className: (0, _utils.cn)("relative inline-block", className),
        ...props,
        children: children
    });
});
Tooltip.displayName = "Tooltip";
const TooltipTrigger = /*#__PURE__*/ _react.forwardRef(({ className, children, ...props }, ref)=>{
    const context = _react.useContext(TooltipContext);
    if (!context) {
        throw new Error("TooltipTrigger must be used within a TooltipProvider");
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        ref: ref,
        className: (0, _utils.cn)("cursor-help", className),
        onMouseEnter: ()=>context.setIsOpen(true),
        onMouseLeave: ()=>context.setIsOpen(false),
        onFocus: ()=>context.setIsOpen(true),
        onBlur: ()=>context.setIsOpen(false),
        ...props,
        children: children
    });
});
TooltipTrigger.displayName = "TooltipTrigger";
const TooltipContent = /*#__PURE__*/ _react.forwardRef(({ className, children, ...props }, ref)=>{
    const context = _react.useContext(TooltipContext);
    if (!context) {
        throw new Error("TooltipContent must be used within a TooltipProvider");
    }
    if (!context.isOpen) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        ref: ref,
        className: (0, _utils.cn)("absolute z-50 px-3 py-2 text-sm text-white bg-gray-900 rounded-md shadow-lg -top-2 left-1/2 transform -translate-x-1/2 -translate-y-full", "after:content-[''] after:absolute after:top-full after:left-1/2 after:transform after:-translate-x-1/2", "after:border-4 after:border-transparent after:border-t-gray-900", className),
        ...props,
        children: children
    });
});
TooltipContent.displayName = "TooltipContent";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNvYmhvcm5zdmVubmV2aWsvRG9jdW1lbnRzL0dpdEh1Yi9tYVJlcG9fcm9vdC9mcm9udGVuZC9zcmMvY29tcG9uZW50cy91aS90b29sdGlwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiO1xuXG5jb25zdCBUb29sdGlwQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8e1xuICBpc09wZW46IGJvb2xlYW47XG4gIHNldElzT3BlbjogKG9wZW46IGJvb2xlYW4pID0+IHZvaWQ7XG59IHwgbnVsbD4obnVsbCk7XG5cbmNvbnN0IFRvb2x0aXBQcm92aWRlciA9ICh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSA9PiB7XG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIHJldHVybiAoXG4gICAgPFRvb2x0aXBDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGlzT3Blbiwgc2V0SXNPcGVuIH19PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvVG9vbHRpcENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5jb25zdCBUb29sdGlwID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTERpdkVsZW1lbnQsXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PlxuPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICByZWY9e3JlZn1cbiAgICAgIGNsYXNzTmFtZT17Y24oXCJyZWxhdGl2ZSBpbmxpbmUtYmxvY2tcIiwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59KTtcblRvb2x0aXAuZGlzcGxheU5hbWUgPSBcIlRvb2x0aXBcIjtcblxuY29uc3QgVG9vbHRpcFRyaWdnZXIgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MRGl2RWxlbWVudCxcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+XG4+KCh7IGNsYXNzTmFtZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIHJlZikgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChUb29sdGlwQ29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlRvb2x0aXBUcmlnZ2VyIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBUb29sdGlwUHJvdmlkZXJcIik7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHJlZj17cmVmfVxuICAgICAgY2xhc3NOYW1lPXtjbihcImN1cnNvci1oZWxwXCIsIGNsYXNzTmFtZSl9XG4gICAgICBvbk1vdXNlRW50ZXI9eygpID0+IGNvbnRleHQuc2V0SXNPcGVuKHRydWUpfVxuICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiBjb250ZXh0LnNldElzT3BlbihmYWxzZSl9XG4gICAgICBvbkZvY3VzPXsoKSA9PiBjb250ZXh0LnNldElzT3Blbih0cnVlKX1cbiAgICAgIG9uQmx1cj17KCkgPT4gY29udGV4dC5zZXRJc09wZW4oZmFsc2UpfVxuICAgICAgey4uLnByb3BzfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuVG9vbHRpcFRyaWdnZXIuZGlzcGxheU5hbWUgPSBcIlRvb2x0aXBUcmlnZ2VyXCI7XG5cbmNvbnN0IFRvb2x0aXBDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTERpdkVsZW1lbnQsXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PlxuPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+IHtcbiAgY29uc3QgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoVG9vbHRpcENvbnRleHQpO1xuICBpZiAoIWNvbnRleHQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUb29sdGlwQ29udGVudCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgVG9vbHRpcFByb3ZpZGVyXCIpO1xuICB9XG5cbiAgaWYgKCFjb250ZXh0LmlzT3Blbikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICByZWY9e3JlZn1cbiAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgIFwiYWJzb2x1dGUgei01MCBweC0zIHB5LTIgdGV4dC1zbSB0ZXh0LXdoaXRlIGJnLWdyYXktOTAwIHJvdW5kZWQtbWQgc2hhZG93LWxnIC10b3AtMiBsZWZ0LTEvMiB0cmFuc2Zvcm0gLXRyYW5zbGF0ZS14LTEvMiAtdHJhbnNsYXRlLXktZnVsbFwiLFxuICAgICAgICBcImFmdGVyOmNvbnRlbnQtWycnXSBhZnRlcjphYnNvbHV0ZSBhZnRlcjp0b3AtZnVsbCBhZnRlcjpsZWZ0LTEvMiBhZnRlcjp0cmFuc2Zvcm0gYWZ0ZXI6LXRyYW5zbGF0ZS14LTEvMlwiLFxuICAgICAgICBcImFmdGVyOmJvcmRlci00IGFmdGVyOmJvcmRlci10cmFuc3BhcmVudCBhZnRlcjpib3JkZXItdC1ncmF5LTkwMFwiLFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufSk7XG5Ub29sdGlwQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiVG9vbHRpcENvbnRlbnRcIjtcblxuZXhwb3J0IHsgVG9vbHRpcCwgVG9vbHRpcFRyaWdnZXIsIFRvb2x0aXBDb250ZW50LCBUb29sdGlwUHJvdmlkZXIgfTsgIl0sIm5hbWVzIjpbIlRvb2x0aXAiLCJUb29sdGlwQ29udGVudCIsIlRvb2x0aXBQcm92aWRlciIsIlRvb2x0aXBUcmlnZ2VyIiwiVG9vbHRpcENvbnRleHQiLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJjaGlsZHJlbiIsImlzT3BlbiIsInNldElzT3BlbiIsInVzZVN0YXRlIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJwcm9wcyIsInJlZiIsImRpdiIsImNuIiwiZGlzcGxheU5hbWUiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsIkVycm9yIiwib25Nb3VzZUVudGVyIiwib25Nb3VzZUxlYXZlIiwib25Gb2N1cyIsIm9uQmx1ciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztJQTBGU0EsT0FBTztlQUFQQTs7SUFBeUJDLGNBQWM7ZUFBZEE7O0lBQWdCQyxlQUFlO2VBQWZBOztJQUFoQ0MsY0FBYztlQUFkQTs7OzsrREF4Rks7dUJBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVuQixNQUFNQywrQkFBaUJDLE9BQU1DLGFBQWEsQ0FHaEM7QUFFVixNQUFNSixrQkFBa0IsQ0FBQyxFQUFFSyxRQUFRLEVBQWlDO0lBQ2xFLE1BQU0sQ0FBQ0MsUUFBUUMsVUFBVSxHQUFHSixPQUFNSyxRQUFRLENBQUM7SUFDM0MscUJBQ0UscUJBQUNOLGVBQWVPLFFBQVE7UUFBQ0MsT0FBTztZQUFFSjtZQUFRQztRQUFVO2tCQUNqREY7O0FBR1A7QUFFQSxNQUFNUCx3QkFBVUssT0FBTVEsVUFBVSxDQUc5QixDQUFDLEVBQUVDLFNBQVMsRUFBRVAsUUFBUSxFQUFFLEdBQUdRLE9BQU8sRUFBRUM7SUFDcEMscUJBQ0UscUJBQUNDO1FBQ0NELEtBQUtBO1FBQ0xGLFdBQVdJLElBQUFBLFNBQUUsRUFBQyx5QkFBeUJKO1FBQ3RDLEdBQUdDLEtBQUs7a0JBRVJSOztBQUdQO0FBQ0FQLFFBQVFtQixXQUFXLEdBQUc7QUFFdEIsTUFBTWhCLCtCQUFpQkUsT0FBTVEsVUFBVSxDQUdyQyxDQUFDLEVBQUVDLFNBQVMsRUFBRVAsUUFBUSxFQUFFLEdBQUdRLE9BQU8sRUFBRUM7SUFDcEMsTUFBTUksVUFBVWYsT0FBTWdCLFVBQVUsQ0FBQ2pCO0lBQ2pDLElBQUksQ0FBQ2dCLFNBQVM7UUFDWixNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFFQSxxQkFDRSxxQkFBQ0w7UUFDQ0QsS0FBS0E7UUFDTEYsV0FBV0ksSUFBQUEsU0FBRSxFQUFDLGVBQWVKO1FBQzdCUyxjQUFjLElBQU1ILFFBQVFYLFNBQVMsQ0FBQztRQUN0Q2UsY0FBYyxJQUFNSixRQUFRWCxTQUFTLENBQUM7UUFDdENnQixTQUFTLElBQU1MLFFBQVFYLFNBQVMsQ0FBQztRQUNqQ2lCLFFBQVEsSUFBTU4sUUFBUVgsU0FBUyxDQUFDO1FBQy9CLEdBQUdNLEtBQUs7a0JBRVJSOztBQUdQO0FBQ0FKLGVBQWVnQixXQUFXLEdBQUc7QUFFN0IsTUFBTWxCLCtCQUFpQkksT0FBTVEsVUFBVSxDQUdyQyxDQUFDLEVBQUVDLFNBQVMsRUFBRVAsUUFBUSxFQUFFLEdBQUdRLE9BQU8sRUFBRUM7SUFDcEMsTUFBTUksVUFBVWYsT0FBTWdCLFVBQVUsQ0FBQ2pCO0lBQ2pDLElBQUksQ0FBQ2dCLFNBQVM7UUFDWixNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFFQSxJQUFJLENBQUNGLFFBQVFaLE1BQU0sRUFBRTtRQUNuQixPQUFPO0lBQ1Q7SUFFQSxxQkFDRSxxQkFBQ1M7UUFDQ0QsS0FBS0E7UUFDTEYsV0FBV0ksSUFBQUEsU0FBRSxFQUNYLDRJQUNBLDBHQUNBLG1FQUNBSjtRQUVELEdBQUdDLEtBQUs7a0JBRVJSOztBQUdQO0FBQ0FOLGVBQWVrQixXQUFXLEdBQUcifQ==