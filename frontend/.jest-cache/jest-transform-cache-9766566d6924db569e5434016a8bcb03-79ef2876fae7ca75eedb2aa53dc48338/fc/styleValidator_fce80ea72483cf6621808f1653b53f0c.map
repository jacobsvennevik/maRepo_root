{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/utils/styleValidator.ts"],"sourcesContent":["// Style Configuration Validator with Autofixes\n// Implements the 3 core validation rules with automatic fixes\n\nexport interface ValidationIssue {\n  path: string;\n  code: string;\n  level: 'error' | 'warning' | 'info';\n  message: string;\n  fix?: {\n    path: string;\n    value: unknown;\n  };\n}\n\nexport interface ValidationResult {\n  issues: ValidationIssue[];\n  fixes: { path: string; value: unknown }[];\n}\n\nexport interface StyleConfig {\n  item_mix?: Record<string, number>;\n  timing?: {\n    total_minutes?: number;\n    per_item_seconds?: number;\n    mode?: 'none' | 'soft' | 'hard';\n  };\n  feedback?: 'immediate' | 'on_submit' | 'end_only' | 'tiered_hints';\n  difficulty?: 'easier' | 'balanced' | 'harder';\n  hints?: boolean;\n}\n\n/**\n * Validates style configuration and provides automatic fixes\n */\nexport function validateConfig(effectiveConfig: StyleConfig): ValidationResult {\n  const issues: ValidationIssue[] = [];\n  const fixes: { path: string; value: unknown }[] = [];\n\n  // Rule 1: Mix normalization - item_mix numbers should sum to 1.0\n  if (effectiveConfig.item_mix) {\n    const sum = Object.values(effectiveConfig.item_mix).reduce((a, b) => a + b, 0);\n    if (Math.abs(sum - 1.0) > 0.01) {\n      const normalizedMix = normalizeItemMix(effectiveConfig.item_mix);\n      issues.push({\n        path: 'item_mix',\n        code: 'NORMALIZE_MIX',\n        level: 'warning',\n        message: `Item mix sums to ${sum.toFixed(2)}, should be 1.0`,\n        fix: {\n          path: 'item_mix',\n          value: normalizedMix\n        }\n      });\n      fixes.push({\n        path: 'item_mix',\n        value: normalizedMix\n      });\n    }\n  }\n\n  // Rule 2: Hard timing requires per-item seconds ≥ 5\n  if (effectiveConfig.timing?.mode === 'hard' && effectiveConfig.timing?.per_item_seconds !== undefined) {\n    if (effectiveConfig.timing.per_item_seconds < 5) {\n      issues.push({\n        path: 'timing.per_item_seconds',\n        code: 'HARD_TIMING_MIN',\n        level: 'error',\n        message: 'Hard timing requires ≥5 seconds per item',\n        fix: {\n          path: 'timing.per_item_seconds',\n          value: 60\n        }\n      });\n      fixes.push({\n        path: 'timing.per_item_seconds',\n        value: 60\n      });\n    }\n  }\n\n  // Rule 3: End-only feedback disables hints\n  if (effectiveConfig.feedback === 'end_only' && effectiveConfig.hints === true) {\n    issues.push({\n      path: 'hints',\n      code: 'END_ONLY_NO_HINTS',\n      level: 'warning',\n      message: 'End-only feedback disables hints',\n      fix: {\n        path: 'hints',\n        value: false\n      }\n    });\n    fixes.push({\n      path: 'hints',\n      value: false\n    });\n  }\n\n  // Additional validation rules for completeness\n  validateTimingConsistency(effectiveConfig, issues, fixes);\n  validateItemMixProportions(effectiveConfig, issues, fixes);\n\n  return { issues, fixes };\n}\n\n/**\n * Applies fixes to a configuration object\n */\nexport function applyFixes(config: StyleConfig, fixes: { path: string; value: unknown }[]): StyleConfig {\n  const result = { ...config };\n\n  fixes.forEach(fix => {\n    setNestedValue(result, fix.path, fix.value);\n  });\n\n  return result;\n}\n\n/**\n * Normalizes item mix to sum to 1.0\n */\nfunction normalizeItemMix(itemMix: Record<string, number>): Record<string, number> {\n  const sum = Object.values(itemMix).reduce((a, b) => a + b, 0);\n  \n  if (sum === 0) {\n    // If all values are 0, distribute evenly\n    const keys = Object.keys(itemMix);\n    const normalized: Record<string, number> = {};\n    keys.forEach(key => {\n      normalized[key] = 1 / keys.length;\n    });\n    return normalized;\n  }\n\n  // Normalize by dividing by sum\n  const normalized: Record<string, number> = {};\n  Object.keys(itemMix).forEach(key => {\n    normalized[key] = itemMix[key] / sum;\n  });\n\n  return normalized;\n}\n\n/**\n * Validates timing consistency\n */\nfunction validateTimingConsistency(\n  config: StyleConfig,\n  issues: ValidationIssue[],\n  fixes: { path: string; value: unknown }[]\n) {\n  if (config.timing?.total_minutes && config.timing?.per_item_seconds) {\n    const totalSeconds = config.timing.total_minutes * 60;\n    const estimatedItems = Math.floor(totalSeconds / config.timing.per_item_seconds);\n    \n    if (estimatedItems < 1) {\n      issues.push({\n        path: 'timing',\n        code: 'TIMING_INCONSISTENT',\n        level: 'warning',\n        message: `Timing allows for ${estimatedItems} items, consider adjusting`,\n        fix: {\n          path: 'timing.per_item_seconds',\n          value: Math.max(30, totalSeconds / 3) // Suggest 3 items minimum\n        }\n      });\n    }\n  }\n}\n\n/**\n * Validates item mix proportions are reasonable\n */\nfunction validateItemMixProportions(\n  config: StyleConfig,\n  issues: ValidationIssue[],\n  fixes: { path: string; value: unknown }[]\n) {\n  if (config.item_mix) {\n    const proportions = Object.values(config.item_mix);\n    const maxProportion = Math.max(...proportions);\n    \n    if (maxProportion > 0.95) {\n      issues.push({\n        path: 'item_mix',\n        code: 'MIX_TOO_CONCENTRATED',\n        level: 'info',\n        message: 'Item mix is very concentrated on one type',\n        fix: undefined // No automatic fix for this\n      });\n    }\n  }\n}\n\n/**\n * Sets a nested value in an object using dot notation\n */\nfunction setNestedValue(obj: any, path: string, value: unknown): void {\n  const keys = path.split('.');\n  let current = obj;\n  \n  for (let i = 0; i < keys.length - 1; i++) {\n    const key = keys[i];\n    if (!(key in current)) {\n      current[key] = {};\n    }\n    current = current[key];\n  }\n  \n  current[keys[keys.length - 1]] = value;\n}\n\n/**\n * Gets a nested value from an object using dot notation\n */\nexport function getNestedValue(obj: any, path: string): unknown {\n  return path.split('.').reduce((current, key) => current?.[key], obj);\n}\n\n/**\n * Validates a single field and returns issues\n */\nexport function validateField(\n  config: StyleConfig,\n  fieldPath: string,\n  value: unknown\n): ValidationIssue[] {\n  const tempConfig = { ...config };\n  setNestedValue(tempConfig, fieldPath, value);\n  \n  const result = validateConfig(tempConfig);\n  return result.issues.filter(issue => issue.path === fieldPath);\n}\n\n/**\n * Checks if a configuration has any critical errors\n */\nexport function hasCriticalErrors(config: StyleConfig): boolean {\n  const result = validateConfig(config);\n  return result.issues.some(issue => issue.level === 'error');\n}\n\n/**\n * Gets a summary of validation issues by level\n */\nexport function getValidationSummary(config: StyleConfig): {\n  errors: number;\n  warnings: number;\n  info: number;\n  total: number;\n} {\n  const result = validateConfig(config);\n  \n  return {\n    errors: result.issues.filter(i => i.level === 'error').length,\n    warnings: result.issues.filter(i => i.level === 'warning').length,\n    info: result.issues.filter(i => i.level === 'info').length,\n    total: result.issues.length\n  };\n}\n"],"names":["applyFixes","getNestedValue","getValidationSummary","hasCriticalErrors","validateConfig","validateField","effectiveConfig","issues","fixes","item_mix","sum","Object","values","reduce","a","b","Math","abs","normalizedMix","normalizeItemMix","push","path","code","level","message","toFixed","fix","value","timing","mode","per_item_seconds","undefined","feedback","hints","validateTimingConsistency","validateItemMixProportions","config","result","forEach","setNestedValue","itemMix","keys","normalized","key","length","total_minutes","totalSeconds","estimatedItems","floor","max","proportions","maxProportion","obj","split","current","i","fieldPath","tempConfig","filter","issue","some","errors","warnings","info","total"],"mappings":"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"}