{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/app/projects/[projectId]/flashcards/hooks/use-project-flashcards.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { axiosApi, axiosGeneration } from \"@/lib/axios\";\nimport axios from \"axios\";\nimport { \n  unwrapFlashcardSets, \n  refreshFlashcardSets, \n  calculateFlashcardStats,\n  type FlashcardSetApi \n} from \"../utils/data-transformation\";\nimport { isTestMode } from \"@/features/projects/services/upload-utils\";\nimport { postProjectScoped, getProjectScoped } from \"@/lib/projectApi\";\n\nexport interface FlashcardSet extends FlashcardSetApi {}\n\nexport interface FlashcardStats {\n  total_sets: number;\n  total_cards: number;\n  due_today: number;\n  learning_cards: number;\n  mastered_cards: number;\n  average_accuracy: number;\n}\n\nexport interface DueCardsResponse {\n  project_id: string;\n  total_cards: number;\n  due_cards: number;\n  learning_cards: number;\n  session_cards: any[];\n  session_start: string;\n}\n\nexport function useProjectFlashcards(projectId: string) {\n  const [flashcardSets, setFlashcardSets] = useState<FlashcardSet[]>([]);\n  const [stats, setStats] = useState<FlashcardStats>({\n    total_sets: 0,\n    total_cards: 0,\n    due_today: 0,\n    learning_cards: 0,\n    mastered_cards: 0,\n    average_accuracy: 0,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const refreshData = async () => {\n    const sets = await refreshFlashcardSets(projectId);\n    setFlashcardSets(sets);\n    setStats(calculateFlashcardStats(sets));\n  };\n\n  useEffect(() => {\n    const fetchFlashcards = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n         await refreshData();\n      } catch (err: any) {\n        if (err.name === 'AbortError' || axios.isCancel?.(err) || err?.name === \"CanceledError\" || err?.code === \"ERR_CANCELED\") return;\n        console.error(\"Failed to fetch project flashcards:\", err);\n        if (err.code === 'ECONNREFUSED' || err.message?.includes('Network Error') || !err.response) {\n          setError(\"Cannot connect to server. Please check your connection.\");\n        } else {\n          setError(err.response?.data?.error || \"Failed to load flashcards\");\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (projectId) {\n      fetchFlashcards();\n    }\n\n    return () => {};\n  }, [projectId]);\n\n  const createFlashcardSet = async (title: string) => {\n    try {\n      const data = await postProjectScoped<FlashcardSet>(`flashcard-sets/`, projectId, { title });\n      await refreshData();\n      return data;\n    } catch (err: any) {\n      console.error(\"Failed to create flashcard set:\", err);\n      throw new Error(err.response?.data?.error || \"Failed to create flashcard set\");\n    }\n  };\n\n  const generateFlashcards = async (\n    sourceType: string,\n    numCards: number = 10,\n    difficulty: string = \"medium\",\n  ) => {\n    try {\n      const headers: any = {};\n      if (isTestMode()) headers['X-Test-Mode'] = 'true';\n      const data = await postProjectScoped(\n        `flashcards/generate`,\n        projectId,\n        { source_type: sourceType, num_cards: numCards, difficulty: difficulty },\n        axiosGeneration\n      );\n      await refreshData();\n      return data;\n    } catch (err: any) {\n      console.error(\"Failed to generate flashcards:\", err);\n      throw new Error(err.response?.data?.error || \"Failed to generate flashcards\");\n    }\n  };\n\n  const getDueCards = async (\n    limit: number = 20,\n    algorithm?: string,\n  ): Promise<DueCardsResponse> => {\n    try {\n      const params = new URLSearchParams();\n      params.append(\"limit\", limit.toString());\n      if (algorithm) params.append(\"algorithm\", algorithm);\n      const res = await getProjectScoped<DueCardsResponse>(`flashcards/due/?${params}`, projectId, axiosGeneration);\n      return res;\n    } catch (err: any) {\n      console.error(\"Failed to get due cards:\", err);\n      throw new Error(err.response?.data?.error || \"Failed to get due cards\");\n    }\n  };\n\n  const submitReview = async (\n    flashcardId: number,\n    quality: number,\n    responseTimeSeconds?: number,\n  ) => {\n    try {\n      const response = await axiosApi.post(\n        `/flashcards/${flashcardId}/review/`,\n        {\n          quality,\n          response_time_seconds: responseTimeSeconds,\n        },\n      );\n      await refreshData();\n      return response.data;\n    } catch (err: any) {\n      console.error(\"Failed to submit review:\", err);\n      throw new Error(err.response?.data?.error || \"Failed to submit review\");\n    }\n  };\n\n  const submitBulkReviews = async (\n    reviews: Array<{\n      flashcardId: number;\n      quality: number;\n      responseTimeSeconds?: number;\n    }>,\n  ) => {\n    try {\n      const reviewsData = reviews.map((review) => ({\n        flashcard_id: review.flashcardId,\n        quality: review.quality,\n        response_time_seconds: review.responseTimeSeconds || 0,\n      }));\n      const response = await axiosApi.post(\n        `/flashcards/reviews/`,\n        { reviews: reviewsData },\n      );\n      await refreshData();\n      return response.data;\n    } catch (err: any) {\n      console.error(\"Failed to submit bulk reviews:\", err);\n      throw new Error(err.response?.data?.error || \"Failed to submit bulk reviews\");\n    }\n  };\n\n  return {\n    flashcardSets,\n    stats,\n    isLoading,\n    error,\n    createFlashcardSet,\n    generateFlashcards,\n    getDueCards,\n    submitReview,\n    submitBulkReviews,\n  };\n}\n"],"names":["useProjectFlashcards","projectId","flashcardSets","setFlashcardSets","useState","stats","setStats","total_sets","total_cards","due_today","learning_cards","mastered_cards","average_accuracy","isLoading","setIsLoading","error","setError","refreshData","sets","refreshFlashcardSets","calculateFlashcardStats","useEffect","fetchFlashcards","err","name","axios","isCancel","code","console","message","includes","response","data","createFlashcardSet","title","postProjectScoped","Error","generateFlashcards","sourceType","numCards","difficulty","headers","isTestMode","source_type","num_cards","axiosGeneration","getDueCards","limit","algorithm","params","URLSearchParams","append","toString","res","getProjectScoped","submitReview","flashcardId","quality","responseTimeSeconds","axiosApi","post","response_time_seconds","submitBulkReviews","reviews","reviewsData","map","review","flashcard_id"],"mappings":"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"}