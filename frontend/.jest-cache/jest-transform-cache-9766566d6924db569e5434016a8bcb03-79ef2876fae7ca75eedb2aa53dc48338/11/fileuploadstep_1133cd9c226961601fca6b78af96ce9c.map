{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/steps/file-upload-step.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { FileUpload } from '@/components/ui/file-upload';\nimport { createProject, uploadFileWithProgress, APIError, ProjectData } from '../../services/api';\nimport { isTestMode } from '../../services/mock-data';\nimport { useFileUpload, handleUploadError } from './shared';\n\ninterface SyllabusUploadStepProps {\n  onUploadComplete: (projectId: string) => void;\n}\n\nexport function FileUploadStep({ onUploadComplete }: SyllabusUploadStepProps) {\n  const [state, actions] = useFileUpload();\n\n  /**\n   * Enable a quick workflow while developing or running frontend tests.\n   * When NEXT_PUBLIC_TEST_MODE=\"true\" (and NODE_ENV is development) the step\n   * automatically creates a mock project using the shared `createProject` helper\n   * and immediately invokes `onUploadComplete` â€“ no manual file-selection or\n   * network requests required.\n   */\n  useEffect(() => {\n    if (!isTestMode()) return;\n\n    (async () => {\n      try {\n        const mockProjectData: Partial<ProjectData> = {\n          name: 'Test Project',\n          project_type: 'school',\n          course_name: 'Test Course',\n          is_draft: true,\n        };\n\n        console.log('ðŸ§ª TEST MODE: Creating mock project automatically');\n        const newProject = await createProject(mockProjectData as ProjectData);\n        console.log('ðŸ§ª TEST MODE: Mock project ready â†’ skipping file upload');\n\n        // Immediately signal completion so the wizard can advance\n        onUploadComplete(newProject.id);\n      } catch (err) {\n        console.error('ðŸ§ª TEST MODE: Failed to bootstrap mock project', err);\n      }\n    })();\n    // we only want to run this once on mount in test mode\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleUpload = async (newFiles: File[]) => {\n    actions.handleUpload(newFiles);\n    actions.setError(null);\n\n    if (newFiles.length === 0) return;\n\n    try {\n      // 1. Create a draft project\n      const fileName = newFiles[0].name;\n      const projectName = fileName.replace(/\\.[^/.]+$/, ''); // Remove file extension\n      \n      const projectData: Partial<ProjectData> = {\n        name: projectName,\n        project_type: 'school',\n        course_name: projectName, // Required for school projects\n        is_draft: true,\n      };\n\n      console.log('Creating project with data:', projectData);\n      const newProject = await createProject(projectData as ProjectData);\n      console.log('Project created:', newProject);\n\n      // 2. Upload each file with progress tracking\n      for (const file of newFiles) {\n        try {\n          console.log('Uploading file:', file.name);\n          await uploadFileWithProgress(\n            newProject.id,\n            file, \n            (progress) => {\n              // Update progress through the hook\n              const newProgress = { ...state.uploadProgress, [file.name]: progress };\n              // Note: This would need to be handled differently in a real implementation\n              // For now, we'll use the existing pattern\n            }\n          );\n          console.log('File upload complete:', file.name);\n        } catch (error) {\n          console.error('File upload error:', error);\n          const errorMessage = handleUploadError(error, null);\n          actions.setError(errorMessage);\n          return;\n        }\n      }\n\n      // 3. Notify parent component that the upload is done\n      onUploadComplete(newProject.id);\n\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      const errorMessage = handleUploadError(error, null);\n      actions.setError(errorMessage);\n    }\n\n  return (\n    <div className=\"space-y-6\">\n      <FileUpload\n        onUpload={handleUpload}\n        onRemove={actions.handleRemove}\n        accept=\".pdf\"\n        maxFiles={1}\n        maxSize={10 * 1024 * 1024} // 10MB\n        required={true}\n        title=\"Upload your course syllabus\"\n        description=\"Upload your syllabus and we'll automatically extract course details, deadlines, and topics to set up your project.\"\n        buttonText=\"Browse for syllabus\"\n        files={state.files}\n        uploadProgress={state.uploadProgress}\n        error={state.error || undefined}\n      />\n    </div>\n  );\n}\n}\n"],"names":["FileUploadStep","onUploadComplete","state","actions","useFileUpload","useEffect","isTestMode","mockProjectData","name","project_type","course_name","is_draft","console","log","newProject","createProject","id","err","error","handleUpload","newFiles","setError","length","fileName","projectName","replace","projectData","file","uploadFileWithProgress","progress","newProgress","uploadProgress","errorMessage","handleUploadError","div","className","FileUpload","onUpload","onRemove","handleRemove","accept","maxFiles","maxSize","required","title","description","buttonText","files","undefined"],"mappings":"AAAA;;;;;+BAYgBA;;;eAAAA;;;;uBAVU;4BACC;qBACkD;0BAClD;wBACsB;AAM1C,SAASA,eAAe,EAAEC,gBAAgB,EAA2B;IAC1E,MAAM,CAACC,OAAOC,QAAQ,GAAGC,IAAAA,qBAAa;IAEtC;;;;;;GAMC,GACDC,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACC,IAAAA,oBAAU,KAAI;QAElB,CAAA;YACC,IAAI;gBACF,MAAMC,kBAAwC;oBAC5CC,MAAM;oBACNC,cAAc;oBACdC,aAAa;oBACbC,UAAU;gBACZ;gBAEAC,QAAQC,GAAG,CAAC;gBACZ,MAAMC,aAAa,MAAMC,IAAAA,kBAAa,EAACR;gBACvCK,QAAQC,GAAG,CAAC;gBAEZ,0DAA0D;gBAC1DZ,iBAAiBa,WAAWE,EAAE;YAChC,EAAE,OAAOC,KAAK;gBACZL,QAAQM,KAAK,CAAC,kDAAkDD;YAClE;QACF,CAAA;IACA,sDAAsD;IACtD,uDAAuD;IACzD,GAAG,EAAE;IAEL,MAAME,eAAe,OAAOC;QAC1BjB,QAAQgB,YAAY,CAACC;QACrBjB,QAAQkB,QAAQ,CAAC;QAEjB,IAAID,SAASE,MAAM,KAAK,GAAG;QAE3B,IAAI;YACF,4BAA4B;YAC5B,MAAMC,WAAWH,QAAQ,CAAC,EAAE,CAACZ,IAAI;YACjC,MAAMgB,cAAcD,SAASE,OAAO,CAAC,aAAa,KAAK,wBAAwB;YAE/E,MAAMC,cAAoC;gBACxClB,MAAMgB;gBACNf,cAAc;gBACdC,aAAac;gBACbb,UAAU;YACZ;YAEAC,QAAQC,GAAG,CAAC,+BAA+Ba;YAC3C,MAAMZ,aAAa,MAAMC,IAAAA,kBAAa,EAACW;YACvCd,QAAQC,GAAG,CAAC,oBAAoBC;YAEhC,6CAA6C;YAC7C,KAAK,MAAMa,QAAQP,SAAU;gBAC3B,IAAI;oBACFR,QAAQC,GAAG,CAAC,mBAAmBc,KAAKnB,IAAI;oBACxC,MAAMoB,IAAAA,2BAAsB,EAC1Bd,WAAWE,EAAE,EACbW,MACA,CAACE;wBACC,mCAAmC;wBACnC,MAAMC,cAAc;4BAAE,GAAG5B,MAAM6B,cAAc;4BAAE,CAACJ,KAAKnB,IAAI,CAAC,EAAEqB;wBAAS;oBACrE,2EAA2E;oBAC3E,0CAA0C;oBAC5C;oBAEFjB,QAAQC,GAAG,CAAC,yBAAyBc,KAAKnB,IAAI;gBAChD,EAAE,OAAOU,OAAO;oBACdN,QAAQM,KAAK,CAAC,sBAAsBA;oBACpC,MAAMc,eAAeC,IAAAA,yBAAiB,EAACf,OAAO;oBAC9Cf,QAAQkB,QAAQ,CAACW;oBACjB;gBACF;YACF;YAEA,qDAAqD;YACrD/B,iBAAiBa,WAAWE,EAAE;QAEhC,EAAE,OAAOE,OAAO;YACdN,QAAQM,KAAK,CAAC,kBAAkBA;YAChC,MAAMc,eAAeC,IAAAA,yBAAiB,EAACf,OAAO;YAC9Cf,QAAQkB,QAAQ,CAACW;QACnB;QAEF,qBACE,qBAACE;YAAIC,WAAU;sBACb,cAAA,qBAACC,sBAAU;gBACTC,UAAUlB;gBACVmB,UAAUnC,QAAQoC,YAAY;gBAC9BC,QAAO;gBACPC,UAAU;gBACVC,SAAS,KAAK,OAAO;gBACrBC,UAAU;gBACVC,OAAM;gBACNC,aAAY;gBACZC,YAAW;gBACXC,OAAO7C,MAAM6C,KAAK;gBAClBhB,gBAAgB7B,MAAM6B,cAAc;gBACpCb,OAAOhB,MAAMgB,KAAK,IAAI8B;;;IAI9B;AACA"}