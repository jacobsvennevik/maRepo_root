{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/quiz/components/QuizWizard/EnhancedQuizWizard.tsx"],"sourcesContent":["/**\n * Enhanced Quiz Wizard Main Component\n * \n * Updated quiz creation wizard using the new shared components\n * and improved patterns for better code reuse and UX.\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/navigation';\nimport { WizardShell } from '@/components/wizard/WizardShell';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { QuizApiService } from '../../services/quizApi';\nimport { isTestMode } from '@/features/projects/services/upload-utils';\n\n// Shared components\nimport { SourceSelectionStep } from '@/components/wizard/shared/SourceSelectionStep';\nimport { AIMetadataStep } from '@/components/wizard/shared/AIMetadataStep';\nimport { useMultiSourceManagement } from '@/components/wizard/shared/useMultiSourceManagement';\n\n// Enhanced local components\nimport { EnhancedBasicConfigStep } from './steps/EnhancedBasicConfigStep';\n\n// Original components (to be gradually replaced)\nimport { \n  MethodSelectionStep,\n  AdvancedConfigStep,\n  GenerateQuizStep,\n  ReviewCreateStep\n} from './steps';\n\n// Hooks and utilities\nimport { useQuizGeneration } from '../../hooks';\nimport { useFormValidation } from '../../hooks';\nimport { useWizardNavigation } from '../../hooks';\nimport { \n  QuizCreationSchema, \n  DEFAULT_QUIZ_FORM_CONFIG \n} from '../../schemas/quizCreation';\nimport { isTestModeActive } from '../../utils';\nimport { QUIZ_PRESETS, type QuizPreset } from '../../constants/presets';\nimport { generateMetadata } from '@/components/wizard/shared/titleGeneration';\nimport { \n  AlertTriangle,\n  CheckCircle2,\n  Brain,\n  Settings,\n  Sparkles,\n} from 'lucide-react';\n\n// ============================================================================\n// Types and Interfaces\n// ============================================================================\n\ninterface EnhancedQuizWizardProps {\n  projectId: string;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onCreated?: (quizId: string) => void;\n}\n\ninterface WizardStep {\n  id: number;\n  title: string;\n  description: string;\n  component: string;\n  required: boolean;\n  showInProgress?: boolean;\n}\n\n// ============================================================================\n// Configuration\n// ============================================================================\n\nconst ENHANCED_WIZARD_STEPS: WizardStep[] = [\n  { \n    id: 1, \n    title: 'Choose Sources', \n    description: 'Select content sources for questions',\n    component: 'SourceSelection',\n    required: true,\n  },\n  { \n    id: 2, \n    title: 'Configure Quiz', \n    description: 'Set quiz type and basic parameters',\n    component: 'BasicConfig',\n    required: true,\n  },\n  { \n    id: 3, \n    title: 'Review Details', \n    description: 'Finalize title and description',\n    component: 'AIMetadata',\n    required: true,\n  },\n  { \n    id: 4, \n    title: 'Advanced Options', \n    description: 'Customize advanced settings',\n    component: 'AdvancedConfig',\n    required: false,\n  },\n  { \n    id: 5, \n    title: 'Generate Quiz', \n    description: 'Create questions using AI',\n    component: 'Generate',\n    required: true,\n    showInProgress: true,\n  },\n  { \n    id: 6, \n    title: 'Review & Create', \n    description: 'Final review and publish',\n    component: 'Review',\n    required: true,\n  },\n];\n\nconst TOTAL_STEPS = ENHANCED_WIZARD_STEPS.length;\n\n// ============================================================================\n// Main Component\n// ============================================================================\n\nexport const EnhancedQuizWizard: React.FC<EnhancedQuizWizardProps> = ({\n  projectId,\n  open,\n  onOpenChange,\n  onCreated,\n}) => {\n  const router = useRouter();\n  \n  // ============================================================================\n  // State Management\n  // ============================================================================\n  \n  const [selectedPreset, setSelectedPreset] = React.useState<QuizPreset | null>(null);\n  const [metadataFormData, setMetadataFormData] = React.useState<any>({});\n  const [skipAdvanced, setSkipAdvanced] = React.useState(false);\n  \n  // ============================================================================\n  // Custom Hooks\n  // ============================================================================\n  \n  const form = useFormValidation({\n    schema: QuizCreationSchema,\n    defaultValues: {\n      ...DEFAULT_QUIZ_FORM_CONFIG,\n      source_type: 'auto',\n    },\n  });\n\n  const sourceManagement = useMultiSourceManagement({\n    projectId,\n    supportedTypes: ['flashcards', 'files', 'studyMaterials'],\n    onSourcesChange: (sources) => {\n      console.log('üîç Sources changed:', sources);\n    },\n  });\n\n  const quizGeneration = useQuizGeneration({\n    projectId,\n    onSuccess: (quiz) => {\n      console.log('‚úÖ Quiz generated successfully:', quiz);\n    },\n    onError: (error) => {\n      console.error('‚ùå Quiz generation failed:', error);\n    },\n  });\n\n  const navigation = useWizardNavigation({\n    totalSteps: TOTAL_STEPS,\n    validateStep: async (step) => {\n      switch (step) {\n        case 1: // Source selection\n          return sourceManagement.hasMinimumSelection;\n        case 2: // Basic config\n          return form.getFormValue('title')?.trim().length > 0 && \n                 form.getFormValue('topic')?.trim().length > 0;\n        case 3: // AI Metadata\n          return metadataFormData.title?.trim().length > 0;\n        case 4: // Advanced (optional)\n          return true;\n        case 5: // Generate\n          return !!quizGeneration.generatedQuiz;\n        default:\n          return await form.validateForm();\n      }\n    },\n  });\n\n  // ============================================================================\n  // Effects and Initialization\n  // ============================================================================\n\n  React.useEffect(() => {\n    if (!open) {\n      // Reset all state when wizard closes\n      setSelectedPreset(null);\n      setMetadataFormData({});\n      setSkipAdvanced(false);\n      form.resetForm();\n      sourceManagement.clearSelection();\n      quizGeneration.reset();\n      navigation.reset();\n    }\n  }, [open]);\n\n  // Auto-populate title and topic when sources change\n  React.useEffect(() => {\n    if (sourceManagement.totalSelectedCount > 0) {\n      const allSources = [\n        ...sourceManagement.flashcards,\n        ...sourceManagement.files,\n        ...sourceManagement.studyMaterials,\n      ].filter(source => \n        sourceManagement.selectedSources.flashcards.ids.includes(source.id) ||\n        sourceManagement.selectedSources.files.ids.includes(source.id) ||\n        sourceManagement.selectedSources.studyMaterials.ids.includes(source.id)\n      );\n\n      if (allSources.length > 0) {\n        const suggestions = generateMetadata({\n          contentType: 'quiz',\n          sources: allSources,\n          quizType: form.getFormValue('quiz_type'),\n          difficulty: form.getFormValue('difficulty'),\n        });\n\n        if (!form.getFormValue('topic')) {\n          form.setFormValue('topic', suggestions.topic);\n        }\n        if (!form.getFormValue('title')) {\n          form.setFormValue('title', suggestions.title);\n        }\n      }\n    }\n  }, [sourceManagement.selectedSources, sourceManagement.totalSelectedCount]);\n\n  // Skip advanced step if preset is simple\n  React.useEffect(() => {\n    if (selectedPreset) {\n      const simplePresets = ['quick-check', 'diagnostic-basic', 'practice-session'];\n      setSkipAdvanced(simplePresets.includes(selectedPreset.id));\n    }\n  }, [selectedPreset]);\n\n  // ============================================================================\n  // Event Handlers\n  // ============================================================================\n  \n  const handlePresetSelected = (preset: QuizPreset) => {\n    setSelectedPreset(preset);\n    console.log('üîç Preset selected:', preset.name);\n  };\n\n  const handleMetadataChange = (metadata: any) => {\n    setMetadataFormData(metadata);\n    \n    // Update form with metadata\n    form.setFormValue('title', metadata.title);\n    form.setFormValue('topic', metadata.topic);\n    form.setFormValue('description', metadata.description);\n  };\n\n  const handleGenerateQuiz = async () => {\n    const formData = form.form.getValues();\n    \n    // Prepare payload for API\n    const payload = {\n      project: projectId,\n      topic: formData.topic || metadataFormData.topic || 'General Knowledge',\n      quiz_type: formData.quiz_type || 'formative',\n      difficulty: formData.difficulty || 'INTERMEDIATE',\n      delivery_mode: formData.delivery_mode,\n      max_questions: formData.max_questions,\n      title: formData.title || metadataFormData.title,\n      description: formData.description || metadataFormData.description,\n      sources: sourceManagement.selectedSources,\n      preset_id: selectedPreset?.id,\n    };\n\n    console.log('üîç DEBUG: Generating quiz with payload:', payload);\n    await quizGeneration.generateQuiz(payload);\n  };\n\n  const handleCreateQuiz = async () => {\n    try {\n      const formData = form.form.getValues();\n      \n      if (quizGeneration.generatedQuiz) {\n        console.log('üîç DEBUG: Using existing quiz session:', quizGeneration.generatedQuiz.id);\n        \n        // Update quiz metadata if needed\n        if (metadataFormData.title || metadataFormData.description) {\n          const quizApi = new QuizApiService();\n          await quizApi.updateSession(quizGeneration.generatedQuiz.id, {\n            title: metadataFormData.title,\n          });\n        }\n\n        // Close wizard and navigate\n        onOpenChange(false);\n        router.push(`/projects/${projectId}/quiz-center/${quizGeneration.generatedQuiz.id}` as any);\n        onCreated?.(quizGeneration.generatedQuiz.id);\n        return;\n      }\n\n      // Fallback: Create quiz manually\n      console.log('üîç DEBUG: Creating quiz manually');\n      \n      const quizApi = new QuizApiService();\n      const session = await quizApi.createSession({\n        project: projectId,\n        topic: formData.topic || metadataFormData.topic || 'General Knowledge',\n        difficulty: formData.difficulty || 'INTERMEDIATE',\n        delivery_mode: formData.delivery_mode,\n        max_questions: formData.max_questions,\n      });\n\n      onOpenChange(false);\n      router.push(`/projects/${projectId}/quiz-center/${session.id}` as any);\n      onCreated?.(session.id);\n      \n    } catch (error) {\n      console.error('‚ùå DEBUG: Quiz creation failed:', error);\n    }\n  };\n\n  // ============================================================================\n  // Navigation Helpers\n  // ============================================================================\n  \n  const shouldSkipStep = (stepNumber: number): boolean => {\n    if (stepNumber === 4 && skipAdvanced) return true;\n    return false;\n  };\n\n  const getEffectiveStepNumber = (): number => {\n    let effectiveStep = navigation.currentStep;\n    if (navigation.currentStep > 4 && skipAdvanced) {\n      effectiveStep = navigation.currentStep - 1;\n    }\n    return effectiveStep;\n  };\n\n  const goToNextStep = async () => {\n    const nextStep = navigation.currentStep + 1;\n    if (shouldSkipStep(nextStep)) {\n      // Skip to the step after\n      await navigation.goNext();\n      await navigation.goNext();\n    } else {\n      await navigation.goNext();\n    }\n  };\n\n  // ============================================================================\n  // Render Functions\n  // ============================================================================\n  \n  const renderCurrentStep = () => {\n    const currentStep = navigation.currentStep;\n    \n    switch (currentStep) {\n      case 1:\n        return (\n          <SourceSelectionStep\n            sources={{\n              flashcards: {\n                enabled: true,\n                count: sourceManagement.flashcards.length,\n                items: sourceManagement.flashcards,\n                loading: sourceManagement.isLoadingFlashcards,\n              },\n              files: {\n                enabled: true,\n                count: sourceManagement.files.length,\n                items: sourceManagement.files,\n                loading: sourceManagement.isLoadingFiles,\n              },\n              studyMaterials: {\n                enabled: true,\n                count: sourceManagement.studyMaterials.length,\n                items: sourceManagement.studyMaterials,\n                loading: sourceManagement.isLoadingStudyMaterials,\n              },\n            }}\n            selectedSources={sourceManagement.selectedSources}\n            onSourcesChange={sourceManagement.setSelectedSources}\n            onFileUpload={sourceManagement.handleFileUpload}\n            uploadedFiles={sourceManagement.uploadedFiles}\n            onRemoveUploadedFile={sourceManagement.removeUploadedFile}\n            searchTerm={sourceManagement.searchTerm}\n            onSearchChange={sourceManagement.setSearchTerm}\n          />\n        );\n      \n      case 2:\n        return (\n          <EnhancedBasicConfigStep\n            form={form.form}\n            sources={[\n              ...sourceManagement.flashcards,\n              ...sourceManagement.files,\n              ...sourceManagement.studyMaterials,\n            ]}\n            onPresetSelected={handlePresetSelected}\n            showPresets={true}\n          />\n        );\n      \n      case 3:\n        return (\n          <AIMetadataStep\n            sources={[\n              ...sourceManagement.flashcards,\n              ...sourceManagement.files,\n              ...sourceManagement.studyMaterials,\n            ]}\n            initialMetadata={metadataFormData}\n            onMetadataChange={handleMetadataChange}\n            contentType=\"quiz\"\n            projectId={projectId}\n            isGenerating={false}\n            onRegenerate={() => console.log('Regenerating metadata...')}\n          />\n        );\n      \n      case 4:\n        if (skipAdvanced) {\n          // This should not render due to navigation logic\n          return null;\n        }\n        return (\n          <AdvancedConfigStep\n            form={form.form}\n          />\n        );\n      \n      case 5:\n        return (\n          <GenerateQuizStep\n            form={form.form}\n            method=\"files\" // Updated based on sources\n            uploadedFiles={sourceManagement.uploadedFiles}\n            selectedExistingFileIds={[\n              ...sourceManagement.selectedSources.flashcards.ids,\n              ...sourceManagement.selectedSources.files.ids,\n              ...sourceManagement.selectedSources.studyMaterials.ids,\n            ]}\n            projectFiles={[\n              ...sourceManagement.flashcards,\n              ...sourceManagement.files,\n              ...sourceManagement.studyMaterials,\n            ]}\n            isGenerating={quizGeneration.isGenerating}\n            generatedQuiz={quizGeneration.generatedQuiz}\n            error={quizGeneration.error}\n            onGenerate={handleGenerateQuiz}\n          />\n        );\n      \n      case 6:\n        return (\n          <ReviewCreateStep\n            form={form.form}\n            method=\"files\"\n            generatedQuiz={quizGeneration.generatedQuiz}\n            isSubmitting={false}\n            error={quizGeneration.error}\n            onCreate={handleCreateQuiz}\n          />\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  const getStepValidationStatus = (stepNumber: number) => {\n    switch (stepNumber) {\n      case 1:\n        return sourceManagement.hasMinimumSelection;\n      case 2:\n        return form.getFormValue('title')?.trim().length > 0;\n      case 3:\n        return metadataFormData.title?.trim().length > 0;\n      case 5:\n        return !!quizGeneration.generatedQuiz;\n      default:\n        return true;\n    }\n  };\n\n  // ============================================================================\n  // Main Render\n  // ============================================================================\n  \n  return (\n    <WizardShell\n      open={open}\n      onOpenChange={onOpenChange}\n      title=\"Create AI-Generated Quiz\"\n      step={getEffectiveStepNumber()}\n      totalSteps={skipAdvanced ? TOTAL_STEPS - 1 : TOTAL_STEPS}\n      headerExtras={\n        <div className=\"flex items-center gap-2 mt-2\">\n          {selectedPreset && (\n            <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\n              <Sparkles className=\"h-3 w-3 mr-1\" />\n              {selectedPreset.name}\n            </Badge>\n          )}\n          {sourceManagement.totalSelectedCount > 0 && (\n            <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n              <CheckCircle2 className=\"h-3 w-3 mr-1\" />\n              {sourceManagement.totalSelectedCount} source{sourceManagement.totalSelectedCount !== 1 ? 's' : ''}\n            </Badge>\n          )}\n          {isTestModeActive() && (\n            <Badge variant=\"outline\" className=\"bg-orange-100 text-orange-800\">\n              Test Mode\n            </Badge>\n          )}\n        </div>\n      }\n    >\n      <div data-testid=\"source-selection\">\n        {renderCurrentStep()}\n      </div>\n\n      {/* Navigation */}\n      <div className=\"flex justify-between pt-4\">\n        <div>\n          {navigation.canGoPrevious && (\n            <Button variant=\"outline\" onClick={navigation.goPrevious} size=\"sm\">\n              Back\n            </Button>\n          )}\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" onClick={() => onOpenChange(false)} size=\"sm\">\n            Cancel\n          </Button>\n          \n          {navigation.currentStep === TOTAL_STEPS ? (\n            <Button onClick={handleCreateQuiz} disabled={!quizGeneration.generatedQuiz} size=\"sm\">\n              Create Quiz\n            </Button>\n          ) : navigation.currentStep === 5 ? (\n            <Button onClick={navigation.goNext} disabled={!quizGeneration.generatedQuiz} size=\"sm\">\n              Next\n            </Button>\n          ) : (\n            <Button \n              onClick={goToNextStep} \n              disabled={!getStepValidationStatus(navigation.currentStep)}\n              size=\"sm\"\n            >\n              {skipAdvanced && navigation.currentStep === 3 ? 'Skip to Generation' : 'Next'}\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Progress Indicator */}\n      {sourceManagement.isAnyLoading && (\n        <Alert className=\"mt-4\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Loading sources... Please wait.\n          </AlertDescription>\n        </Alert>\n      )}\n    </WizardShell>\n  );\n};\n\nexport default EnhancedQuizWizard;\n\n"],"names":["EnhancedQuizWizard","ENHANCED_WIZARD_STEPS","id","title","description","component","required","showInProgress","TOTAL_STEPS","length","projectId","open","onOpenChange","onCreated","router","useRouter","selectedPreset","setSelectedPreset","React","useState","metadataFormData","setMetadataFormData","skipAdvanced","setSkipAdvanced","form","useFormValidation","schema","QuizCreationSchema","defaultValues","DEFAULT_QUIZ_FORM_CONFIG","source_type","sourceManagement","useMultiSourceManagement","supportedTypes","onSourcesChange","sources","console","log","quizGeneration","useQuizGeneration","onSuccess","quiz","onError","error","navigation","useWizardNavigation","totalSteps","validateStep","step","hasMinimumSelection","getFormValue","trim","generatedQuiz","validateForm","useEffect","resetForm","clearSelection","reset","totalSelectedCount","allSources","flashcards","files","studyMaterials","filter","source","selectedSources","ids","includes","suggestions","generateMetadata","contentType","quizType","difficulty","setFormValue","topic","simplePresets","handlePresetSelected","preset","name","handleMetadataChange","metadata","handleGenerateQuiz","formData","getValues","payload","project","quiz_type","delivery_mode","max_questions","preset_id","generateQuiz","handleCreateQuiz","quizApi","QuizApiService","updateSession","push","session","createSession","shouldSkipStep","stepNumber","getEffectiveStepNumber","effectiveStep","currentStep","goToNextStep","nextStep","goNext","renderCurrentStep","SourceSelectionStep","enabled","count","items","loading","isLoadingFlashcards","isLoadingFiles","isLoadingStudyMaterials","setSelectedSources","onFileUpload","handleFileUpload","uploadedFiles","onRemoveUploadedFile","removeUploadedFile","searchTerm","onSearchChange","setSearchTerm","EnhancedBasicConfigStep","onPresetSelected","showPresets","AIMetadataStep","initialMetadata","onMetadataChange","isGenerating","onRegenerate","AdvancedConfigStep","GenerateQuizStep","method","selectedExistingFileIds","projectFiles","onGenerate","ReviewCreateStep","isSubmitting","onCreate","getStepValidationStatus","WizardShell","headerExtras","div","className","Badge","variant","Sparkles","CheckCircle2","isTestModeActive","data-testid","canGoPrevious","Button","onClick","goPrevious","size","disabled","isAnyLoading","Alert","AlertTriangle","AlertDescription"],"mappings":"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"}