{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/steps/course-details-step.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport { Label } from \"@/components/ui/label\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  BookOpen, \n  FileText, \n  Check, \n  HelpCircle,\n  GraduationCap,\n  FileCheck,\n  Users,\n  Presentation,\n  FlaskConical,\n  Hand,\n  Home,\n  Users2,\n  Loader2\n} from \"lucide-react\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { AIPreview, AILoading } from \"../ai\";\nimport { analyzeUploadedFiles, DetectedDate } from \"../../services/ai-analysis\";\nimport { createDragHandlers, formatFileSize } from \"../../services/file-helpers\";\nimport { EducationLevelOption, EvaluationTypeOption, GradeLevelOption } from \"../../types\";\n\ninterface CourseDetailsStepProps {\n  testLevel: string;\n  gradeLevel?: string;\n  assignmentDescription?: string;\n  courseFiles: File[];\n  evaluationTypes: string[];\n  onTestLevelChange: (level: string) => void;\n  onGradeLevelChange: (grade: string) => void;\n  onAssignmentDescriptionChange: (description: string) => void;\n  onCourseFilesChange: (files: File[]) => void;\n  onCourseFileRemove: (index: number) => void;\n  onEvaluationTypeToggle: (evaluationType: string) => void;\n  onApplyAITopics: (topics: string[]) => void;\n  onApplyAIDates: (dates: DetectedDate[]) => void;\n  onApplyAITestTypes: (types: string[]) => void;\n  onApplyAIRecommendations: (recommendations: any[]) => void;\n  testLevelOptions: EducationLevelOption[];\n  gradeLevelOptions: GradeLevelOption[];\n  evaluationTypeOptions: EvaluationTypeOption[];\n}\n\nexport function CourseDetailsStep({\n  testLevel,\n  gradeLevel,\n  assignmentDescription,\n  courseFiles,\n  evaluationTypes,\n  onTestLevelChange,\n  onGradeLevelChange,\n  onAssignmentDescriptionChange,\n  onCourseFilesChange,\n  onCourseFileRemove,\n  onEvaluationTypeToggle,\n  onApplyAITopics,\n  onApplyAIDates,\n  onApplyAITestTypes,\n  onApplyAIRecommendations,\n  testLevelOptions,\n  gradeLevelOptions,\n  evaluationTypeOptions\n}: CourseDetailsStepProps) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [showAIPreview, setShowAIPreview] = useState(false);\n  const [aiResults, setAiResults] = useState<{\n    topics: any[];\n    dates: any[];\n    testTypes: any[];\n  }>({ topics: [], dates: [], testTypes: [] });\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Trigger AI analysis when files are uploaded\n  useEffect(() => {\n    if (courseFiles.length > 0 && !isAnalyzing && !showAIPreview) {\n      analyzeFiles();\n    }\n  }, [courseFiles]);\n\n  const analyzeFiles = async () => {\n    if (courseFiles.length === 0) return;\n    \n    setIsAnalyzing(true);\n    try {\n      const results = await analyzeUploadedFiles(courseFiles);\n      setAiResults(results);\n      setShowAIPreview(true);\n    } catch (error) {\n      console.error('AI analysis failed:', error);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Use shared drag and drop handlers\n  const { handleDragOver, handleDragLeave, handleDrop } = createDragHandlers(\n    (droppedFiles) => onCourseFilesChange([...courseFiles, ...droppedFiles]),\n    setIsDragOver\n  );\n\n  const handleFileSelect = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFiles = Array.from(e.target.files || []);\n    onCourseFilesChange([...courseFiles, ...selectedFiles]);\n  }, [courseFiles, onCourseFilesChange]);\n\n\n\n  const getEvaluationIcon = (type: string) => {\n    switch (type) {\n      case 'exams': return <FileCheck className=\"h-4 w-4\" />;\n      case 'essays': return <FileText className=\"h-4 w-4\" />;\n      case 'presentations': return <Presentation className=\"h-4 w-4\" />;\n      case 'projects': return <Check className=\"h-4 w-4\" />;\n      case 'labs': return <FlaskConical className=\"h-4 w-4\" />;\n      case 'participation': return <Hand className=\"h-4 w-4\" />;\n      case 'homework': return <Home className=\"h-4 w-4\" />;\n      case 'group-work': return <Users2 className=\"h-4 w-4\" />;\n      default: return <Check className=\"h-4 w-4\" />;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Completion Status */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <div className=\"flex items-center gap-2 mb-2\">\n          <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n          <h3 className=\"text-sm font-medium text-blue-900\">Course Details Required</h3>\n        </div>\n        <div className=\"text-sm text-blue-800 space-y-1\">\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-2 h-2 rounded-full ${testLevel ? 'bg-green-500' : 'bg-gray-300'}`}></div>\n            <span>Education level selected</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-2 h-2 rounded-full ${(assignmentDescription || courseFiles.length > 0) ? 'bg-green-500' : 'bg-gray-300'}`}></div>\n            <span>Course description or files provided</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-2 h-2 rounded-full ${evaluationTypes.length > 0 ? 'bg-green-500' : 'bg-gray-300'}`}></div>\n            <span>Evaluation methods selected</span>\n          </div>\n        </div>\n        <p className=\"text-xs text-blue-600 mt-2\">\n          Complete at least 2 of the 3 sections above to continue\n        </p>\n      </div>\n\n      <Tabs defaultValue=\"education\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"education\" className=\"flex items-center gap-2\">\n            <BookOpen className=\"h-4 w-4\" />\n            Education Level\n          </TabsTrigger>\n          <TabsTrigger value=\"course\" className=\"flex items-center gap-2\">\n            <FileText className=\"h-4 w-4\" />\n            Course Details\n          </TabsTrigger>\n          <TabsTrigger value=\"evaluation\" className=\"flex items-center gap-2\">\n            <Check className=\"h-4 w-4\" />\n            Evaluation\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Education Level Tab */}\n        <TabsContent value=\"education\" className=\"space-y-4\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <Label className=\"text-sm sm:text-base font-medium\">What's your education level?</Label>\n              <button \n                onClick={() => onTestLevelChange('college')}\n                className=\"text-sm text-red-500 hover:text-red-700 underline cursor-pointer\"\n              >\n                Skip this section\n              </button>\n            </div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              {testLevelOptions.map((option) => (\n                <div\n                  key={option.value}\n                  onClick={() => onTestLevelChange(option.value)}\n                  className={`p-3 sm:p-4 border rounded-lg cursor-pointer transition-all ${\n                    testLevel === option.value\n                      ? 'border-blue-500 bg-blue-50 scale-105'\n                      : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                  }`}\n                >\n                  <div className=\"flex items-start space-x-3\">\n                    <div className={`w-5 h-5 rounded border-2 flex items-center justify-center mt-0.5 ${\n                      testLevel === option.value\n                        ? 'border-blue-500 bg-blue-500'\n                        : 'border-gray-300'\n                    }`}>\n                      {testLevel === option.value && (\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                      )}\n                    </div>\n                    <div className=\"flex-1\">\n                      <Label className=\"text-sm sm:text-base font-medium cursor-pointer\">\n                        {option.label}\n                      </Label>\n                      <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">{option.description}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Grade Level for High School */}\n            {testLevel === 'high-school' && (\n              <div className=\"space-y-3\">\n                <Label className=\"text-sm sm:text-base font-medium\">What grade are you in?</Label>\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3\">\n                  {gradeLevelOptions.map((option) => (\n                    <div\n                      key={option.value}\n                      onClick={() => onGradeLevelChange(option.value)}\n                      className={`p-3 border rounded-lg cursor-pointer transition-all ${\n                        gradeLevel === option.value\n                          ? 'border-blue-500 bg-blue-50 scale-105'\n                          : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                      }`}\n                    >\n                      <div className=\"text-center\">\n                        <Label className=\"text-sm font-medium cursor-pointer\">\n                          {option.label}\n                        </Label>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </TabsContent>\n\n        {/* Course Details Tab */}\n        <TabsContent value=\"course\" className=\"space-y-4\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <Label className=\"text-sm sm:text-base font-medium\">Describe your course</Label>\n              <button \n                onClick={() => onAssignmentDescriptionChange('Course description skipped')}\n                className=\"text-sm text-red-500 hover:text-red-700 underline cursor-pointer\"\n              >\n                Skip this section\n              </button>\n            </div>\n            <Textarea\n              placeholder=\"Tell us about the specific course, its requirements, topics covered, and any special instructions...\"\n              value={assignmentDescription || ''}\n              onChange={(e) => onAssignmentDescriptionChange(e.target.value)}\n              className=\"min-h-[100px]\"\n            />\n\n            {/* File Upload Section */}\n            <div className=\"space-y-3\">\n              <Label className=\"text-sm sm:text-base font-medium\">\n                Upload Course Documents (Optional)\n              </Label>\n              <div\n                className={`border-2 border-dashed rounded-lg p-6 text-center transition-all duration-300 ${\n                  isDragOver \n                    ? 'border-blue-400 bg-blue-50/50 scale-105' \n                    : 'border-gray-300 hover:border-blue-300 hover:bg-gray-50/50'\n                }`}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n                onDrop={handleDrop}\n              >\n                <div className=\"space-y-3\">\n                  <div className=\"mx-auto w-12 h-12 bg-gradient-to-r from-green-400 to-blue-600 rounded-full flex items-center justify-center\">\n                    <FileText className=\"h-6 w-6 text-white\" />\n                  </div>\n                  <div>\n                    <h4 className=\"text-base font-semibold text-slate-900 mb-2\">\n                      {isDragOver ? 'Drop your course files here!' : 'Upload course materials'}\n                    </h4>\n                    <p className=\"text-slate-600 mb-3\">\n                      Upload syllabus, course materials, or any relevant documents to help us understand your course better.\n                    </p>\n                    <p className=\"text-xs text-gray-500 mb-3\">\n                      Supported formats: PDF, DOCX, PPTX, TXT, PNG, JPG\n                    </p>\n                    <Button \n                      variant=\"outline\" \n                      onClick={() => fileInputRef.current?.click()}\n                      className=\"border-green-200 text-green-600 hover:bg-green-50\"\n                    >\n                      Browse course files\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Hidden file input */}\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                multiple\n                className=\"hidden\"\n                onChange={handleFileSelect}\n                accept=\".pdf,.docx,.pptx,.txt,.png,.jpg,.jpeg\"\n              />\n\n              {/* Uploaded Files List */}\n              {courseFiles.length > 0 && (\n                <div className=\"space-y-3\">\n                  <h4 className=\"font-medium text-slate-900\">Course Documents ({courseFiles.length})</h4>\n                  <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                    {courseFiles.map((file, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\">\n                        <div className=\"flex items-center space-x-3\">\n                          <FileText className=\"h-5 w-5 text-green-600\" />\n                          <div>\n                            <p className=\"text-sm font-medium text-slate-900\">{file.name}</p>\n                            <p className=\"text-xs text-gray-500\">{formatFileSize(file.size)}</p>\n                          </div>\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => onCourseFileRemove(index)}\n                          className=\"text-red-500 hover:text-red-700 hover:bg-red-50\"\n                        >\n                          Remove\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* AI Analysis Loading */}\n              {isAnalyzing && (\n                <AILoading \n                  message=\"Analyzing your course files...\"\n                  subMessage=\"Extracting topics, evaluation methods, and important dates\"\n                  variant=\"blue\"\n                />\n              )}\n\n              {/* AI Preview */}\n              {showAIPreview && (\n                <AIPreview\n                  detectedTopics={aiResults.topics}\n                  detectedDates={aiResults.dates}\n                  detectedTestTypes={aiResults.testTypes}\n                  onApplyTopics={onApplyAITopics}\n                  onApplyDates={onApplyAIDates}\n                  onApplyTestTypes={onApplyAITestTypes}\n                  onApplyRecommendations={onApplyAIRecommendations}\n                  onDismiss={() => setShowAIPreview(false)}\n                />\n              )}\n            </div>\n          </div>\n        </TabsContent>\n\n        {/* Evaluation Types Tab */}\n        <TabsContent value=\"evaluation\" className=\"space-y-4\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <Label className=\"text-sm sm:text-base font-medium\">How will you be evaluated?</Label>\n              <button \n                onClick={() => onEvaluationTypeToggle('exams')}\n                className=\"text-sm text-red-500 hover:text-red-700 underline cursor-pointer\"\n              >\n                Skip this section\n              </button>\n            </div>\n            <p className=\"text-sm text-gray-600\">Select all the evaluation methods used in this course</p>\n            \n            <TooltipProvider>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n                {evaluationTypeOptions.map((option) => (\n                  <div\n                    key={option.value}\n                    onClick={() => onEvaluationTypeToggle(option.value)}\n                    className={`p-3 sm:p-4 border rounded-lg cursor-pointer transition-all ${\n                      evaluationTypes.includes(option.value)\n                        ? 'border-blue-500 bg-blue-50 scale-105'\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                    }`}\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      <div className={`w-5 h-5 rounded border-2 flex items-center justify-center mt-0.5 ${\n                        evaluationTypes.includes(option.value)\n                          ? 'border-blue-500 bg-blue-500'\n                          : 'border-gray-300'\n                      }`}>\n                        {evaluationTypes.includes(option.value) && (\n                          <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                        )}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2\">\n                          {getEvaluationIcon(option.value)}\n                          <Label className=\"text-sm sm:text-base font-medium cursor-pointer\">\n                            {option.label}\n                          </Label>\n                        </div>\n                        <p className=\"text-xs sm:text-sm text-gray-600 mt-1\">{option.description}</p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </TooltipProvider>\n\n            {/* Selected Evaluation Types Summary */}\n            {evaluationTypes.length > 0 && (\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm font-medium\">Selected Evaluation Methods:</Label>\n                <div className=\"flex flex-wrap gap-2\">\n                  {evaluationTypes.map((type) => {\n                    const option = evaluationTypeOptions.find(opt => opt.value === type);\n                    return (\n                      <Badge key={type} variant=\"secondary\" className=\"flex items-center gap-1\">\n                        {getEvaluationIcon(type)}\n                        {option?.label}\n                      </Badge>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":["CourseDetailsStep","testLevel","gradeLevel","assignmentDescription","courseFiles","evaluationTypes","onTestLevelChange","onGradeLevelChange","onAssignmentDescriptionChange","onCourseFilesChange","onCourseFileRemove","onEvaluationTypeToggle","onApplyAITopics","onApplyAIDates","onApplyAITestTypes","onApplyAIRecommendations","testLevelOptions","gradeLevelOptions","evaluationTypeOptions","isDragOver","setIsDragOver","useState","isAnalyzing","setIsAnalyzing","showAIPreview","setShowAIPreview","aiResults","setAiResults","topics","dates","testTypes","fileInputRef","useRef","useEffect","length","analyzeFiles","results","analyzeUploadedFiles","error","console","handleDragOver","handleDragLeave","handleDrop","createDragHandlers","droppedFiles","handleFileSelect","useCallback","e","selectedFiles","Array","from","target","files","getEvaluationIcon","type","FileCheck","className","FileText","Presentation","Check","FlaskConical","Hand","Home","Users2","div","h3","span","p","Tabs","defaultValue","TabsList","TabsTrigger","value","BookOpen","TabsContent","Label","button","onClick","map","option","label","description","Textarea","placeholder","onChange","onDragOver","onDragLeave","onDrop","h4","Button","variant","current","click","input","ref","multiple","accept","file","index","name","formatFileSize","size","AILoading","message","subMessage","AIPreview","detectedTopics","detectedDates","detectedTestTypes","onApplyTopics","onApplyDates","onApplyTestTypes","onApplyRecommendations","onDismiss","TooltipProvider","includes","find","opt","Badge"],"mappings":"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"}