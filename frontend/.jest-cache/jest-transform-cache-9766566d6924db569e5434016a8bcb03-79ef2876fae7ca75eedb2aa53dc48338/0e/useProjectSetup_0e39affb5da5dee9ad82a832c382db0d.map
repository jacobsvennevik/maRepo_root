{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/hooks/useProjectSetup.ts"],"sourcesContent":["'use client';\n\nimport { useState } from \"react\";\nimport { ProjectSetup } from \"../types\";\n\nexport const useProjectSetup = (initialSetup: ProjectSetup) => {\n  const [setup, setSetup] = useState<ProjectSetup>(initialSetup);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  const handleOptionSelect = (\n    field: keyof ProjectSetup,\n    value: string | string[],\n  ) => {\n    setSetup((prev) => ({ ...prev, [field]: value }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleAddDate = (newDate: {\n    date: string;\n    description: string;\n    type: string;\n  }) => {\n    if (newDate.date && newDate.description) {\n      setSetup((prev) => ({\n        ...prev,\n        importantDates: [...prev.importantDates, { ...newDate }],\n      }));\n      setHasUnsavedChanges(true);\n      return true;\n    }\n    return false;\n  };\n\n  const handleRemoveDate = (index: number) => {\n    setSetup((prev) => ({\n      ...prev,\n      importantDates: prev.importantDates.filter((_, i) => i !== index),\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleFileUpload = (files: File[]) => {\n    setSetup((prev) => ({\n      ...prev,\n      uploadedFiles: [...(prev.uploadedFiles || []), ...files],\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleCourseFileUpload = (files: File[]) => {\n    setSetup((prev) => ({\n      ...prev,\n      courseFiles: [...(prev.courseFiles || []), ...files],\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleTestFileUpload = (files: File[]) => {\n    setSetup((prev) => ({\n      ...prev,\n      testFiles: [...(prev.testFiles || []), ...files],\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleRemoveFile = (index: number) => {\n    setSetup((prev) => ({\n      ...prev,\n      uploadedFiles: (prev.uploadedFiles || []).filter((_, i) => i !== index),\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleRemoveCourseFile = (index: number) => {\n    setSetup((prev) => ({\n      ...prev,\n      courseFiles: (prev.courseFiles || []).filter((_, i) => i !== index),\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleRemoveTestFile = (index: number) => {\n    setSetup((prev) => ({\n      ...prev,\n      testFiles: prev.testFiles.filter((_, i) => i !== index),\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleApplyAITopics = (topics: string[]) => {\n    const currentDesc = setup.assignmentDescription || \"\";\n    const topicsText = topics.join(\", \");\n    const newDesc = currentDesc\n      ? `${currentDesc}\\n\\nDetected topics: ${topicsText}`\n      : `Detected topics: ${topicsText}`;\n    setSetup((prev) => ({ ...prev, assignmentDescription: newDesc }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleApplyAIDates = (dates: any[]) => {\n    const convertedDates = dates.map((date) => ({\n      date: date.date,\n      description: date.description,\n      type: date.type,\n    }));\n    setSetup((prev) => ({\n      ...prev,\n      importantDates: [...prev.importantDates, ...convertedDates],\n    }));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleApplyAITestTypes = (types: string[]) => {\n    const convertedTypes = types\n      .map((type) => {\n        switch (type.toLowerCase()) {\n          case \"multiple choice\":\n            return \"exams\";\n          case \"essay\":\n            return \"essays\";\n          case \"problem solving\":\n            return \"exams\";\n          case \"lab practical\":\n            return \"labs\";\n          case \"oral exam\":\n            return \"presentations\";\n          case \"take-home\":\n            return \"projects\";\n          default:\n            return \"exams\";\n        }\n      })\n      .filter((type, index, self) => self.indexOf(type) === index);\n\n    // Note: evaluationTypes is not part of ProjectSetup interface\n    // This function is kept for compatibility but doesn't modify setup\n    setHasUnsavedChanges(true);\n  };\n\n  const handleApplyAIRecommendations = (recommendations: any[]) => {\n    setSetup((prev) => {\n      const newSetup = { ...prev };\n      let hasChanged = false;\n      recommendations.forEach((rec) => {\n        switch (rec.type) {\n          case \"schedule\":\n            if (!newSetup.studyFrequency) {\n              newSetup.studyFrequency = \"daily\";\n              hasChanged = true;\n            }\n            break;\n          case \"material\":\n            const materialNote = `\\n\\nStudy Materials: ${rec.description}`;\n            newSetup.assignmentDescription =\n              (newSetup.assignmentDescription || \"\") + materialNote;\n            hasChanged = true;\n            break;\n          case \"strategy\":\n            const strategyNote = `\\n\\nTest Strategy: ${rec.description}`;\n            newSetup.goal = (newSetup.goal || \"\") + strategyNote;\n            hasChanged = true;\n            break;\n          case \"timeline\":\n            if (!newSetup.timeframe) {\n              newSetup.timeframe = \"3-months\";\n              hasChanged = true;\n            }\n            break;\n        }\n      });\n      if (hasChanged) {\n        setHasUnsavedChanges(true);\n      }\n      return newSetup;\n    });\n  };\n\n  return {\n    setup,\n    setSetup,\n    hasUnsavedChanges,\n    setHasUnsavedChanges,\n    handleOptionSelect,\n    handleAddDate,\n    handleRemoveDate,\n    handleFileUpload,\n    handleCourseFileUpload,\n    handleTestFileUpload,\n    handleRemoveFile,\n    handleRemoveCourseFile,\n    handleRemoveTestFile,\n    handleApplyAITopics,\n    handleApplyAIDates,\n    handleApplyAITestTypes,\n    handleApplyAIRecommendations,\n  };\n};\n"],"names":["useProjectSetup","initialSetup","setup","setSetup","useState","hasUnsavedChanges","setHasUnsavedChanges","handleOptionSelect","field","value","prev","handleAddDate","newDate","date","description","importantDates","handleRemoveDate","index","filter","_","i","handleFileUpload","files","uploadedFiles","handleCourseFileUpload","courseFiles","handleTestFileUpload","testFiles","handleRemoveFile","handleRemoveCourseFile","handleRemoveTestFile","handleApplyAITopics","topics","currentDesc","assignmentDescription","topicsText","join","newDesc","handleApplyAIDates","dates","convertedDates","map","type","handleApplyAITestTypes","types","convertedTypes","toLowerCase","self","indexOf","handleApplyAIRecommendations","recommendations","newSetup","hasChanged","forEach","rec","studyFrequency","materialNote","strategyNote","goal","timeframe"],"mappings":"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"}