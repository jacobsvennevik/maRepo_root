17619f020c86b3e6249fb56a75910c09
/**
 * Quiz Center TypeScript Interfaces
 * 
 * Comprehensive type definitions following the established patterns
 * from Flashcards and Files features.
 */ // ============================================================================
// Backend API Types (matching backend models)
// ============================================================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNvYmhvcm5zdmVubmV2aWsvRG9jdW1lbnRzL0dpdEh1Yi9tYVJlcG9fcm9vdC9mcm9udGVuZC9zcmMvZmVhdHVyZXMvcXVpei90eXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFF1aXogQ2VudGVyIFR5cGVTY3JpcHQgSW50ZXJmYWNlc1xuICogXG4gKiBDb21wcmVoZW5zaXZlIHR5cGUgZGVmaW5pdGlvbnMgZm9sbG93aW5nIHRoZSBlc3RhYmxpc2hlZCBwYXR0ZXJuc1xuICogZnJvbSBGbGFzaGNhcmRzIGFuZCBGaWxlcyBmZWF0dXJlcy5cbiAqL1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCYWNrZW5kIEFQSSBUeXBlcyAobWF0Y2hpbmcgYmFja2VuZCBtb2RlbHMpXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGlhZ25vc3RpY1Nlc3Npb24ge1xuICBpZDogc3RyaW5nO1xuICBwcm9qZWN0OiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHRvcGljPzogc3RyaW5nO1xuICBzdGF0dXM6ICdEUkFGVCcgfCAnQUNUSVZFJyB8ICdDT01QTEVURUQnIHwgJ0FSQ0hJVkVEJztcbiAgZGVsaXZlcnlfbW9kZTogJ0lNTUVESUFURScgfCAnREVGRVJSRUQnO1xuICBtYXhfcXVlc3Rpb25zOiBudW1iZXI7XG4gIHRpbWVfbGltaXRfc2VjPzogbnVtYmVyO1xuICBjcmVhdGVkX2F0OiBzdHJpbmc7XG4gIHVwZGF0ZWRfYXQ6IHN0cmluZztcbiAgY3JlYXRlZF9ieTogc3RyaW5nO1xuICBzZWVkPzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERpYWdub3N0aWNRdWVzdGlvbiB7XG4gIGlkOiBzdHJpbmc7XG4gIHNlc3Npb246IHN0cmluZztcbiAgdHlwZTogJ01DUScgfCAnU0hPUlRfQU5TV0VSJyB8ICdQUklOQ0lQTEUnO1xuICB0ZXh0OiBzdHJpbmc7XG4gIGNob2ljZXM/OiBzdHJpbmdbXTtcbiAgY29ycmVjdF9jaG9pY2VfaW5kZXg/OiBudW1iZXI7XG4gIGFjY2VwdGFibGVfYW5zd2Vycz86IHN0cmluZ1tdO1xuICBleHBsYW5hdGlvbjogc3RyaW5nO1xuICBkaWZmaWN1bHR5OiBudW1iZXI7XG4gIGJsb29tX2xldmVsOiAnUmVtZW1iZXInIHwgJ1VuZGVyc3RhbmQnIHwgJ0FwcGx5JyB8ICdBbmFseXplJyB8ICdFdmFsdWF0ZScgfCAnQ3JlYXRlJztcbiAgY29uY2VwdF9pZDogc3RyaW5nO1xuICB0YWdzPzogc3RyaW5nW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGlhZ25vc3RpY1Jlc3BvbnNlIHtcbiAgaWQ6IHN0cmluZztcbiAgc2Vzc2lvbjogc3RyaW5nO1xuICBxdWVzdGlvbjogc3RyaW5nO1xuICB1c2VyX2Fuc3dlcjogc3RyaW5nO1xuICBpc19jb3JyZWN0OiBib29sZWFuO1xuICB0aW1lX3Rha2VuX3NlYz86IG51bWJlcjtcbiAgc3VibWl0dGVkX2F0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGlhZ25vc3RpY0FuYWx5dGljcyB7XG4gIGlkOiBzdHJpbmc7XG4gIHNlc3Npb246IHN0cmluZztcbiAgdG90YWxfcXVlc3Rpb25zOiBudW1iZXI7XG4gIGNvcnJlY3RfYW5zd2VyczogbnVtYmVyO1xuICBhY2N1cmFjeV9wZXJjZW50YWdlOiBudW1iZXI7XG4gIGF2ZXJhZ2VfdGltZV9wZXJfcXVlc3Rpb246IG51bWJlcjtcbiAgdG90YWxfdGltZV90YWtlbjogbnVtYmVyO1xuICBjb21wbGV0ZWRfYXQ6IHN0cmluZztcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRnJvbnRlbmQgRGF0YSBUeXBlcyAodHJhbnNmb3JtZWQgZm9yIFVJKVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgaW50ZXJmYWNlIFF1aXpTZXNzaW9uIHtcbiAgaWQ6IHN0cmluZztcbiAgcHJvamVjdElkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHRvcGljPzogc3RyaW5nO1xuICBzdGF0dXM6IFF1aXpTZXNzaW9uU3RhdHVzO1xuICBkZWxpdmVyeU1vZGU6ICdJTU1FRElBVEUnIHwgJ0RFRkVSUkVEJztcbiAgbWF4UXVlc3Rpb25zOiBudW1iZXI7XG4gIHRpbWVMaW1pdFNlYz86IG51bWJlcjtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG4gIGNyZWF0ZWRCeTogc3RyaW5nO1xuICBzZWVkPzogbnVtYmVyO1xuICBcbiAgLy8gQ29tcHV0ZWQgZmllbGRzXG4gIHF1ZXN0aW9uQ291bnQ/OiBudW1iZXI7XG4gIGNvbXBsZXRpb25SYXRlPzogbnVtYmVyO1xuICBhdmVyYWdlU2NvcmU/OiBudW1iZXI7XG4gIGxhc3RBY2Nlc3NlZD86IERhdGU7XG59XG5cbmV4cG9ydCB0eXBlIFF1aXpTZXNzaW9uU3RhdHVzID0gJ2RyYWZ0JyB8ICdhY3RpdmUnIHwgJ2NvbXBsZXRlZCcgfCAnYXJjaGl2ZWQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFF1aXpRdWVzdGlvbiB7XG4gIGlkOiBzdHJpbmc7XG4gIHNlc3Npb25JZDogc3RyaW5nO1xuICB0eXBlOiBRdWl6UXVlc3Rpb25UeXBlO1xuICB0ZXh0OiBzdHJpbmc7XG4gIGNob2ljZXM/OiBRdWl6Q2hvaWNlW107XG4gIGNvcnJlY3RDaG9pY2VJbmRleD86IG51bWJlcjtcbiAgYWNjZXB0YWJsZUFuc3dlcnM/OiBzdHJpbmdbXTtcbiAgZXhwbGFuYXRpb246IHN0cmluZztcbiAgZGlmZmljdWx0eTogbnVtYmVyO1xuICBibG9vbUxldmVsOiBCbG9vbUxldmVsO1xuICBjb25jZXB0SWQ6IHN0cmluZztcbiAgdGFncz86IHN0cmluZ1tdO1xuICBcbiAgLy8gVUkgc3RhdGVcbiAgdXNlckFuc3dlcj86IHN0cmluZztcbiAgaXNDb3JyZWN0PzogYm9vbGVhbjtcbiAgdGltZVRha2VuU2VjPzogbnVtYmVyO1xuICBpc0Fuc3dlcmVkPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IHR5cGUgUXVpelF1ZXN0aW9uVHlwZSA9ICdtdWx0aXBsZV9jaG9pY2UnIHwgJ3Nob3J0X2Fuc3dlcicgfCAncHJpbmNpcGxlJztcbmV4cG9ydCB0eXBlIEJsb29tTGV2ZWwgPSAnUmVtZW1iZXInIHwgJ1VuZGVyc3RhbmQnIHwgJ0FwcGx5JyB8ICdBbmFseXplJyB8ICdFdmFsdWF0ZScgfCAnQ3JlYXRlJztcblxuZXhwb3J0IGludGVyZmFjZSBRdWl6Q2hvaWNlIHtcbiAgaWQ6IHN0cmluZztcbiAgdGV4dDogc3RyaW5nO1xuICBpc0NvcnJlY3Q6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVpelJlc3BvbnNlIHtcbiAgaWQ6IHN0cmluZztcbiAgc2Vzc2lvbklkOiBzdHJpbmc7XG4gIHF1ZXN0aW9uSWQ6IHN0cmluZztcbiAgdXNlckFuc3dlcjogc3RyaW5nO1xuICBpc0NvcnJlY3Q6IGJvb2xlYW47XG4gIHRpbWVUYWtlblNlYz86IG51bWJlcjtcbiAgc3VibWl0dGVkQXQ6IERhdGU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVpekFuYWx5dGljcyB7XG4gIGlkOiBzdHJpbmc7XG4gIHNlc3Npb25JZDogc3RyaW5nO1xuICB0b3RhbFF1ZXN0aW9uczogbnVtYmVyO1xuICBjb3JyZWN0QW5zd2VyczogbnVtYmVyO1xuICBhY2N1cmFjeVBlcmNlbnRhZ2U6IG51bWJlcjtcbiAgYXZlcmFnZVRpbWVQZXJRdWVzdGlvbjogbnVtYmVyO1xuICB0b3RhbFRpbWVUYWtlbjogbnVtYmVyO1xuICBjb21wbGV0ZWRBdDogRGF0ZTtcbiAgXG4gIC8vIEFkZGl0aW9uYWwgY29tcHV0ZWQgZmllbGRzXG4gIHNjb3JlOiBudW1iZXI7XG4gIGdyYWRlOiAnQScgfCAnQicgfCAnQycgfCAnRCcgfCAnRic7XG4gIHRpbWVFZmZpY2llbmN5OiAnZmFzdCcgfCAnbm9ybWFsJyB8ICdzbG93Jztcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQVBJIFJlcXVlc3QvUmVzcG9uc2UgVHlwZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IGludGVyZmFjZSBDcmVhdGVRdWl6U2Vzc2lvblJlcXVlc3Qge1xuICBwcm9qZWN0OiBzdHJpbmc7XG4gIHRvcGljPzogc3RyaW5nO1xuICBzb3VyY2VfaWRzPzogc3RyaW5nW107XG4gIHF1ZXN0aW9uX21peD86IFJlY29yZDxzdHJpbmcsIG51bWJlcj47XG4gIGRpZmZpY3VsdHk6ICdCRUdJTk5FUicgfCAnSU5URVJNRURJQVRFJyB8ICdBRFZBTkNFRCcgfCAnRVhQRVJUJztcbiAgZGVsaXZlcnlfbW9kZTogJ0lNTUVESUFURScgfCAnREVGRVJSRUQnO1xuICBtYXhfcXVlc3Rpb25zOiBudW1iZXI7XG4gIHRpbWVfbGltaXRfc2VjPzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVwZGF0ZVF1aXpTZXNzaW9uUmVxdWVzdCB7XG4gIHRpdGxlPzogc3RyaW5nO1xuICB0b3BpYz86IHN0cmluZztcbiAgc3RhdHVzPzogUXVpelNlc3Npb25TdGF0dXM7XG4gIGRlbGl2ZXJ5X21vZGU/OiAnSU1NRURJQVRFJyB8ICdERUZFUlJFRCc7XG4gIHRpbWVfbGltaXRfc2VjPzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXJ0UXVpelNlc3Npb25SZXNwb25zZSB7XG4gIHNlc3Npb25faWQ6IHN0cmluZztcbiAgcXVlc3Rpb25zOiBRdWl6UXVlc3Rpb25bXTtcbiAgdGltZV9saW1pdF9zZWM/OiBudW1iZXI7XG4gIGRlbGl2ZXJ5X21vZGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdWJtaXRRdWl6QW5zd2VyUmVxdWVzdCB7XG4gIHF1ZXN0aW9uX2lkOiBzdHJpbmc7XG4gIHVzZXJfYW5zd2VyOiBzdHJpbmc7XG4gIHRpbWVfdGFrZW5fc2VjPzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN1Ym1pdFF1aXpBbnN3ZXJSZXNwb25zZSB7XG4gIGlzX2NvcnJlY3Q6IGJvb2xlYW47XG4gIGV4cGxhbmF0aW9uOiBzdHJpbmc7XG4gIGNvcnJlY3RfYW5zd2VyPzogc3RyaW5nO1xuICBzY29yZT86IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBRdWl6U2Vzc2lvbkxpc3RSZXNwb25zZSB7XG4gIHJlc3VsdHM6IERpYWdub3N0aWNTZXNzaW9uW107XG4gIGNvdW50OiBudW1iZXI7XG4gIG5leHQ/OiBzdHJpbmc7XG4gIHByZXZpb3VzPzogc3RyaW5nO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTdGF0ZSBNYW5hZ2VtZW50IFR5cGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVpekNlbnRlclN0YXRlIHtcbiAgc2Vzc2lvbnM6IFF1aXpTZXNzaW9uW107XG4gIGN1cnJlbnRTZXNzaW9uPzogUXVpelNlc3Npb247XG4gIGN1cnJlbnRRdWVzdGlvbnM/OiBRdWl6UXVlc3Rpb25bXTtcbiAgYW5hbHl0aWNzPzogUXVpekFuYWx5dGljcztcbiAgXG4gIC8vIExvYWRpbmcgc3RhdGVzXG4gIGxvYWRpbmc6IGJvb2xlYW47XG4gIGxvYWRpbmdTZXNzaW9uczogYm9vbGVhbjtcbiAgbG9hZGluZ1Nlc3Npb246IGJvb2xlYW47XG4gIGxvYWRpbmdRdWVzdGlvbnM6IGJvb2xlYW47XG4gIHN1Ym1pdHRpbmdBbnN3ZXI6IGJvb2xlYW47XG4gIGdlbmVyYXRpbmdRdWl6OiBib29sZWFuO1xuICBcbiAgLy8gRXJyb3Igc3RhdGVzXG4gIGVycm9yOiBzdHJpbmcgfCBudWxsO1xuICBzZXNzaW9uRXJyb3I6IHN0cmluZyB8IG51bGw7XG4gIHF1ZXN0aW9uc0Vycm9yOiBzdHJpbmcgfCBudWxsO1xuICBzdWJtaXNzaW9uRXJyb3I6IHN0cmluZyB8IG51bGw7XG4gIFxuICAvLyBVSSBzdGF0ZVxuICBzZWxlY3RlZFNlc3Npb25JZD86IHN0cmluZztcbiAgY3VycmVudFF1ZXN0aW9uSW5kZXg6IG51bWJlcjtcbiAgc2Vzc2lvblN0YXJ0ZWQ6IGJvb2xlYW47XG4gIHNlc3Npb25Db21wbGV0ZWQ6IGJvb2xlYW47XG4gIFxuICAvLyBTdGF0c1xuICB0b3RhbFNlc3Npb25zOiBudW1iZXI7XG4gIGNvbXBsZXRlZFNlc3Npb25zOiBudW1iZXI7XG4gIGF2ZXJhZ2VTY29yZTogbnVtYmVyO1xuICB0b3RhbFRpbWVTcGVudDogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFF1aXpTZXNzaW9uRmlsdGVycyB7XG4gIHN0YXR1cz86IFF1aXpTZXNzaW9uU3RhdHVzW107XG4gIGRpZmZpY3VsdHk/OiBzdHJpbmdbXTtcbiAgdG9waWM/OiBzdHJpbmdbXTtcbiAgZGF0ZVJhbmdlPzoge1xuICAgIHN0YXJ0OiBEYXRlO1xuICAgIGVuZDogRGF0ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBRdWl6U2Vzc2lvblNvcnQge1xuICBmaWVsZDogJ2NyZWF0ZWRfYXQnIHwgJ3RpdGxlJyB8ICdzdGF0dXMnIHwgJ2NvbXBsZXRpb25fcmF0ZScgfCAnYXZlcmFnZV9zY29yZSc7XG4gIGRpcmVjdGlvbjogJ2FzYycgfCAnZGVzYyc7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENvbXBvbmVudCBQcm9wcyBUeXBlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgaW50ZXJmYWNlIFF1aXpDZW50ZXJQcm9wcyB7XG4gIHByb2plY3RJZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFF1aXpTZXNzaW9uQ2FyZFByb3BzIHtcbiAgc2Vzc2lvbjogUXVpelNlc3Npb247XG4gIG9uU3RhcnQ6IChzZXNzaW9uSWQ6IHN0cmluZykgPT4gdm9pZDtcbiAgb25FZGl0OiAoc2Vzc2lvbklkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uRGVsZXRlOiAoc2Vzc2lvbklkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uVmlld0FuYWx5dGljczogKHNlc3Npb25JZDogc3RyaW5nKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFF1aXpRdWVzdGlvbkNhcmRQcm9wcyB7XG4gIHF1ZXN0aW9uOiBRdWl6UXVlc3Rpb247XG4gIHF1ZXN0aW9uSW5kZXg6IG51bWJlcjtcbiAgdG90YWxRdWVzdGlvbnM6IG51bWJlcjtcbiAgb25BbnN3ZXI6IChhbnN3ZXI6IHN0cmluZykgPT4gdm9pZDtcbiAgb25OZXh0OiAoKSA9PiB2b2lkO1xuICBvblByZXZpb3VzOiAoKSA9PiB2b2lkO1xuICB0aW1lTGltaXRTZWM/OiBudW1iZXI7XG4gIHNob3dFeHBsYW5hdGlvbj86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVpekFuYWx5dGljc0NhcmRQcm9wcyB7XG4gIGFuYWx5dGljczogUXVpekFuYWx5dGljcztcbiAgc2Vzc2lvbjogUXVpelNlc3Npb247XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFV0aWxpdHkgVHlwZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IGludGVyZmFjZSBRdWl6U3RhdHMge1xuICB0b3RhbFNlc3Npb25zOiBudW1iZXI7XG4gIGNvbXBsZXRlZFNlc3Npb25zOiBudW1iZXI7XG4gIGF2ZXJhZ2VTY29yZTogbnVtYmVyO1xuICB0b3RhbFRpbWVTcGVudDogbnVtYmVyO1xuICBhY2N1cmFjeVRyZW5kOiBBcnJheTx7XG4gICAgZGF0ZTogc3RyaW5nO1xuICAgIGFjY3VyYWN5OiBudW1iZXI7XG4gIH0+O1xuICBkaWZmaWN1bHR5RGlzdHJpYnV0aW9uOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+O1xuICB0b3BpY0Rpc3RyaWJ1dGlvbjogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBRdWl6UmVjb21tZW5kYXRpb25zIHtcbiAgc3VnZ2VzdGVkVG9waWNzOiBzdHJpbmdbXTtcbiAgZGlmZmljdWx0eUFkanVzdG1lbnQ6ICdpbmNyZWFzZScgfCAnZGVjcmVhc2UnIHwgJ21haW50YWluJztcbiAgZm9jdXNBcmVhczogc3RyaW5nW107XG4gIHN0dWR5VGlwczogc3RyaW5nW107XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEVycm9yIFR5cGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVpekVycm9yIHtcbiAgY29kZTogc3RyaW5nO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGRldGFpbHM/OiBhbnk7XG4gIHRpbWVzdGFtcDogRGF0ZTtcbn1cblxuZXhwb3J0IHR5cGUgUXVpekVycm9yVHlwZSA9IFxuICB8ICdORVRXT1JLX0VSUk9SJ1xuICB8ICdWQUxJREFUSU9OX0VSUk9SJ1xuICB8ICdBVVRIRU5USUNBVElPTl9FUlJPUidcbiAgfCAnUEVSTUlTU0lPTl9FUlJPUidcbiAgfCAnTk9UX0ZPVU5EX0VSUk9SJ1xuICB8ICdTRVJWRVJfRVJST1InXG4gIHwgJ1RJTUVPVVRfRVJST1InXG4gIHwgJ1VOS05PV05fRVJST1InO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztDQUtDLEdBRUQsK0VBQStFO0FBQy9FLDhDQUE4QztBQUM5QywrRUFBK0UifQ==