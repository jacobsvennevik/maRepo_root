9748205c5a0f029f90a655659cdc2752
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return DiagnosticSession;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _axiosapi = require("../../../lib/axios-api");
const _card = require("../../../components/ui/card");
const _button = require("../../../components/ui/button");
const _badge = require("../../../components/ui/badge");
const _progress = require("../../../components/ui/progress");
const _radiogroup = require("../../../components/ui/radio-group");
const _label = require("../../../components/ui/label");
const _textarea = require("../../../components/ui/textarea");
const _slider = require("../../../components/ui/slider");
const _alert = require("../../../components/ui/alert");
const _lucidereact = require("lucide-react");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function DiagnosticSession({ sessionId }) {
    const [session, setSession] = (0, _react.useState)(null);
    const [currentQuestionIndex, setCurrentQuestionIndex] = (0, _react.useState)(0);
    const [responses, setResponses] = (0, _react.useState)([]);
    const [isLoading, setIsLoading] = (0, _react.useState)(true);
    const [isSubmitting, setIsSubmitting] = (0, _react.useState)(false);
    const [timeRemaining, setTimeRemaining] = (0, _react.useState)(null);
    const [showResults, setShowResults] = (0, _react.useState)(false);
    const [results, setResults] = (0, _react.useState)(null);
    const [questionStartTime, setQuestionStartTime] = (0, _react.useState)(Date.now());
    (0, _react.useEffect)(()=>{
        fetchSession();
    }, [
        sessionId
    ]);
    (0, _react.useEffect)(()=>{
        if (session?.time_limit_sec) {
            setTimeRemaining(session.time_limit_sec);
        }
    }, [
        session
    ]);
    (0, _react.useEffect)(()=>{
        if (timeRemaining !== null && timeRemaining > 0) {
            const timer = setInterval(()=>{
                setTimeRemaining((prev)=>{
                    if (prev === null || prev <= 1) {
                        clearInterval(timer);
                        handleSubmit();
                        return 0;
                    }
                    return prev - 1;
                });
            }, 1000);
            return ()=>clearInterval(timer);
        }
    }, [
        timeRemaining
    ]);
    (0, _react.useEffect)(()=>{
        setQuestionStartTime(Date.now());
    }, [
        currentQuestionIndex
    ]);
    const fetchSession = async ()=>{
        try {
            setIsLoading(true);
            const response = await _axiosapi.axiosApi.get(`diagnostic-sessions/${sessionId}/`);
            setSession(response.data);
        } catch (error) {
            console.error('Failed to fetch session:', error);
        } finally{
            setIsLoading(false);
        }
    };
    const handleAnswerChange = (questionId, value, type)=>{
        const existingResponseIndex = responses.findIndex((r)=>r.questionId === questionId);
        const latency = Date.now() - questionStartTime;
        if (existingResponseIndex >= 0) {
            const updatedResponses = [
                ...responses
            ];
            if (type === 'choice') {
                updatedResponses[existingResponseIndex] = {
                    ...updatedResponses[existingResponseIndex],
                    selected_choice_index: value,
                    latency_ms: latency
                };
            } else {
                updatedResponses[existingResponseIndex] = {
                    ...updatedResponses[existingResponseIndex],
                    answer_text: value,
                    latency_ms: latency
                };
            }
            setResponses(updatedResponses);
        } else {
            const newResponse = {
                questionId,
                confidence: 50,
                latency_ms: latency,
                ...type === 'choice' ? {
                    selected_choice_index: value
                } : {
                    answer_text: value
                }
            };
            setResponses([
                ...responses,
                newResponse
            ]);
        }
    };
    const handleConfidenceChange = (questionId, confidence)=>{
        const existingResponseIndex = responses.findIndex((r)=>r.questionId === questionId);
        if (existingResponseIndex >= 0) {
            const updatedResponses = [
                ...responses
            ];
            updatedResponses[existingResponseIndex].confidence = confidence[0];
            setResponses(updatedResponses);
        } else {
            const newResponse = {
                questionId,
                confidence: confidence[0],
                latency_ms: Date.now() - questionStartTime
            };
            setResponses([
                ...responses,
                newResponse
            ]);
        }
    };
    const handleNext = ()=>{
        if (currentQuestionIndex < (session?.questions.length || 0) - 1) {
            setCurrentQuestionIndex(currentQuestionIndex + 1);
        }
    };
    const handlePrevious = ()=>{
        if (currentQuestionIndex > 0) {
            setCurrentQuestionIndex(currentQuestionIndex - 1);
        }
    };
    const handleSubmit = async ()=>{
        try {
            setIsSubmitting(true);
            // Submit all responses
            const payload = {
                session_id: sessionId,
                responses: responses.map((r)=>({
                        question_id: r.questionId,
                        answer_text: r.answer_text,
                        selected_choice_index: r.selected_choice_index,
                        confidence: r.confidence,
                        latency_ms: r.latency_ms
                    }))
            };
            const response = await _axiosapi.axiosApi.post(`diagnostic-responses/`, payload);
            setResults(response.data);
            setShowResults(true);
        } catch (error) {
            console.error('Failed to submit responses:', error);
        } finally{
            setIsSubmitting(false);
        }
    };
    const formatTime = (seconds)=>{
        const mins = Math.floor(seconds / 60);
        const secs = seconds % 60;
        return `${mins}:${secs.toString().padStart(2, '0')}`;
    };
    const getCurrentResponse = (questionId)=>{
        return responses.find((r)=>r.questionId === questionId);
    };
    const getProgressPercentage = ()=>{
        if (!session) return 0;
        return (currentQuestionIndex + 1) / session.questions.length * 100;
    };
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "flex items-center justify-center min-h-[400px]",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Target, {
                        className: "mx-auto h-12 w-12 text-muted-foreground animate-pulse"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "mt-4 text-lg",
                        children: "Loading diagnostic session..."
                    })
                ]
            })
        });
    }
    if (!session) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                    className: "h-4 w-4"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_alert.AlertDescription, {
                    children: "Failed to load diagnostic session"
                })
            ]
        });
    }
    if (showResults && results) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "max-w-4xl mx-auto space-y-6",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                        className: "text-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                className: "text-2xl",
                                children: "Diagnostic Complete!"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardDescription, {
                                children: [
                                    "You've completed the diagnostic for \"",
                                    session.topic,
                                    '"'
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                        className: "space-y-6",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "grid grid-cols-1 md:grid-cols-3 gap-4 text-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "p-4 bg-muted rounded-lg",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "text-2xl font-bold text-primary",
                                                children: [
                                                    Math.round(results.average_score * 100),
                                                    "%"
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "text-sm text-muted-foreground",
                                                children: "Average Score"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "p-4 bg-muted rounded-lg",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "text-2xl font-bold text-primary",
                                                children: results.total_questions
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "text-sm text-muted-foreground",
                                                children: "Questions Answered"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "p-4 bg-muted rounded-lg",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "text-2xl font-bold text-primary",
                                                children: [
                                                    Math.round(results.median_confidence),
                                                    "%"
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "text-sm text-muted-foreground",
                                                children: "Median Confidence"
                                            })
                                        ]
                                    })
                                ]
                            }),
                            session.delivery_mode === 'IMMEDIATE_FEEDBACK' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "space-y-4",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                        className: "text-lg font-semibold",
                                        children: "Question Review"
                                    }),
                                    session.questions.map((question, index)=>{
                                        const response = getCurrentResponse(question.id);
                                        const isCorrect = response && (question.type === 'MCQ' ? response.selected_choice_index === question.correct_choice_index : response.answer_text && question.acceptable_answers?.some((pattern)=>new RegExp(pattern, 'i').test(response.answer_text || '')));
                                        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
                                            className: "border-l-4 border-l-primary",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                                className: "pt-6",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex items-start space-x-3",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "flex-shrink-0",
                                                            children: isCorrect ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                                                                className: "h-6 w-6 text-green-600"
                                                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.XCircle, {
                                                                className: "h-6 w-6 text-red-600"
                                                            })
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex-1 space-y-3",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "flex items-center space-x-2",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                                            variant: "outline",
                                                                            children: question.type
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                                            variant: "outline",
                                                                            children: question.bloom_level
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                            className: "text-sm text-muted-foreground",
                                                                            children: [
                                                                                "Question ",
                                                                                index + 1
                                                                            ]
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                    className: "font-medium",
                                                                    children: question.text
                                                                }),
                                                                question.type === 'MCQ' && question.choices && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "space-y-2",
                                                                    children: question.choices.map((choice, choiceIndex)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: `p-2 rounded border ${choiceIndex === question.correct_choice_index ? 'border-green-500 bg-green-50' : choiceIndex === response?.selected_choice_index ? 'border-red-500 bg-red-50' : 'border-gray-200'}`,
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                                    className: "font-medium",
                                                                                    children: [
                                                                                        String.fromCharCode(65 + choiceIndex),
                                                                                        "."
                                                                                    ]
                                                                                }),
                                                                                ' ',
                                                                                choice,
                                                                                choiceIndex === question.correct_choice_index && /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                                                                                    className: "inline h-4 w-4 text-green-600 ml-2"
                                                                                }),
                                                                                choiceIndex === response?.selected_choice_index && choiceIndex !== question.correct_choice_index && /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.XCircle, {
                                                                                    className: "inline h-4 w-4 text-red-600 ml-2"
                                                                                })
                                                                            ]
                                                                        }, choiceIndex))
                                                                }),
                                                                response?.answer_text && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "p-3 bg-muted rounded",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "text-sm font-medium text-muted-foreground",
                                                                            children: "Your answer:"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "mt-1",
                                                                            children: response.answer_text
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "p-3 bg-blue-50 rounded border border-blue-200",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "text-sm font-medium text-blue-800",
                                                                            children: "Explanation:"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "mt-1 text-blue-700",
                                                                            children: question.explanation
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "flex items-center justify-between text-sm text-muted-foreground",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                            children: [
                                                                                "Your confidence: ",
                                                                                response?.confidence,
                                                                                "%"
                                                                            ]
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                            children: [
                                                                                "Response time: ",
                                                                                Math.round((response?.latency_ms || 0) / 1000),
                                                                                "s"
                                                                            ]
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                })
                                            })
                                        }, question.id);
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "text-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    onClick: ()=>window.location.href = '/dashboard',
                                    children: "Return to Dashboard"
                                })
                            })
                        ]
                    })
                ]
            })
        });
    }
    const currentQuestion = session.questions[currentQuestionIndex];
    const currentResponse = getCurrentResponse(currentQuestion.id);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "max-w-4xl mx-auto space-y-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-2xl",
                                            children: session.topic
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardDescription, {
                                            children: [
                                                "Pre-lecture diagnostic • ",
                                                session.max_questions,
                                                " questions"
                                            ]
                                        })
                                    ]
                                }),
                                timeRemaining !== null && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center space-x-2 text-lg font-mono",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Clock, {
                                            className: "h-5 w-5 text-orange-500"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: timeRemaining < 60 ? 'text-red-600' : '',
                                            children: formatTime(timeRemaining)
                                        })
                                    ]
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between text-sm",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            children: "Progress"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                            children: [
                                                currentQuestionIndex + 1,
                                                " of ",
                                                session.questions.length
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                                    value: getProgressPercentage(),
                                    className: "h-2"
                                })
                            ]
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                    className: "pt-6",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-6",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center space-x-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                        variant: "outline",
                                        children: currentQuestion.type
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                        variant: "outline",
                                        children: currentQuestion.bloom_level
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                        className: "text-sm text-muted-foreground",
                                        children: [
                                            "Question ",
                                            currentQuestionIndex + 1,
                                            " of ",
                                            session.questions.length
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "text-lg font-medium leading-relaxed",
                                children: currentQuestion.text
                            }),
                            currentQuestion.type === 'MCQ' && currentQuestion.choices && /*#__PURE__*/ (0, _jsxruntime.jsx)(_radiogroup.RadioGroup, {
                                value: currentResponse?.selected_choice_index?.toString() || '',
                                onValueChange: (value)=>handleAnswerChange(currentQuestion.id, parseInt(value), 'choice'),
                                className: "space-y-3",
                                children: currentQuestion.choices.map((choice, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center space-x-3",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                                                value: index.toString(),
                                                id: `choice-${index}`
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                htmlFor: `choice-${index}`,
                                                className: "flex-1 p-3 border rounded-lg cursor-pointer hover:bg-muted/50 transition-colors",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                        className: "font-medium mr-2",
                                                        children: [
                                                            String.fromCharCode(65 + index),
                                                            "."
                                                        ]
                                                    }),
                                                    choice
                                                ]
                                            })
                                        ]
                                    }, index))
                            }),
                            (currentQuestion.type === 'SHORT_ANSWER' || currentQuestion.type === 'PRINCIPLE') && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "space-y-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                        htmlFor: "answer",
                                        children: "Your Answer"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                        id: "answer",
                                        placeholder: "Type your answer here...",
                                        value: currentResponse?.answer_text || '',
                                        onChange: (e)=>handleAnswerChange(currentQuestion.id, e.target.value, 'text'),
                                        className: "min-h-[120px] resize-none"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "space-y-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center justify-between",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                children: "How confident are you in your answer?"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                className: "text-sm font-medium",
                                                children: [
                                                    currentResponse?.confidence || 50,
                                                    "%"
                                                ]
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_slider.Slider, {
                                        value: [
                                            currentResponse?.confidence || 50
                                        ],
                                        onValueChange: (value)=>handleConfidenceChange(currentQuestion.id, value),
                                        max: 100,
                                        step: 5,
                                        className: "w-full"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex justify-between text-xs text-muted-foreground",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                children: "Not confident"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                children: "Very confident"
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        variant: "outline",
                        onClick: handlePrevious,
                        disabled: currentQuestionIndex === 0,
                        children: "Previous"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex items-center space-x-2",
                        children: currentQuestionIndex === session.questions.length - 1 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                            onClick: handleSubmit,
                            disabled: isSubmitting || responses.length < session.questions.length,
                            className: "bg-green-600 hover:bg-green-700",
                            children: isSubmitting ? 'Submitting...' : 'Submit Diagnostic'
                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                            onClick: handleNext,
                            children: "Next Question"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center text-sm text-muted-foreground",
                children: [
                    responses.length,
                    " of ",
                    session.questions.length,
                    " questions answered"
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNvYmhvcm5zdmVubmV2aWsvRG9jdW1lbnRzL0dpdEh1Yi9tYVJlcG9fcm9vdC9mcm9udGVuZC9zcmMvZmVhdHVyZXMvZGlhZ25vc3RpY3MvY29tcG9uZW50cy9EaWFnbm9zdGljU2Vzc2lvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGF4aW9zQXBpIH0gZnJvbSAnQC9saWIvYXhpb3MtYXBpJztcbmltcG9ydCB7IENhcmQsIENhcmRDb250ZW50LCBDYXJkRGVzY3JpcHRpb24sIENhcmRIZWFkZXIsIENhcmRUaXRsZSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9jYXJkJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9idXR0b24nO1xuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYmFkZ2UnO1xuaW1wb3J0IHsgUHJvZ3Jlc3MgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvcHJvZ3Jlc3MnO1xuaW1wb3J0IHsgUmFkaW9Hcm91cCwgUmFkaW9Hcm91cEl0ZW0gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvcmFkaW8tZ3JvdXAnO1xuaW1wb3J0IHsgTGFiZWwgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvbGFiZWwnO1xuaW1wb3J0IHsgVGV4dGFyZWEgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvdGV4dGFyZWEnO1xuaW1wb3J0IHsgU2xpZGVyIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL3NsaWRlcic7XG5pbXBvcnQgeyBBbGVydCwgQWxlcnREZXNjcmlwdGlvbiB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9hbGVydCc7XG5pbXBvcnQgeyBDaGVja0NpcmNsZSwgWENpcmNsZSwgQ2xvY2ssIFRhcmdldCwgQnJhaW4sIEFsZXJ0VHJpYW5nbGUgfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuXG5pbnRlcmZhY2UgRGlhZ25vc3RpY1F1ZXN0aW9uIHtcbiAgaWQ6IHN0cmluZztcbiAgdHlwZTogJ01DUScgfCAnU0hPUlRfQU5TV0VSJyB8ICdQUklOQ0lQTEUnO1xuICB0ZXh0OiBzdHJpbmc7XG4gIGNob2ljZXM/OiBzdHJpbmdbXTtcbiAgY29ycmVjdF9jaG9pY2VfaW5kZXg/OiBudW1iZXI7XG4gIGFjY2VwdGFibGVfYW5zd2Vycz86IHN0cmluZ1tdO1xuICBleHBsYW5hdGlvbjogc3RyaW5nO1xuICBjb25jZXB0X2lkOiBzdHJpbmc7XG4gIGJsb29tX2xldmVsOiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBEaWFnbm9zdGljU2Vzc2lvbiB7XG4gIGlkOiBzdHJpbmc7XG4gIHRvcGljOiBzdHJpbmc7XG4gIGRlbGl2ZXJ5X21vZGU6ICdJTU1FRElBVEVfRkVFREJBQ0snIHwgJ0RFRkVSUkVEX0ZFRURCQUNLJztcbiAgbWF4X3F1ZXN0aW9uczogbnVtYmVyO1xuICB0aW1lX2xpbWl0X3NlYz86IG51bWJlcjtcbiAgcXVlc3Rpb25zOiBEaWFnbm9zdGljUXVlc3Rpb25bXTtcbn1cblxuaW50ZXJmYWNlIFF1ZXN0aW9uUmVzcG9uc2Uge1xuICBxdWVzdGlvbklkOiBzdHJpbmc7XG4gIGFuc3dlcl90ZXh0Pzogc3RyaW5nO1xuICBzZWxlY3RlZF9jaG9pY2VfaW5kZXg/OiBudW1iZXI7XG4gIGNvbmZpZGVuY2U6IG51bWJlcjtcbiAgbGF0ZW5jeV9tczogbnVtYmVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEaWFnbm9zdGljU2Vzc2lvbih7IHNlc3Npb25JZCB9OiB7IHNlc3Npb25JZDogc3RyaW5nIH0pIHtcbiAgY29uc3QgW3Nlc3Npb24sIHNldFNlc3Npb25dID0gdXNlU3RhdGU8RGlhZ25vc3RpY1Nlc3Npb24gfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2N1cnJlbnRRdWVzdGlvbkluZGV4LCBzZXRDdXJyZW50UXVlc3Rpb25JbmRleF0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW3Jlc3BvbnNlcywgc2V0UmVzcG9uc2VzXSA9IHVzZVN0YXRlPFF1ZXN0aW9uUmVzcG9uc2VbXT4oW10pO1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtpc1N1Ym1pdHRpbmcsIHNldElzU3VibWl0dGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt0aW1lUmVtYWluaW5nLCBzZXRUaW1lUmVtYWluaW5nXSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbc2hvd1Jlc3VsdHMsIHNldFNob3dSZXN1bHRzXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Jlc3VsdHMsIHNldFJlc3VsdHNdID0gdXNlU3RhdGU8YW55PihudWxsKTtcbiAgY29uc3QgW3F1ZXN0aW9uU3RhcnRUaW1lLCBzZXRRdWVzdGlvblN0YXJ0VGltZV0gPSB1c2VTdGF0ZTxudW1iZXI+KERhdGUubm93KCkpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2hTZXNzaW9uKCk7XG4gIH0sIFtzZXNzaW9uSWRdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzZXNzaW9uPy50aW1lX2xpbWl0X3NlYykge1xuICAgICAgc2V0VGltZVJlbWFpbmluZyhzZXNzaW9uLnRpbWVfbGltaXRfc2VjKTtcbiAgICB9XG4gIH0sIFtzZXNzaW9uXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodGltZVJlbWFpbmluZyAhPT0gbnVsbCAmJiB0aW1lUmVtYWluaW5nID4gMCkge1xuICAgICAgY29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgIHNldFRpbWVSZW1haW5pbmcocHJldiA9PiB7XG4gICAgICAgICAgaWYgKHByZXYgPT09IG51bGwgfHwgcHJldiA8PSAxKSB7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRpbWVyKTtcbiAgICAgICAgICAgIGhhbmRsZVN1Ym1pdCgpO1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBwcmV2IC0gMTtcbiAgICAgICAgfSk7XG4gICAgICB9LCAxMDAwKTtcblxuICAgICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwodGltZXIpO1xuICAgIH1cbiAgfSwgW3RpbWVSZW1haW5pbmddKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFF1ZXN0aW9uU3RhcnRUaW1lKERhdGUubm93KCkpO1xuICB9LCBbY3VycmVudFF1ZXN0aW9uSW5kZXhdKTtcblxuICBjb25zdCBmZXRjaFNlc3Npb24gPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldElzTG9hZGluZyh0cnVlKTtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3NBcGkuZ2V0KGBkaWFnbm9zdGljLXNlc3Npb25zLyR7c2Vzc2lvbklkfS9gKTtcbiAgICAgIHNldFNlc3Npb24ocmVzcG9uc2UuZGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBzZXNzaW9uOicsIGVycm9yKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQW5zd2VyQ2hhbmdlID0gKHF1ZXN0aW9uSWQ6IHN0cmluZywgdmFsdWU6IGFueSwgdHlwZTogJ2Nob2ljZScgfCAndGV4dCcpID0+IHtcbiAgICBjb25zdCBleGlzdGluZ1Jlc3BvbnNlSW5kZXggPSByZXNwb25zZXMuZmluZEluZGV4KHIgPT4gci5xdWVzdGlvbklkID09PSBxdWVzdGlvbklkKTtcbiAgICBjb25zdCBsYXRlbmN5ID0gRGF0ZS5ub3coKSAtIHF1ZXN0aW9uU3RhcnRUaW1lO1xuXG4gICAgaWYgKGV4aXN0aW5nUmVzcG9uc2VJbmRleCA+PSAwKSB7XG4gICAgICBjb25zdCB1cGRhdGVkUmVzcG9uc2VzID0gWy4uLnJlc3BvbnNlc107XG4gICAgICBpZiAodHlwZSA9PT0gJ2Nob2ljZScpIHtcbiAgICAgICAgdXBkYXRlZFJlc3BvbnNlc1tleGlzdGluZ1Jlc3BvbnNlSW5kZXhdID0ge1xuICAgICAgICAgIC4uLnVwZGF0ZWRSZXNwb25zZXNbZXhpc3RpbmdSZXNwb25zZUluZGV4XSxcbiAgICAgICAgICBzZWxlY3RlZF9jaG9pY2VfaW5kZXg6IHZhbHVlLFxuICAgICAgICAgIGxhdGVuY3lfbXM6IGxhdGVuY3ksXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cGRhdGVkUmVzcG9uc2VzW2V4aXN0aW5nUmVzcG9uc2VJbmRleF0gPSB7XG4gICAgICAgICAgLi4udXBkYXRlZFJlc3BvbnNlc1tleGlzdGluZ1Jlc3BvbnNlSW5kZXhdLFxuICAgICAgICAgIGFuc3dlcl90ZXh0OiB2YWx1ZSxcbiAgICAgICAgICBsYXRlbmN5X21zOiBsYXRlbmN5LFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgc2V0UmVzcG9uc2VzKHVwZGF0ZWRSZXNwb25zZXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBuZXdSZXNwb25zZTogUXVlc3Rpb25SZXNwb25zZSA9IHtcbiAgICAgICAgcXVlc3Rpb25JZCxcbiAgICAgICAgY29uZmlkZW5jZTogNTAsXG4gICAgICAgIGxhdGVuY3lfbXM6IGxhdGVuY3ksXG4gICAgICAgIC4uLih0eXBlID09PSAnY2hvaWNlJyA/IHsgc2VsZWN0ZWRfY2hvaWNlX2luZGV4OiB2YWx1ZSB9IDogeyBhbnN3ZXJfdGV4dDogdmFsdWUgfSksXG4gICAgICB9O1xuICAgICAgc2V0UmVzcG9uc2VzKFsuLi5yZXNwb25zZXMsIG5ld1Jlc3BvbnNlXSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUNvbmZpZGVuY2VDaGFuZ2UgPSAocXVlc3Rpb25JZDogc3RyaW5nLCBjb25maWRlbmNlOiBudW1iZXJbXSkgPT4ge1xuICAgIGNvbnN0IGV4aXN0aW5nUmVzcG9uc2VJbmRleCA9IHJlc3BvbnNlcy5maW5kSW5kZXgociA9PiByLnF1ZXN0aW9uSWQgPT09IHF1ZXN0aW9uSWQpO1xuICAgIFxuICAgIGlmIChleGlzdGluZ1Jlc3BvbnNlSW5kZXggPj0gMCkge1xuICAgICAgY29uc3QgdXBkYXRlZFJlc3BvbnNlcyA9IFsuLi5yZXNwb25zZXNdO1xuICAgICAgdXBkYXRlZFJlc3BvbnNlc1tleGlzdGluZ1Jlc3BvbnNlSW5kZXhdLmNvbmZpZGVuY2UgPSBjb25maWRlbmNlWzBdO1xuICAgICAgc2V0UmVzcG9uc2VzKHVwZGF0ZWRSZXNwb25zZXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBuZXdSZXNwb25zZTogUXVlc3Rpb25SZXNwb25zZSA9IHtcbiAgICAgICAgcXVlc3Rpb25JZCxcbiAgICAgICAgY29uZmlkZW5jZTogY29uZmlkZW5jZVswXSxcbiAgICAgICAgbGF0ZW5jeV9tczogRGF0ZS5ub3coKSAtIHF1ZXN0aW9uU3RhcnRUaW1lLFxuICAgICAgfTtcbiAgICAgIHNldFJlc3BvbnNlcyhbLi4ucmVzcG9uc2VzLCBuZXdSZXNwb25zZV0pO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVOZXh0ID0gKCkgPT4ge1xuICAgIGlmIChjdXJyZW50UXVlc3Rpb25JbmRleCA8IChzZXNzaW9uPy5xdWVzdGlvbnMubGVuZ3RoIHx8IDApIC0gMSkge1xuICAgICAgc2V0Q3VycmVudFF1ZXN0aW9uSW5kZXgoY3VycmVudFF1ZXN0aW9uSW5kZXggKyAxKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlUHJldmlvdXMgPSAoKSA9PiB7XG4gICAgaWYgKGN1cnJlbnRRdWVzdGlvbkluZGV4ID4gMCkge1xuICAgICAgc2V0Q3VycmVudFF1ZXN0aW9uSW5kZXgoY3VycmVudFF1ZXN0aW9uSW5kZXggLSAxKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlU3VibWl0ID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBzZXRJc1N1Ym1pdHRpbmcodHJ1ZSk7XG4gICAgICBcbiAgICAgIC8vIFN1Ym1pdCBhbGwgcmVzcG9uc2VzXG4gICAgICBjb25zdCBwYXlsb2FkID0ge1xuICAgICAgICBzZXNzaW9uX2lkOiBzZXNzaW9uSWQsXG4gICAgICAgIHJlc3BvbnNlczogcmVzcG9uc2VzLm1hcChyID0+ICh7XG4gICAgICAgICAgcXVlc3Rpb25faWQ6IHIucXVlc3Rpb25JZCxcbiAgICAgICAgICBhbnN3ZXJfdGV4dDogci5hbnN3ZXJfdGV4dCxcbiAgICAgICAgICBzZWxlY3RlZF9jaG9pY2VfaW5kZXg6IHIuc2VsZWN0ZWRfY2hvaWNlX2luZGV4LFxuICAgICAgICAgIGNvbmZpZGVuY2U6IHIuY29uZmlkZW5jZSxcbiAgICAgICAgICBsYXRlbmN5X21zOiByLmxhdGVuY3lfbXMsXG4gICAgICAgIH0pKSxcbiAgICAgIH07XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zQXBpLnBvc3QoYGRpYWdub3N0aWMtcmVzcG9uc2VzL2AsIHBheWxvYWQpO1xuICAgICAgc2V0UmVzdWx0cyhyZXNwb25zZS5kYXRhKTtcbiAgICAgIHNldFNob3dSZXN1bHRzKHRydWUpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc3VibWl0IHJlc3BvbnNlczonLCBlcnJvcik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldElzU3VibWl0dGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGZvcm1hdFRpbWUgPSAoc2Vjb25kczogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgbWlucyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAvIDYwKTtcbiAgICBjb25zdCBzZWNzID0gc2Vjb25kcyAlIDYwO1xuICAgIHJldHVybiBgJHttaW5zfToke3NlY3MudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWA7XG4gIH07XG5cbiAgY29uc3QgZ2V0Q3VycmVudFJlc3BvbnNlID0gKHF1ZXN0aW9uSWQ6IHN0cmluZykgPT4ge1xuICAgIHJldHVybiByZXNwb25zZXMuZmluZChyID0+IHIucXVlc3Rpb25JZCA9PT0gcXVlc3Rpb25JZCk7XG4gIH07XG5cbiAgY29uc3QgZ2V0UHJvZ3Jlc3NQZXJjZW50YWdlID0gKCkgPT4ge1xuICAgIGlmICghc2Vzc2lvbikgcmV0dXJuIDA7XG4gICAgcmV0dXJuICgoY3VycmVudFF1ZXN0aW9uSW5kZXggKyAxKSAvIHNlc3Npb24ucXVlc3Rpb25zLmxlbmd0aCkgKiAxMDA7XG4gIH07XG5cbiAgaWYgKGlzTG9hZGluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIG1pbi1oLVs0MDBweF1cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgIDxUYXJnZXQgY2xhc3NOYW1lPVwibXgtYXV0byBoLTEyIHctMTIgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGFuaW1hdGUtcHVsc2VcIiAvPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTQgdGV4dC1sZ1wiPkxvYWRpbmcgZGlhZ25vc3RpYyBzZXNzaW9uLi4uPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICBpZiAoIXNlc3Npb24pIHtcbiAgICByZXR1cm4gKFxuICAgICAgPEFsZXJ0PlxuICAgICAgICA8QWxlcnRUcmlhbmdsZSBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgPEFsZXJ0RGVzY3JpcHRpb24+RmFpbGVkIHRvIGxvYWQgZGlhZ25vc3RpYyBzZXNzaW9uPC9BbGVydERlc2NyaXB0aW9uPlxuICAgICAgPC9BbGVydD5cbiAgICApO1xuICB9XG5cbiAgaWYgKHNob3dSZXN1bHRzICYmIHJlc3VsdHMpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy00eGwgbXgtYXV0byBzcGFjZS15LTZcIj5cbiAgICAgICAgPENhcmQ+XG4gICAgICAgICAgPENhcmRIZWFkZXIgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgIDxDYXJkVGl0bGUgY2xhc3NOYW1lPVwidGV4dC0yeGxcIj5EaWFnbm9zdGljIENvbXBsZXRlITwvQ2FyZFRpdGxlPlxuICAgICAgICAgICAgPENhcmREZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgWW91J3ZlIGNvbXBsZXRlZCB0aGUgZGlhZ25vc3RpYyBmb3IgXCJ7c2Vzc2lvbi50b3BpY31cIlxuICAgICAgICAgICAgPC9DYXJkRGVzY3JpcHRpb24+XG4gICAgICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9XCJzcGFjZS15LTZcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMyBnYXAtNCB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtNCBiZy1tdXRlZCByb3VuZGVkLWxnXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgdGV4dC1wcmltYXJ5XCI+XG4gICAgICAgICAgICAgICAgICB7TWF0aC5yb3VuZChyZXN1bHRzLmF2ZXJhZ2Vfc2NvcmUgKiAxMDApfSVcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+QXZlcmFnZSBTY29yZTwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTQgYmctbXV0ZWQgcm91bmRlZC1sZ1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkIHRleHQtcHJpbWFyeVwiPlxuICAgICAgICAgICAgICAgICAge3Jlc3VsdHMudG90YWxfcXVlc3Rpb25zfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj5RdWVzdGlvbnMgQW5zd2VyZWQ8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC00IGJnLW11dGVkIHJvdW5kZWQtbGdcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LXByaW1hcnlcIj5cbiAgICAgICAgICAgICAgICAgIHtNYXRoLnJvdW5kKHJlc3VsdHMubWVkaWFuX2NvbmZpZGVuY2UpfSVcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+TWVkaWFuIENvbmZpZGVuY2U8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAge3Nlc3Npb24uZGVsaXZlcnlfbW9kZSA9PT0gJ0lNTUVESUFURV9GRUVEQkFDSycgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGRcIj5RdWVzdGlvbiBSZXZpZXc8L2gzPlxuICAgICAgICAgICAgICAgIHtzZXNzaW9uLnF1ZXN0aW9ucy5tYXAoKHF1ZXN0aW9uLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRDdXJyZW50UmVzcG9uc2UocXVlc3Rpb24uaWQpO1xuICAgICAgICAgICAgICAgICAgY29uc3QgaXNDb3JyZWN0ID0gcmVzcG9uc2UgJiYgKFxuICAgICAgICAgICAgICAgICAgICBxdWVzdGlvbi50eXBlID09PSAnTUNRJyBcbiAgICAgICAgICAgICAgICAgICAgICA/IHJlc3BvbnNlLnNlbGVjdGVkX2Nob2ljZV9pbmRleCA9PT0gcXVlc3Rpb24uY29ycmVjdF9jaG9pY2VfaW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICA6IHJlc3BvbnNlLmFuc3dlcl90ZXh0ICYmIHF1ZXN0aW9uLmFjY2VwdGFibGVfYW5zd2Vycz8uc29tZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0dGVybiA9PiBuZXcgUmVnRXhwKHBhdHRlcm4sICdpJykudGVzdChyZXNwb25zZS5hbnN3ZXJfdGV4dCB8fCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxDYXJkIGtleT17cXVlc3Rpb24uaWR9IGNsYXNzTmFtZT1cImJvcmRlci1sLTQgYm9yZGVyLWwtcHJpbWFyeVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxDYXJkQ29udGVudCBjbGFzc05hbWU9XCJwdC02XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtc3RhcnQgc3BhY2UteC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC1zaHJpbmstMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtpc0NvcnJlY3QgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2hlY2tDaXJjbGUgY2xhc3NOYW1lPVwiaC02IHctNiB0ZXh0LWdyZWVuLTYwMFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxYQ2lyY2xlIGNsYXNzTmFtZT1cImgtNiB3LTYgdGV4dC1yZWQtNjAwXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTEgc3BhY2UteS0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCYWRnZSB2YXJpYW50PVwib3V0bGluZVwiPntxdWVzdGlvbi50eXBlfTwvQmFkZ2U+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD1cIm91dGxpbmVcIj57cXVlc3Rpb24uYmxvb21fbGV2ZWx9PC9CYWRnZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFF1ZXN0aW9uIHtpbmRleCArIDF9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiZm9udC1tZWRpdW1cIj57cXVlc3Rpb24udGV4dH08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3F1ZXN0aW9uLnR5cGUgPT09ICdNQ1EnICYmIHF1ZXN0aW9uLmNob2ljZXMgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3F1ZXN0aW9uLmNob2ljZXMubWFwKChjaG9pY2UsIGNob2ljZUluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtjaG9pY2VJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHAtMiByb3VuZGVkIGJvcmRlciAke1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaG9pY2VJbmRleCA9PT0gcXVlc3Rpb24uY29ycmVjdF9jaG9pY2VfaW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdib3JkZXItZ3JlZW4tNTAwIGJnLWdyZWVuLTUwJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogY2hvaWNlSW5kZXggPT09IHJlc3BvbnNlPy5zZWxlY3RlZF9jaG9pY2VfaW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdib3JkZXItcmVkLTUwMCBiZy1yZWQtNTAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnYm9yZGVyLWdyYXktMjAwJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZm9udC1tZWRpdW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1N0cmluZy5mcm9tQ2hhckNvZGUoNjUgKyBjaG9pY2VJbmRleCl9LlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPnsnICd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y2hvaWNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2Nob2ljZUluZGV4ID09PSBxdWVzdGlvbi5jb3JyZWN0X2Nob2ljZV9pbmRleCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDaGVja0NpcmNsZSBjbGFzc05hbWU9XCJpbmxpbmUgaC00IHctNCB0ZXh0LWdyZWVuLTYwMCBtbC0yXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y2hvaWNlSW5kZXggPT09IHJlc3BvbnNlPy5zZWxlY3RlZF9jaG9pY2VfaW5kZXggJiYgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hvaWNlSW5kZXggIT09IHF1ZXN0aW9uLmNvcnJlY3RfY2hvaWNlX2luZGV4ICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFhDaXJjbGUgY2xhc3NOYW1lPVwiaW5saW5lIGgtNCB3LTQgdGV4dC1yZWQtNjAwIG1sLTJcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3Jlc3BvbnNlPy5hbnN3ZXJfdGV4dCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMyBiZy1tdXRlZCByb3VuZGVkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBZb3VyIGFuc3dlcjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtMVwiPntyZXNwb25zZS5hbnN3ZXJfdGV4dH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMyBiZy1ibHVlLTUwIHJvdW5kZWQgYm9yZGVyIGJvcmRlci1ibHVlLTIwMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtYmx1ZS04MDBcIj5FeHBsYW5hdGlvbjo8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtMSB0ZXh0LWJsdWUtNzAwXCI+e3F1ZXN0aW9uLmV4cGxhbmF0aW9ufTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPllvdXIgY29uZmlkZW5jZToge3Jlc3BvbnNlPy5jb25maWRlbmNlfSU8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5SZXNwb25zZSB0aW1lOiB7TWF0aC5yb3VuZCgocmVzcG9uc2U/LmxhdGVuY3lfbXMgfHwgMCkgLyAxMDAwKX1zPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9eygpID0+IHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9kYXNoYm9hcmQnfT5cbiAgICAgICAgICAgICAgICBSZXR1cm4gdG8gRGFzaGJvYXJkXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgICAgPC9DYXJkPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IGN1cnJlbnRRdWVzdGlvbiA9IHNlc3Npb24ucXVlc3Rpb25zW2N1cnJlbnRRdWVzdGlvbkluZGV4XTtcbiAgY29uc3QgY3VycmVudFJlc3BvbnNlID0gZ2V0Q3VycmVudFJlc3BvbnNlKGN1cnJlbnRRdWVzdGlvbi5pZCk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heC13LTR4bCBteC1hdXRvIHNwYWNlLXktNlwiPlxuICAgICAgey8qIEhlYWRlciAqL31cbiAgICAgIDxDYXJkPlxuICAgICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPENhcmRUaXRsZSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bFwiPntzZXNzaW9uLnRvcGljfTwvQ2FyZFRpdGxlPlxuICAgICAgICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPlxuICAgICAgICAgICAgICAgIFByZS1sZWN0dXJlIGRpYWdub3N0aWMg4oCiIHtzZXNzaW9uLm1heF9xdWVzdGlvbnN9IHF1ZXN0aW9uc1xuICAgICAgICAgICAgICA8L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge3RpbWVSZW1haW5pbmcgIT09IG51bGwgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiB0ZXh0LWxnIGZvbnQtbW9ub1wiPlxuICAgICAgICAgICAgICAgIDxDbG9jayBjbGFzc05hbWU9XCJoLTUgdy01IHRleHQtb3JhbmdlLTUwMFwiIC8+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXt0aW1lUmVtYWluaW5nIDwgNjAgPyAndGV4dC1yZWQtNjAwJyA6ICcnfT5cbiAgICAgICAgICAgICAgICAgIHtmb3JtYXRUaW1lKHRpbWVSZW1haW5pbmcpfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0NhcmRIZWFkZXI+XG4gICAgICAgIDxDYXJkQ29udGVudD5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktMlwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gdGV4dC1zbVwiPlxuICAgICAgICAgICAgICA8c3Bhbj5Qcm9ncmVzczwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4+e2N1cnJlbnRRdWVzdGlvbkluZGV4ICsgMX0gb2Yge3Nlc3Npb24ucXVlc3Rpb25zLmxlbmd0aH08L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxQcm9ncmVzcyB2YWx1ZT17Z2V0UHJvZ3Jlc3NQZXJjZW50YWdlKCl9IGNsYXNzTmFtZT1cImgtMlwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICA8L0NhcmQ+XG5cbiAgICAgIHsvKiBRdWVzdGlvbiAqL31cbiAgICAgIDxDYXJkPlxuICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicHQtNlwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS02XCI+XG4gICAgICAgICAgICB7LyogUXVlc3Rpb24gSGVhZGVyICovfVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTNcIj5cbiAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9XCJvdXRsaW5lXCI+e2N1cnJlbnRRdWVzdGlvbi50eXBlfTwvQmFkZ2U+XG4gICAgICAgICAgICAgIDxCYWRnZSB2YXJpYW50PVwib3V0bGluZVwiPntjdXJyZW50UXVlc3Rpb24uYmxvb21fbGV2ZWx9PC9CYWRnZT5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj5cbiAgICAgICAgICAgICAgICBRdWVzdGlvbiB7Y3VycmVudFF1ZXN0aW9uSW5kZXggKyAxfSBvZiB7c2Vzc2lvbi5xdWVzdGlvbnMubGVuZ3RofVxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgey8qIFF1ZXN0aW9uIFRleHQgKi99XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1tZWRpdW0gbGVhZGluZy1yZWxheGVkXCI+XG4gICAgICAgICAgICAgIHtjdXJyZW50UXVlc3Rpb24udGV4dH1cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICB7LyogUXVlc3Rpb24gQ29udGVudCAqL31cbiAgICAgICAgICAgIHtjdXJyZW50UXVlc3Rpb24udHlwZSA9PT0gJ01DUScgJiYgY3VycmVudFF1ZXN0aW9uLmNob2ljZXMgJiYgKFxuICAgICAgICAgICAgICA8UmFkaW9Hcm91cFxuICAgICAgICAgICAgICAgIHZhbHVlPXtjdXJyZW50UmVzcG9uc2U/LnNlbGVjdGVkX2Nob2ljZV9pbmRleD8udG9TdHJpbmcoKSB8fCAnJ31cbiAgICAgICAgICAgICAgICBvblZhbHVlQ2hhbmdlPXsodmFsdWUpID0+IFxuICAgICAgICAgICAgICAgICAgaGFuZGxlQW5zd2VyQ2hhbmdlKGN1cnJlbnRRdWVzdGlvbi5pZCwgcGFyc2VJbnQodmFsdWUpLCAnY2hvaWNlJylcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic3BhY2UteS0zXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtjdXJyZW50UXVlc3Rpb24uY2hvaWNlcy5tYXAoKGNob2ljZSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpbmRleH0gY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zXCI+XG4gICAgICAgICAgICAgICAgICAgIDxSYWRpb0dyb3VwSXRlbSB2YWx1ZT17aW5kZXgudG9TdHJpbmcoKX0gaWQ9e2BjaG9pY2UtJHtpbmRleH1gfSAvPlxuICAgICAgICAgICAgICAgICAgICA8TGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICBodG1sRm9yPXtgY2hvaWNlLSR7aW5kZXh9YH1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmbGV4LTEgcC0zIGJvcmRlciByb3VuZGVkLWxnIGN1cnNvci1wb2ludGVyIGhvdmVyOmJnLW11dGVkLzUwIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtIG1yLTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtTdHJpbmcuZnJvbUNoYXJDb2RlKDY1ICsgaW5kZXgpfS5cbiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge2Nob2ljZX1cbiAgICAgICAgICAgICAgICAgICAgPC9MYWJlbD5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L1JhZGlvR3JvdXA+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICB7KGN1cnJlbnRRdWVzdGlvbi50eXBlID09PSAnU0hPUlRfQU5TV0VSJyB8fCBjdXJyZW50UXVlc3Rpb24udHlwZSA9PT0gJ1BSSU5DSVBMRScpICYmIChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTNcIj5cbiAgICAgICAgICAgICAgICA8TGFiZWwgaHRtbEZvcj1cImFuc3dlclwiPllvdXIgQW5zd2VyPC9MYWJlbD5cbiAgICAgICAgICAgICAgICA8VGV4dGFyZWFcbiAgICAgICAgICAgICAgICAgIGlkPVwiYW5zd2VyXCJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiVHlwZSB5b3VyIGFuc3dlciBoZXJlLi4uXCJcbiAgICAgICAgICAgICAgICAgIHZhbHVlPXtjdXJyZW50UmVzcG9uc2U/LmFuc3dlcl90ZXh0IHx8ICcnfVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBoYW5kbGVBbnN3ZXJDaGFuZ2UoY3VycmVudFF1ZXN0aW9uLmlkLCBlLnRhcmdldC52YWx1ZSwgJ3RleHQnKX1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1pbi1oLVsxMjBweF0gcmVzaXplLW5vbmVcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgey8qIENvbmZpZGVuY2UgU2xpZGVyICovfVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgICA8TGFiZWw+SG93IGNvbmZpZGVudCBhcmUgeW91IGluIHlvdXIgYW5zd2VyPzwvTGFiZWw+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1zbSBmb250LW1lZGl1bVwiPlxuICAgICAgICAgICAgICAgICAge2N1cnJlbnRSZXNwb25zZT8uY29uZmlkZW5jZSB8fCA1MH0lXG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPFNsaWRlclxuICAgICAgICAgICAgICAgIHZhbHVlPXtbY3VycmVudFJlc3BvbnNlPy5jb25maWRlbmNlIHx8IDUwXX1cbiAgICAgICAgICAgICAgICBvblZhbHVlQ2hhbmdlPXsodmFsdWUpID0+IGhhbmRsZUNvbmZpZGVuY2VDaGFuZ2UoY3VycmVudFF1ZXN0aW9uLmlkLCB2YWx1ZSl9XG4gICAgICAgICAgICAgICAgbWF4PXsxMDB9XG4gICAgICAgICAgICAgICAgc3RlcD17NX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGxcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIHRleHQteHMgdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4+Tm90IGNvbmZpZGVudDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3Bhbj5WZXJ5IGNvbmZpZGVudDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgIDwvQ2FyZD5cblxuICAgICAgey8qIE5hdmlnYXRpb24gKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIlxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVByZXZpb3VzfVxuICAgICAgICAgIGRpc2FibGVkPXtjdXJyZW50UXVlc3Rpb25JbmRleCA9PT0gMH1cbiAgICAgICAgPlxuICAgICAgICAgIFByZXZpb3VzXG4gICAgICAgIDwvQnV0dG9uPlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yXCI+XG4gICAgICAgICAge2N1cnJlbnRRdWVzdGlvbkluZGV4ID09PSBzZXNzaW9uLnF1ZXN0aW9ucy5sZW5ndGggLSAxID8gKFxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVTdWJtaXR9XG4gICAgICAgICAgICAgIGRpc2FibGVkPXtpc1N1Ym1pdHRpbmcgfHwgcmVzcG9uc2VzLmxlbmd0aCA8IHNlc3Npb24ucXVlc3Rpb25zLmxlbmd0aH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctZ3JlZW4tNjAwIGhvdmVyOmJnLWdyZWVuLTcwMFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtpc1N1Ym1pdHRpbmcgPyAnU3VibWl0dGluZy4uLicgOiAnU3VibWl0IERpYWdub3N0aWMnfVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxCdXR0b24gb25DbGljaz17aGFuZGxlTmV4dH0+XG4gICAgICAgICAgICAgIE5leHQgUXVlc3Rpb25cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBQcm9ncmVzcyBJbmRpY2F0b3IgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyIHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgIHtyZXNwb25zZXMubGVuZ3RofSBvZiB7c2Vzc2lvbi5xdWVzdGlvbnMubGVuZ3RofSBxdWVzdGlvbnMgYW5zd2VyZWRcbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbIkRpYWdub3N0aWNTZXNzaW9uIiwic2Vzc2lvbklkIiwic2Vzc2lvbiIsInNldFNlc3Npb24iLCJ1c2VTdGF0ZSIsImN1cnJlbnRRdWVzdGlvbkluZGV4Iiwic2V0Q3VycmVudFF1ZXN0aW9uSW5kZXgiLCJyZXNwb25zZXMiLCJzZXRSZXNwb25zZXMiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJpc1N1Ym1pdHRpbmciLCJzZXRJc1N1Ym1pdHRpbmciLCJ0aW1lUmVtYWluaW5nIiwic2V0VGltZVJlbWFpbmluZyIsInNob3dSZXN1bHRzIiwic2V0U2hvd1Jlc3VsdHMiLCJyZXN1bHRzIiwic2V0UmVzdWx0cyIsInF1ZXN0aW9uU3RhcnRUaW1lIiwic2V0UXVlc3Rpb25TdGFydFRpbWUiLCJEYXRlIiwibm93IiwidXNlRWZmZWN0IiwiZmV0Y2hTZXNzaW9uIiwidGltZV9saW1pdF9zZWMiLCJ0aW1lciIsInNldEludGVydmFsIiwicHJldiIsImNsZWFySW50ZXJ2YWwiLCJoYW5kbGVTdWJtaXQiLCJyZXNwb25zZSIsImF4aW9zQXBpIiwiZ2V0IiwiZGF0YSIsImVycm9yIiwiY29uc29sZSIsImhhbmRsZUFuc3dlckNoYW5nZSIsInF1ZXN0aW9uSWQiLCJ2YWx1ZSIsInR5cGUiLCJleGlzdGluZ1Jlc3BvbnNlSW5kZXgiLCJmaW5kSW5kZXgiLCJyIiwibGF0ZW5jeSIsInVwZGF0ZWRSZXNwb25zZXMiLCJzZWxlY3RlZF9jaG9pY2VfaW5kZXgiLCJsYXRlbmN5X21zIiwiYW5zd2VyX3RleHQiLCJuZXdSZXNwb25zZSIsImNvbmZpZGVuY2UiLCJoYW5kbGVDb25maWRlbmNlQ2hhbmdlIiwiaGFuZGxlTmV4dCIsInF1ZXN0aW9ucyIsImxlbmd0aCIsImhhbmRsZVByZXZpb3VzIiwicGF5bG9hZCIsInNlc3Npb25faWQiLCJtYXAiLCJxdWVzdGlvbl9pZCIsInBvc3QiLCJmb3JtYXRUaW1lIiwic2Vjb25kcyIsIm1pbnMiLCJNYXRoIiwiZmxvb3IiLCJzZWNzIiwidG9TdHJpbmciLCJwYWRTdGFydCIsImdldEN1cnJlbnRSZXNwb25zZSIsImZpbmQiLCJnZXRQcm9ncmVzc1BlcmNlbnRhZ2UiLCJkaXYiLCJjbGFzc05hbWUiLCJUYXJnZXQiLCJwIiwiQWxlcnQiLCJBbGVydFRyaWFuZ2xlIiwiQWxlcnREZXNjcmlwdGlvbiIsIkNhcmQiLCJDYXJkSGVhZGVyIiwiQ2FyZFRpdGxlIiwiQ2FyZERlc2NyaXB0aW9uIiwidG9waWMiLCJDYXJkQ29udGVudCIsInJvdW5kIiwiYXZlcmFnZV9zY29yZSIsInRvdGFsX3F1ZXN0aW9ucyIsIm1lZGlhbl9jb25maWRlbmNlIiwiZGVsaXZlcnlfbW9kZSIsImgzIiwicXVlc3Rpb24iLCJpbmRleCIsImlkIiwiaXNDb3JyZWN0IiwiY29ycmVjdF9jaG9pY2VfaW5kZXgiLCJhY2NlcHRhYmxlX2Fuc3dlcnMiLCJzb21lIiwicGF0dGVybiIsIlJlZ0V4cCIsInRlc3QiLCJDaGVja0NpcmNsZSIsIlhDaXJjbGUiLCJCYWRnZSIsInZhcmlhbnQiLCJibG9vbV9sZXZlbCIsInNwYW4iLCJ0ZXh0IiwiY2hvaWNlcyIsImNob2ljZSIsImNob2ljZUluZGV4IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiZXhwbGFuYXRpb24iLCJCdXR0b24iLCJvbkNsaWNrIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwiY3VycmVudFF1ZXN0aW9uIiwiY3VycmVudFJlc3BvbnNlIiwibWF4X3F1ZXN0aW9ucyIsIkNsb2NrIiwiUHJvZ3Jlc3MiLCJSYWRpb0dyb3VwIiwib25WYWx1ZUNoYW5nZSIsInBhcnNlSW50IiwiUmFkaW9Hcm91cEl0ZW0iLCJMYWJlbCIsImh0bWxGb3IiLCJUZXh0YXJlYSIsInBsYWNlaG9sZGVyIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwiU2xpZGVyIiwibWF4Iiwic3RlcCIsImRpc2FibGVkIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7K0JBNENBOzs7ZUFBd0JBOzs7OytEQTFDbUI7MEJBQ2xCO3NCQUNpRDt3QkFDbkQ7dUJBQ0Q7MEJBQ0c7NEJBQ2tCO3VCQUNyQjswQkFDRzt3QkFDRjt1QkFDaUI7NkJBQ2tDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQjNELFNBQVNBLGtCQUFrQixFQUFFQyxTQUFTLEVBQXlCO0lBQzVFLE1BQU0sQ0FBQ0MsU0FBU0MsV0FBVyxHQUFHQyxJQUFBQSxlQUFRLEVBQTJCO0lBQ2pFLE1BQU0sQ0FBQ0Msc0JBQXNCQyx3QkFBd0IsR0FBR0YsSUFBQUEsZUFBUSxFQUFDO0lBQ2pFLE1BQU0sQ0FBQ0csV0FBV0MsYUFBYSxHQUFHSixJQUFBQSxlQUFRLEVBQXFCLEVBQUU7SUFDakUsTUFBTSxDQUFDSyxXQUFXQyxhQUFhLEdBQUdOLElBQUFBLGVBQVEsRUFBQztJQUMzQyxNQUFNLENBQUNPLGNBQWNDLGdCQUFnQixHQUFHUixJQUFBQSxlQUFRLEVBQUM7SUFDakQsTUFBTSxDQUFDUyxlQUFlQyxpQkFBaUIsR0FBR1YsSUFBQUEsZUFBUSxFQUFnQjtJQUNsRSxNQUFNLENBQUNXLGFBQWFDLGVBQWUsR0FBR1osSUFBQUEsZUFBUSxFQUFDO0lBQy9DLE1BQU0sQ0FBQ2EsU0FBU0MsV0FBVyxHQUFHZCxJQUFBQSxlQUFRLEVBQU07SUFDNUMsTUFBTSxDQUFDZSxtQkFBbUJDLHFCQUFxQixHQUFHaEIsSUFBQUEsZUFBUSxFQUFTaUIsS0FBS0MsR0FBRztJQUUzRUMsSUFBQUEsZ0JBQVMsRUFBQztRQUNSQztJQUNGLEdBQUc7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