5d5b16896a5446e755238ab993261937
// Centralized file utilities
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    formatDate: function() {
        return formatDate;
    },
    formatFileSize: function() {
        return formatFileSize;
    },
    generateFileColors: function() {
        return generateFileColors;
    },
    getFileCategory: function() {
        return getFileCategory;
    },
    getFileIcon: function() {
        return getFileIcon;
    },
    getFileTypeColor: function() {
        return getFileTypeColor;
    },
    getFileTypeLabel: function() {
        return getFileTypeLabel;
    },
    isFileTypeSupported: function() {
        return isFileTypeSupported;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _lucidereact = require("lucide-react");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// File type configurations
const FILE_TYPE_CONFIG = {
    pdf: {
        icon: _lucidereact.FileText,
        color: 'red',
        label: 'PDF'
    },
    docx: {
        icon: _lucidereact.FileText,
        color: 'blue',
        label: 'DOCX'
    },
    pptx: {
        icon: _lucidereact.FileText,
        color: 'orange',
        label: 'PPTX'
    },
    txt: {
        icon: _lucidereact.FileText,
        color: 'slate',
        label: 'TXT'
    },
    md: {
        icon: _lucidereact.FileCode,
        color: 'purple',
        label: 'MD'
    },
    png: {
        icon: _lucidereact.Image,
        color: 'green',
        label: 'PNG'
    },
    jpg: {
        icon: _lucidereact.Image,
        color: 'green',
        label: 'JPG'
    },
    jpeg: {
        icon: _lucidereact.Image,
        color: 'green',
        label: 'JPEG'
    },
    csv: {
        icon: _lucidereact.FileSpreadsheet,
        color: 'emerald',
        label: 'CSV'
    },
    zip: {
        icon: _lucidereact.Archive,
        color: 'yellow',
        label: 'ZIP'
    },
    mp4: {
        icon: _lucidereact.FileVideo,
        color: 'indigo',
        label: 'MP4'
    },
    mp3: {
        icon: _lucidereact.FileAudio,
        color: 'purple',
        label: 'MP3'
    },
    wav: {
        icon: _lucidereact.FileAudio,
        color: 'purple',
        label: 'WAV'
    }
};
// Design tokens
const ICON_SIZES = {
    sm: 'h-4 w-4',
    md: 'h-5 w-5',
    lg: 'h-6 w-6'
};
const COLOR_SCHEMES = [
    {
        color: 'from-red-400 to-pink-500',
        bgColor: 'bg-gradient-to-br from-red-50 to-pink-50',
        borderColor: 'border-red-200'
    },
    {
        color: 'from-blue-400 to-cyan-500',
        bgColor: 'bg-gradient-to-br from-blue-50 to-cyan-50',
        borderColor: 'border-blue-200'
    },
    {
        color: 'from-green-400 to-emerald-500',
        bgColor: 'bg-gradient-to-br from-green-50 to-emerald-50',
        borderColor: 'border-green-200'
    },
    {
        color: 'from-purple-400 to-violet-500',
        bgColor: 'bg-gradient-to-br from-purple-50 to-violet-50',
        borderColor: 'border-purple-200'
    },
    {
        color: 'from-orange-400 to-amber-500',
        bgColor: 'bg-gradient-to-br from-orange-50 to-amber-50',
        borderColor: 'border-orange-200'
    },
    {
        color: 'from-indigo-400 to-blue-500',
        bgColor: 'bg-gradient-to-br from-indigo-50 to-blue-50',
        borderColor: 'border-indigo-200'
    },
    {
        color: 'from-pink-400 to-rose-500',
        bgColor: 'bg-gradient-to-br from-pink-50 to-rose-50',
        borderColor: 'border-pink-200'
    },
    {
        color: 'from-teal-400 to-cyan-500',
        bgColor: 'bg-gradient-to-br from-teal-50 to-cyan-50',
        borderColor: 'border-teal-200'
    }
];
const getFileIcon = (type, size = 'md')=>{
    const config = FILE_TYPE_CONFIG[type] || FILE_TYPE_CONFIG.txt;
    const IconComponent = config.icon;
    const sizeClass = ICON_SIZES[size];
    const colorClass = `text-${config.color}-500`;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(IconComponent, {
        className: `${sizeClass} ${colorClass}`
    });
};
const getFileTypeColor = (type)=>{
    const config = FILE_TYPE_CONFIG[type] || FILE_TYPE_CONFIG.txt;
    return `bg-${config.color}-100 text-${config.color}-700 border-${config.color}-200`;
};
const getFileTypeLabel = (type)=>{
    const config = FILE_TYPE_CONFIG[type] || FILE_TYPE_CONFIG.txt;
    return config.label;
};
const formatFileSize = (bytes)=>{
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = [
        'Bytes',
        'KB',
        'MB',
        'GB',
        'TB'
    ];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
};
const formatDate = (dateString)=>{
    const date = new Date(dateString);
    const now = new Date();
    const diffInDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));
    if (diffInDays === 0) return 'Today';
    if (diffInDays === 1) return 'Yesterday';
    if (diffInDays < 7) return `${diffInDays} days ago`;
    if (diffInDays < 30) return `${Math.floor(diffInDays / 7)} weeks ago`;
    if (diffInDays < 365) return `${Math.floor(diffInDays / 30)} months ago`;
    return `${Math.floor(diffInDays / 365)} years ago`;
};
const generateFileColors = (index)=>{
    return COLOR_SCHEMES[index % COLOR_SCHEMES.length];
};
const getFileCategory = (type)=>{
    if ([
        'pdf',
        'docx',
        'pptx',
        'txt',
        'md'
    ].includes(type)) return 'documents';
    if ([
        'png',
        'jpg',
        'jpeg'
    ].includes(type)) return 'images';
    if ([
        'mp4'
    ].includes(type)) return 'videos';
    if ([
        'mp3',
        'wav'
    ].includes(type)) return 'audio';
    if ([
        'zip'
    ].includes(type)) return 'archives';
    return 'other';
};
const isFileTypeSupported = (type)=>{
    return type in FILE_TYPE_CONFIG;
};

//# sourceMappingURL=data:application/json;base64,