{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/lib/file-utils.tsx"],"sourcesContent":["// Centralized file utilities\nimport React from 'react';\nimport { \n  FileText, \n  Image, \n  Archive, \n  FileSpreadsheet,\n  FileCode,\n  FileVideo,\n  FileAudio\n} from 'lucide-react';\n\n// File type definitions\nexport type FileType = 'pdf' | 'docx' | 'pptx' | 'txt' | 'png' | 'jpg' | 'jpeg' | 'csv' | 'md' | 'zip' | 'mp4' | 'mp3' | 'wav';\n\nexport interface FileItem {\n  id: string;\n  name: string;\n  type: FileType;\n  size: number;\n  uploadedAt: string;\n  lastModified: string;\n  status: 'uploading' | 'completed' | 'error' | 'processing';\n  progress?: number;\n  error?: string;\n  isFavorite?: boolean;\n  tags?: string[];\n  visibility: 'private' | 'shared' | 'public';\n  versionCount?: number;\n  sharedWith?: string[];\n  permissions?: string[];\n  color: string;\n  bgColor: string;\n  borderColor: string;\n}\n\nexport interface StorageStats {\n  totalUsed: number;\n  totalAvailable: number;\n  breakdown: {\n    documents: { count: number; size: number };\n    images: { count: number; size: number };\n    videos: { count: number; size: number };\n    audio: { count: number; size: number };\n    archives: { count: number; size: number };\n  };\n}\n\n// File type configurations\nconst FILE_TYPE_CONFIG = {\n  pdf: { icon: FileText, color: 'red', label: 'PDF' },\n  docx: { icon: FileText, color: 'blue', label: 'DOCX' },\n  pptx: { icon: FileText, color: 'orange', label: 'PPTX' },\n  txt: { icon: FileText, color: 'slate', label: 'TXT' },\n  md: { icon: FileCode, color: 'purple', label: 'MD' },\n  png: { icon: Image, color: 'green', label: 'PNG' },\n  jpg: { icon: Image, color: 'green', label: 'JPG' },\n  jpeg: { icon: Image, color: 'green', label: 'JPEG' },\n  csv: { icon: FileSpreadsheet, color: 'emerald', label: 'CSV' },\n  zip: { icon: Archive, color: 'yellow', label: 'ZIP' },\n  mp4: { icon: FileVideo, color: 'indigo', label: 'MP4' },\n  mp3: { icon: FileAudio, color: 'purple', label: 'MP3' },\n  wav: { icon: FileAudio, color: 'purple', label: 'WAV' },\n} as const;\n\n// Design tokens\nconst ICON_SIZES = {\n  sm: 'h-4 w-4',\n  md: 'h-5 w-5',\n  lg: 'h-6 w-6',\n} as const;\n\nconst COLOR_SCHEMES = [\n  { color: 'from-red-400 to-pink-500', bgColor: 'bg-gradient-to-br from-red-50 to-pink-50', borderColor: 'border-red-200' },\n  { color: 'from-blue-400 to-cyan-500', bgColor: 'bg-gradient-to-br from-blue-50 to-cyan-50', borderColor: 'border-blue-200' },\n  { color: 'from-green-400 to-emerald-500', bgColor: 'bg-gradient-to-br from-green-50 to-emerald-50', borderColor: 'border-green-200' },\n  { color: 'from-purple-400 to-violet-500', bgColor: 'bg-gradient-to-br from-purple-50 to-violet-50', borderColor: 'border-purple-200' },\n  { color: 'from-orange-400 to-amber-500', bgColor: 'bg-gradient-to-br from-orange-50 to-amber-50', borderColor: 'border-orange-200' },\n  { color: 'from-indigo-400 to-blue-500', bgColor: 'bg-gradient-to-br from-indigo-50 to-blue-50', borderColor: 'border-indigo-200' },\n  { color: 'from-pink-400 to-rose-500', bgColor: 'bg-gradient-to-br from-pink-50 to-rose-50', borderColor: 'border-pink-200' },\n  { color: 'from-teal-400 to-cyan-500', bgColor: 'bg-gradient-to-br from-teal-50 to-cyan-50', borderColor: 'border-teal-200' }\n] as const;\n\n// Utility functions\nexport const getFileIcon = (type: string, size: keyof typeof ICON_SIZES = 'md'): React.ReactElement => {\n  const config = FILE_TYPE_CONFIG[type as FileType] || FILE_TYPE_CONFIG.txt;\n  const IconComponent = config.icon;\n  const sizeClass = ICON_SIZES[size];\n  const colorClass = `text-${config.color}-500`;\n  \n  return <IconComponent className={`${sizeClass} ${colorClass}`} />;\n};\n\nexport const getFileTypeColor = (type: string): string => {\n  const config = FILE_TYPE_CONFIG[type as FileType] || FILE_TYPE_CONFIG.txt;\n  return `bg-${config.color}-100 text-${config.color}-700 border-${config.color}-200`;\n};\n\nexport const getFileTypeLabel = (type: string): string => {\n  const config = FILE_TYPE_CONFIG[type as FileType] || FILE_TYPE_CONFIG.txt;\n  return config.label;\n};\n\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport const formatDate = (dateString: string): string => {\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));\n  \n  if (diffInDays === 0) return 'Today';\n  if (diffInDays === 1) return 'Yesterday';\n  if (diffInDays < 7) return `${diffInDays} days ago`;\n  if (diffInDays < 30) return `${Math.floor(diffInDays / 7)} weeks ago`;\n  if (diffInDays < 365) return `${Math.floor(diffInDays / 30)} months ago`;\n  return `${Math.floor(diffInDays / 365)} years ago`;\n};\n\nexport const generateFileColors = (index: number) => {\n  return COLOR_SCHEMES[index % COLOR_SCHEMES.length];\n};\n\n// File categorization utilities\nexport const getFileCategory = (type: string): string => {\n  if (['pdf', 'docx', 'pptx', 'txt', 'md'].includes(type)) return 'documents';\n  if (['png', 'jpg', 'jpeg'].includes(type)) return 'images';\n  if (['mp4'].includes(type)) return 'videos';\n  if (['mp3', 'wav'].includes(type)) return 'audio';\n  if (['zip'].includes(type)) return 'archives';\n  return 'other';\n};\n\nexport const isFileTypeSupported = (type: string): boolean => {\n  return type in FILE_TYPE_CONFIG;\n};\n\n\n"],"names":["formatDate","formatFileSize","generateFileColors","getFileCategory","getFileIcon","getFileTypeColor","getFileTypeLabel","isFileTypeSupported","FILE_TYPE_CONFIG","pdf","icon","FileText","color","label","docx","pptx","txt","md","FileCode","png","Image","jpg","jpeg","csv","FileSpreadsheet","zip","Archive","mp4","FileVideo","mp3","FileAudio","wav","ICON_SIZES","sm","lg","COLOR_SCHEMES","bgColor","borderColor","type","size","config","IconComponent","sizeClass","colorClass","className","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","dateString","date","Date","now","diffInDays","getTime","index","length","includes"],"mappings":"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"}