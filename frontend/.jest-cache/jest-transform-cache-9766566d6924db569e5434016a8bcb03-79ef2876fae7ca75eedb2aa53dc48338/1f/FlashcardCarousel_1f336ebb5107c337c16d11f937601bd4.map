{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/flashcards/components/FlashcardCarousel.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { ChevronLeft, ChevronRight, Edit, HelpCircle, Grid, Plus, X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Input } from '@/components/ui/input';\nimport { useFlashcardCarousel } from '../hooks/useFlashcards';\nimport CarouselCard from './CarouselCard';\nimport type { Flashcard, FlashcardSet } from '../types';\nimport { centerScrollToChild } from '../utils/centerScroll';\n\ninterface FlashcardCarouselProps {\n  flashcardSet: FlashcardSet;\n  projectId?: string;\n  onBack: () => void;\n  onEditCard?: (card: Flashcard) => void;\n  onDiscardCard?: (card: Flashcard) => void;\n  onAddCard?: () => void;\n  onViewAll?: () => void;\n}\n\ninterface FlashcardCarouselCardProps {\n  card: Flashcard;\n  isActive: boolean;\n  isLeft: boolean;\n  isRight: boolean;\n  onFlip: () => void;\n  onEdit: () => void;\n  onDiscard: () => void;\n  onShowHint: () => void;\n  showHint: boolean;\n}\n\nconst FlashcardCarouselCard: React.FC<FlashcardCarouselCardProps> = ({\n  card,\n  isActive,\n  isLeft,\n  isRight,\n  onFlip,\n  onEdit,\n  onDiscard,\n  onShowHint,\n  showHint\n}) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [showCardHint, setShowCardHint] = useState(false);\n\n  // Ensure only the centered card can stay flipped; reset when it leaves center\n  useEffect(() => {\n    if (!isActive && isFlipped) {\n      setIsFlipped(false);\n    }\n  }, [isActive, isFlipped]);\n\n  const handleFlip = () => {\n    if (!isActive) return; // Only flip the centered card\n    setIsFlipped(!isFlipped);\n    onFlip();\n  };\n\n  const handleShowHint = () => {\n    setShowCardHint(!showCardHint);\n    onShowHint();\n  };\n\n  const getCardClasses = () => {\n    // Centered card prominent; neighbors slightly wider (leaving/entering feel)\n    if (isActive) {\n      return 'scale-105 opacity-100 z-30';\n    } else if (isLeft) {\n      return 'scale-95 opacity-65 -translate-x-6 blur-[1px] z-10';\n    } else if (isRight) {\n      return 'scale-95 opacity-65 translate-x-6 blur-[1px] z-10';\n    }\n    return 'scale-75 opacity-30 blur-[2px] z-0';\n  };\n\n  return (\n    <div className={`flex-shrink-0 basis-[92%] md:basis-3/4 lg:basis-3/5 xl:basis-[55%] max-w-[980px] snap-center transition-all duration-500 ease-in-out motion-reduce:duration-0 ${getCardClasses()}`}>\n      <div className=\"perspective-1000\">\n        <div\n          className={`relative w-full h-60 md:h-72 transform-style-preserve-3d transition-transform duration-700 ease-in-out motion-reduce:duration-0 ${\n            isFlipped ? 'rotate-y-180' : ''\n          } flip-animate ${isActive ? 'cursor-pointer' : 'cursor-default'}`}\n          onClick={handleFlip}\n        >\n          {/* Front Face */}\n          <div className=\"absolute inset-0 backface-hidden\">\n            <Card className={`h-full w-full bg-white border border-blue-100 transition-all duration-300 ${isActive ? 'shadow-xl' : 'shadow-sm'} rounded-xl`}>\n              <CardContent className=\"p-5 h-full flex flex-col\">\n                {/* Top actions aligned right */}\n                <div className=\"flex justify-end items-start gap-1 mb-2.5\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0 hover:bg-gray-100\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onEdit();\n                    }}\n                    title=\"Edit card\"\n                  >\n                    <Edit className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0 hover:bg-red-100\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onDiscard();\n                    }}\n                    title=\"Discard card\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0 hover:bg-blue-100\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleShowHint();\n                    }}\n                    title=\"Show hint\"\n                  >\n                    <HelpCircle className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n\n                {/* Content: centered group (vertically and horizontally) */}\n                <div className=\"flex-1 flex flex-col items-center justify-center h-full p-2 text-center\">\n                  <Badge variant=\"secondary\" className=\"w-fit mb-2 bg-blue-50 text-blue-700 border-blue-200 uppercase tracking-wide text-[9px] font-semibold\">\n                    Question\n                  </Badge>\n                  <h3 className=\"text-lg md:text-xl font-bold text-gray-900 mb-2.5 leading-relaxed text-center text-balance max-w-full\">\n                    {card.question}\n                  </h3>\n                  <p className=\"text-xs md:text-sm text-gray-500 text-center\">\n                    Click to reveal answer\n                  </p>\n                </div>\n\n                {showCardHint && card.hints && card.hints.length > 0 && (\n                  <div className=\"mt-3 p-3 bg-blue-50 rounded-lg w-full\">\n                    <p className=\"text-xs md:text-sm text-blue-800\">\n                      üí° {card.hints[0]}\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Back Face */}\n          <div className=\"absolute inset-0 backface-hidden rotate-y-180\">\n            <Card className={`h-full w-full bg-white border border-green-100 ${isActive ? 'shadow-xl' : 'shadow-sm'} rounded-xl`}>\n              <CardContent className=\"p-5 h-full flex flex-col\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <Badge variant=\"secondary\" className=\"bg-green-50 text-green-700 border-green-200 uppercase tracking-wide text-[9px] font-semibold\">\n                    Answer\n                  </Badge>\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"h-8 w-8 p-0 hover:bg-gray-100 transition-colors duration-200\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onEdit();\n                      }}\n                      title=\"Edit card\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"h-8 w-8 p-0 hover:bg-red-100 transition-colors duration-200\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onDiscard();\n                      }}\n                      title=\"Discard card\"\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-col\">\n                  <p className=\"text-sm md:text-base text-gray-900 leading-relaxed\">\n                    {card.answer}\n                  </p>\n                </div>\n\n                {card.notes && (\n                  <div className=\"mt-3 p-3 bg-green-100 rounded-lg\">\n                    <p className=\"text-xs md:text-sm text-green-800\">\n                      üìù {card.notes}\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const FlashcardCarousel: React.FC<FlashcardCarouselProps> = ({\n  flashcardSet,\n  projectId,\n  onBack,\n  onEditCard,\n  onDiscardCard,\n  onAddCard,\n  onViewAll\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showHint, setShowHint] = useState(false);\n  const [showViewAllModal, setShowViewAllModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newAnswer, setNewAnswer] = useState('');\n  const [newHint, setNewHint] = useState('');\n  const [formError, setFormError] = useState<string | null>(null);\n  const carouselRef = useRef<HTMLDivElement>(null);\n  \n  const { flashcards, isLoading, error, nextCard, prevCard, goToCard, flipCard } = useFlashcardCarousel(\n    flashcardSet.id, \n    projectId, \n    flashcardSet.flashcards\n  );\n\n  const scrollToCard = useCallback((index: number) => {\n    const container = carouselRef.current;\n    if (container) {\n      const cardElement = container.children[index] as HTMLElement;\n      if (cardElement) {\n        centerScrollToChild(container, cardElement, 'smooth');\n      }\n    }\n    setCurrentIndex(index);\n  }, []);\n\n  // Ensure initial centering and on resize\n  useEffect(() => {\n    scrollToCard(currentIndex);\n    const handleResize = () => scrollToCard(currentIndex);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [scrollToCard, currentIndex]);\n\n  const handleNext = () => {\n    const flashcardsLength = Array.isArray(flashcards) ? flashcards.length : 0;\n    if (currentIndex < flashcardsLength - 1) {\n      const nextIndex = currentIndex + 1;\n      scrollToCard(nextIndex);\n      nextCard();\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      const prevIndex = currentIndex - 1;\n      scrollToCard(prevIndex);\n      prevCard();\n    }\n  };\n\n  const handleCardClick = (index: number) => {\n    scrollToCard(index);\n    goToCard(index);\n  };\n\n  const handleFlip = () => {\n    flipCard();\n  };\n\n  const handleEdit = (card: Flashcard) => {\n    if (onEditCard) {\n      onEditCard(card);\n    }\n  };\n\n  const handleDiscard = (card: Flashcard) => {\n    if (onDiscardCard) {\n      onDiscardCard(card);\n    }\n  };\n\n  const handleShowHint = () => {\n    setShowHint(!showHint);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      switch (event.key) {\n        case 'ArrowRight':\n        case ' ':\n          event.preventDefault();\n          handleNext();\n          break;\n        case 'ArrowLeft':\n          event.preventDefault();\n          handlePrev();\n          break;\n        case 'Enter':\n        case 'f':\n          event.preventDefault();\n          handleFlip();\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [currentIndex, Array.isArray(flashcards) ? flashcards.length : 0]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-red-600\">Error loading flashcards: {error}</p>\n      </div>\n    );\n  }\n\n  if (!Array.isArray(flashcards) || flashcards.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">No flashcards in this set yet.</p>\n        <Button onClick={onAddCard} className=\"mt-4\">\n          <Plus className=\"h-4 w-4 mr-2\" />\n          Add First Card\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4 md:p-6\">\n      {/* Header */}\n      <div className=\"max-w-6xl mx-auto mb-8\">\n        <div className=\"flex items-center gap-4 mb-4\">\n          <Button\n            variant=\"ghost\"\n            onClick={onBack}\n            className=\"hover:bg-white/50 transition-colors duration-200\"\n          >\n            <ChevronLeft className=\"h-5 w-5 mr-2\" />\n            Back to Decks\n          </Button>\n        </div>\n        \n        <div className=\"flex items-center gap-4 mb-2\">\n          <div className=\"w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center\">\n            <span className=\"text-white text-2xl font-bold\">\n              {flashcardSet.title.charAt(0).toUpperCase()}\n            </span>\n          </div>\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">{flashcardSet.title}</h1>\n            <p className=\"text-gray-600\">{flashcardSet.description || 'Learn and review your flashcards'}</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-2 text-gray-500\">\n          <span className=\"w-5 h-5\">üìö</span>\n          <span>{Array.isArray(flashcards) ? flashcards.length : 0} flashcards</span>\n        </div>\n      </div>\n\n      {/* Carousel Container */}\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"relative\">\n          {/* Navigation Arrows */}\n          <Button\n            variant=\"ghost\"\n            size=\"lg\"\n            aria-label=\"Previous card\"\n            className=\"absolute left-4 top-1/2 -translate-y-1/2 z-30 bg-white/80 hover:bg-white hover:scale-110 transition-all duration-200 motion-reduce:transition-none shadow-lg\"\n            onClick={handlePrev}\n            disabled={currentIndex === 0}\n          >\n            <ChevronLeft className=\"h-6 w-6\" />\n          </Button>\n\n          <Button\n            variant=\"ghost\"\n            size=\"lg\"\n            aria-label=\"Next card\"\n            className=\"absolute right-4 top-1/2 -translate-y-1/2 z-30 bg-white/80 hover:bg-white hover:scale-110 transition-all duration-200 motion-reduce:transition-none shadow-lg\"\n            onClick={handleNext}\n            disabled={currentIndex === (Array.isArray(flashcards) ? flashcards.length : 0) - 1}\n          >\n            <ChevronRight className=\"h-6 w-6\" />\n          </Button>\n\n          {/* Carousel */}\n          <div\n            ref={carouselRef}\n            className=\"flex overflow-x-auto scrollbar-hide scroll-smooth snap-x snap-mandatory gap-8 px-10 md:px-16 lg:px-24 py-6 items-stretch\"\n            style={{ scrollbarWidth: 'none', msOverflowStyle: 'none' }}\n          >\n            {Array.isArray(flashcards) && flashcards.map((card, index) => (\n              <FlashcardCarouselCard\n                key={card.id}\n                card={card}\n                isActive={index === currentIndex}\n                isLeft={index === currentIndex - 1}\n                isRight={index === currentIndex + 1}\n                onFlip={handleFlip}\n                onEdit={() => handleEdit(card)}\n                onDiscard={() => handleDiscard(card)}\n                onShowHint={handleShowHint}\n                showHint={showHint}\n              />\n            ))}\n          </div>\n        </div>\n\n        {/* Progress Indicators */}\n        <div className=\"flex justify-center mt-8 mb-6\">\n          <div className=\"flex gap-2\">\n            {flashcards.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => handleCardClick(index)}\n                className={`w-3 h-3 rounded-full transition-all duration-200 ${\n                  index === currentIndex\n                    ? 'bg-blue-500 scale-125'\n                    : 'bg-gray-300 hover:bg-gray-400'\n                }`}\n              />\n            ))}\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-center gap-6 mt-2\">\n          <Button\n            variant=\"outline\"\n            size=\"lg\"\n            onClick={() => setShowViewAllModal(true)}\n            className=\"hover:scale-105 transition-transform duration-200 motion-reduce:transition-none text-gray-700 border-gray-300\"\n          >\n            <Grid className=\"h-5 w-5 mr-2\" />\n            View All\n          </Button>\n          \n          {/* Teal circular add button */}\n          <button\n            aria-label=\"Add card\"\n            onClick={() => setShowAddModal(true)}\n            className=\"bg-teal-600 hover:bg-teal-700 h-10 w-10 rounded-full flex items-center justify-center text-white shadow-md transition-colors\"\n          >\n            <Plus className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n\n      {/* View All Modal */}\n      <Dialog open={showViewAllModal} onOpenChange={setShowViewAllModal}>\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Grid className=\"h-5 w-5\" />\n              All Flashcards in {flashcardSet.title}\n            </DialogTitle>\n          </DialogHeader>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\">\n            {flashcards.map((card, index) => (\n              <Card\n                key={card.id}\n                className=\"hover:shadow-lg transition-shadow duration-200\"\n              >\n                <CardContent className=\"p-4 relative\">\n                  <div className=\"absolute top-2 right-2 flex gap-1\">\n                    <Button size=\"sm\" variant=\"ghost\" onClick={() => handleEdit(card)} className=\"h-7 w-7 p-0\">\n                      <Edit className=\"h-3.5 w-3.5\" />\n                    </Button>\n                    <Button size=\"sm\" variant=\"ghost\" onClick={() => handleDiscard(card)} className=\"h-7 w-7 p-0\">\n                      <X className=\"h-3.5 w-3.5\" />\n                    </Button>\n                  </div>\n                  <div className=\"flex flex-col gap-1 pr-12\">\n                    <h4 className=\"font-semibold text-gray-900 line-clamp-2\">\n                      {card.question}\n                    </h4>\n                    <p className=\"text-sm text-gray-600 line-clamp-2\">\n                      {card.answer}\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Add Card Modal */}\n      <Dialog open={showAddModal} onOpenChange={setShowAddModal}>\n        <DialogContent className=\"max-w-xl\">\n          <DialogHeader>\n            <DialogTitle>Add a new flashcard</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            {formError && (\n              <div className=\"text-sm text-red-600\">{formError}</div>\n            )}\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Question</label>\n              <Textarea value={newQuestion} onChange={(e) => setNewQuestion(e.target.value)} placeholder=\"Enter the question\" rows={4} />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Answer</label>\n              <Textarea value={newAnswer} onChange={(e) => setNewAnswer(e.target.value)} placeholder=\"Enter the answer\" rows={4} />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Hint (optional)</label>\n              <Input value={newHint} onChange={(e) => setNewHint(e.target.value)} placeholder=\"Add a hint\" />\n            </div>\n            <div className=\"flex justify-end gap-2 pt-2\">\n              <Button variant=\"outline\" onClick={() => setShowAddModal(false)}>Cancel</Button>\n              <Button onClick={() => {\n                if (!newQuestion.trim() || !newAnswer.trim()) {\n                  setFormError('Please provide both a question and an answer.');\n                  return;\n                }\n                setFormError(null);\n                setShowAddModal(false);\n                setNewQuestion('');\n                setNewAnswer('');\n                setNewHint('');\n                // Delegate creation to parent if provided\n                if (onAddCard) onAddCard();\n              }} className=\"bg-teal-600 hover:bg-teal-700\">\n                Save Card\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n"],"names":["FlashcardCarousel","FlashcardCarouselCard","card","isActive","isLeft","isRight","onFlip","onEdit","onDiscard","onShowHint","showHint","isFlipped","setIsFlipped","useState","showCardHint","setShowCardHint","useEffect","handleFlip","handleShowHint","getCardClasses","div","className","onClick","Card","CardContent","Button","variant","size","e","stopPropagation","title","Edit","X","HelpCircle","Badge","h3","question","p","hints","length","answer","notes","flashcardSet","projectId","onBack","onEditCard","onDiscardCard","onAddCard","onViewAll","currentIndex","setCurrentIndex","setShowHint","showViewAllModal","setShowViewAllModal","showAddModal","setShowAddModal","newQuestion","setNewQuestion","newAnswer","setNewAnswer","newHint","setNewHint","formError","setFormError","carouselRef","useRef","flashcards","isLoading","error","nextCard","prevCard","goToCard","flipCard","useFlashcardCarousel","id","scrollToCard","useCallback","index","container","current","cardElement","children","centerScrollToChild","handleResize","window","addEventListener","removeEventListener","handleNext","flashcardsLength","Array","isArray","nextIndex","handlePrev","prevIndex","handleCardClick","handleEdit","handleDiscard","handleKeyDown","event","key","preventDefault","Plus","ChevronLeft","span","charAt","toUpperCase","h1","description","aria-label","disabled","ChevronRight","ref","style","scrollbarWidth","msOverflowStyle","map","_","button","Grid","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","h4","label","Textarea","value","onChange","target","placeholder","rows","Input","trim"],"mappings":"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"}