fb554a16c0598094e236a208cbe8283f
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FlashcardDeckDemo", {
    enumerable: true,
    get: function() {
        return FlashcardDeckDemo;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _flashcards = require("..");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Mock data for demonstration
const mockDecks = [
    {
        id: 1,
        title: "Classic Literature",
        description: "Famous works and authors from literary history",
        owner: 1,
        difficulty_level: 'INTERMEDIATE',
        target_audience: 'Literature Students',
        estimated_study_time: 120,
        tags: [
            'favorite'
        ],
        created_at: '2024-01-25T10:00:00Z',
        updated_at: '2024-01-25T10:00:00Z',
        flashcard_count: 1,
        is_public: false,
        study_stats: {
            total_cards: 1,
            due_cards: 3,
            mastered_cards: 8,
            learning_cards: 4,
            review_cards: 8,
            retention_rate: 0.85,
            streak_days: 5,
            next_review: '2024-01-20T10:00:00Z'
        },
        flashcards: [],
        learning_objectives: [],
        themes: []
    },
    {
        id: 2,
        title: "Basic Science",
        description: "Fundamental concepts in biology, chemistry, and physics",
        owner: 1,
        difficulty_level: 'BEGINNER',
        target_audience: 'High School Students',
        estimated_study_time: 180,
        tags: [],
        created_at: '2024-01-20T10:00:00Z',
        updated_at: '2024-01-20T10:00:00Z',
        flashcard_count: 2,
        is_public: false,
        study_stats: {
            total_cards: 2,
            due_cards: 7,
            mastered_cards: 12,
            learning_cards: 6,
            review_cards: 12,
            retention_rate: 0.78,
            streak_days: 3,
            next_review: '2024-01-18T10:00:00Z'
        },
        flashcards: [],
        learning_objectives: [],
        themes: []
    },
    {
        id: 3,
        title: "World Geography",
        description: "Countries, capitals, and landmarks around the world",
        owner: 1,
        difficulty_level: 'ADVANCED',
        target_audience: 'Geography Enthusiasts',
        estimated_study_time: 240,
        tags: [],
        created_at: '2024-01-15T10:00:00Z',
        updated_at: '2024-01-15T10:00:00Z',
        flashcard_count: 50,
        is_public: false,
        study_stats: {
            total_cards: 50,
            due_cards: 12,
            mastered_cards: 25,
            learning_cards: 13,
            review_cards: 25,
            retention_rate: 0.92,
            streak_days: 7,
            next_review: '2024-01-10T10:00:00Z'
        },
        flashcards: [],
        learning_objectives: [],
        themes: []
    }
];
function FlashcardDeckDemo() {
    const [decks] = (0, _react.useState)(mockDecks);
    const handleEdit = (deck)=>{
        console.log('Edit deck:', deck.title);
    };
    const handleDelete = (deck)=>{
        console.log('Delete deck:', deck.title);
    };
    const handleShare = (deck)=>{
        console.log('Share deck:', deck.title);
    };
    const handleToggleFavorite = (deck)=>{
        console.log('Toggle favorite:', deck.title);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "p-6 bg-gray-50 min-h-screen",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "max-w-7xl mx-auto",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "mb-8",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                            className: "text-3xl font-bold text-gray-900 mb-2",
                            children: "Flashcard Deck Redesign Demo"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "text-gray-600",
                            children: "New deck card design with sorting, layout options, and full accessibility support."
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_flashcards.DeckGrid, {
                    decks: decks,
                    onEdit: handleEdit,
                    onDelete: handleDelete,
                    onShare: handleShare,
                    onToggleFavorite: handleToggleFavorite
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,