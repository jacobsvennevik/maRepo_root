{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/flashcards/components/__tests__/deck-card-routing.test.tsx"],"sourcesContent":["import { render, screen } from '@testing-library/react'\nimport React from 'react'\nimport { DeckCard } from '../../components/deck-card'\nimport type { FlashcardSet } from '../../types'\n\njest.mock('next/link', () => {\n  return ({ href, children }: any) => <a href={href} data-testid=\"link\">{children}</a>\n})\n\ndescribe('DeckCard routing', () => {\n  const deck: FlashcardSet = {\n    id: 9,\n    title: 'Test Set',\n    description: 'desc',\n    owner: 1, // user id, not a project id\n    difficulty_level: 'INTERMEDIATE',\n    target_audience: '',\n    estimated_study_time: 10,\n    tags: [],\n    created_at: '2024-01-01T00:00:00Z',\n    updated_at: '2024-01-01T00:00:00Z',\n    flashcard_count: 0,\n    is_public: false,\n    study_stats: { total_cards: 0, due_cards: 0, mastered_cards: 0, learning_cards: 0, review_cards: 0, retention_rate: 0, streak_days: 0, next_review: '2024-01-01T00:00:00Z' },\n    flashcards: [],\n    learning_objectives: [],\n    themes: [],\n  }\n\n  it('uses provided projectId for link, not deck.owner', () => {\n    const projectId = '203062be-58d0-4f98-bbd4-33b4ce081276'\n    render(<DeckCard deck={deck} projectId={projectId} />)\n\n    const links = screen.getAllByTestId('link')\n    const studyLink = links.find(a => (a as HTMLAnchorElement).href.includes('/flashcards/')) as HTMLAnchorElement\n\n    expect(studyLink).toBeTruthy()\n    expect(studyLink.getAttribute('href')).toBe(`/projects/${projectId}/flashcards/${deck.id}`)\n  })\n})\n"],"names":["jest","mock","href","children","a","data-testid","describe","deck","id","title","description","owner","difficulty_level","target_audience","estimated_study_time","tags","created_at","updated_at","flashcard_count","is_public","study_stats","total_cards","due_cards","mastered_cards","learning_cards","review_cards","retention_rate","streak_days","next_review","flashcards","learning_objectives","themes","it","projectId","render","DeckCard","links","screen","getAllByTestId","studyLink","find","includes","expect","toBeTruthy","getAttribute","toBe"],"mappings":";AAKAA,KAAKC,IAAI,CAAC,aAAa;IACrB,OAAO,CAAC,EAAEC,IAAI,EAAEC,QAAQ,EAAO,iBAAK,qBAACC;YAAEF,MAAMA;YAAMG,eAAY;sBAAQF;;AACzE;;;;;uBAP+B;+DACb;0BACO;;;;;;AAOzBG,SAAS,oBAAoB;IAC3B,MAAMC,OAAqB;QACzBC,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,OAAO;QACPC,kBAAkB;QAClBC,iBAAiB;QACjBC,sBAAsB;QACtBC,MAAM,EAAE;QACRC,YAAY;QACZC,YAAY;QACZC,iBAAiB;QACjBC,WAAW;QACXC,aAAa;YAAEC,aAAa;YAAGC,WAAW;YAAGC,gBAAgB;YAAGC,gBAAgB;YAAGC,cAAc;YAAGC,gBAAgB;YAAGC,aAAa;YAAGC,aAAa;QAAuB;QAC3KC,YAAY,EAAE;QACdC,qBAAqB,EAAE;QACvBC,QAAQ,EAAE;IACZ;IAEAC,GAAG,oDAAoD;QACrD,MAAMC,YAAY;QAClBC,IAAAA,aAAM,gBAAC,qBAACC,kBAAQ;YAAC5B,MAAMA;YAAM0B,WAAWA;;QAExC,MAAMG,QAAQC,aAAM,CAACC,cAAc,CAAC;QACpC,MAAMC,YAAYH,MAAMI,IAAI,CAACpC,CAAAA,IAAK,AAACA,EAAwBF,IAAI,CAACuC,QAAQ,CAAC;QAEzEC,OAAOH,WAAWI,UAAU;QAC5BD,OAAOH,UAAUK,YAAY,CAAC,SAASC,IAAI,CAAC,CAAC,UAAU,EAAEZ,UAAU,YAAY,EAAE1B,KAAKC,EAAE,EAAE;IAC5F;AACF"}