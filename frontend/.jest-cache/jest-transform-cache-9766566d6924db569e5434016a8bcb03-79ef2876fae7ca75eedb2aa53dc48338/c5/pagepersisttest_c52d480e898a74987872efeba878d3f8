cd77e63129ec7d3752d3b295baca9701
"use strict";
jest.mock('next/navigation', ()=>({
        useParams: ()=>({
                projectId: '203062be-58d0-4f98-bbd4-33b4ce081276'
            }),
        useRouter: ()=>({
                push: jest.fn(),
                replace: jest.fn(),
                back: jest.fn()
            })
    }));
jest.mock('../hooks/use-project-flashcards', ()=>({
        useProjectFlashcards: ()=>({
                flashcardSets: [],
                stats: {
                    total_sets: 0,
                    total_cards: 0,
                    due_today: 0,
                    learning_cards: 0,
                    mastered_cards: 0,
                    average_accuracy: 0
                },
                isLoading: false,
                error: null
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _react1 = /*#__PURE__*/ _interop_require_default(require("react"));
const _page = /*#__PURE__*/ _interop_require_default(require("../page"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('ProjectFlashcards - persistence', ()=>{
    it('stores activeProjectId on load', ()=>{
        const setItem = jest.fn();
        const storageMock = {
            getItem: jest.fn(),
            setItem,
            removeItem: jest.fn(),
            clear: jest.fn(),
            key: jest.fn(),
            length: 0
        };
        // @ts-ignore
        global.localStorage = storageMock;
        // @ts-ignore
        global.window = {
            ...global.window || {},
            localStorage: storageMock
        };
        (0, _react.act)(()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_page.default, {}));
        });
        expect(setItem).toHaveBeenCalledWith('activeProjectId', '203062be-58d0-4f98-bbd4-33b4ce081276');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNvYmhvcm5zdmVubmV2aWsvRG9jdW1lbnRzL0dpdEh1Yi9tYVJlcG9fcm9vdC9mcm9udGVuZC9zcmMvYXBwL3Byb2plY3RzL1twcm9qZWN0SWRdL2ZsYXNoY2FyZHMvX190ZXN0c19fL3BhZ2UtcGVyc2lzdC50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIGFjdCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvamVjdEZsYXNoY2FyZHMgZnJvbSAnLi4vcGFnZSdcblxuamVzdC5tb2NrKCduZXh0L25hdmlnYXRpb24nLCAoKSA9PiAoe1xuICB1c2VQYXJhbXM6ICgpID0+ICh7IHByb2plY3RJZDogJzIwMzA2MmJlLTU4ZDAtNGY5OC1iYmQ0LTMzYjRjZTA4MTI3NicgfSksXG4gIHVzZVJvdXRlcjogKCkgPT4gKHsgcHVzaDogamVzdC5mbigpLCByZXBsYWNlOiBqZXN0LmZuKCksIGJhY2s6IGplc3QuZm4oKSB9KSxcbn0pKVxuXG5qZXN0Lm1vY2soJy4uL2hvb2tzL3VzZS1wcm9qZWN0LWZsYXNoY2FyZHMnLCAoKSA9PiAoe1xuICB1c2VQcm9qZWN0Rmxhc2hjYXJkczogKCkgPT4gKHsgZmxhc2hjYXJkU2V0czogW10sIHN0YXRzOiB7IHRvdGFsX3NldHM6MCwgdG90YWxfY2FyZHM6MCwgZHVlX3RvZGF5OjAsIGxlYXJuaW5nX2NhcmRzOjAsIG1hc3RlcmVkX2NhcmRzOjAsIGF2ZXJhZ2VfYWNjdXJhY3k6MCB9LCBpc0xvYWRpbmc6IGZhbHNlLCBlcnJvcjogbnVsbCB9KVxufSkpXG5cbmRlc2NyaWJlKCdQcm9qZWN0Rmxhc2hjYXJkcyAtIHBlcnNpc3RlbmNlJywgKCkgPT4ge1xuICBpdCgnc3RvcmVzIGFjdGl2ZVByb2plY3RJZCBvbiBsb2FkJywgKCkgPT4ge1xuICAgIGNvbnN0IHNldEl0ZW0gPSBqZXN0LmZuKClcbiAgICBjb25zdCBzdG9yYWdlTW9jayA9IHtcbiAgICAgIGdldEl0ZW06IGplc3QuZm4oKSxcbiAgICAgIHNldEl0ZW0sXG4gICAgICByZW1vdmVJdGVtOiBqZXN0LmZuKCksXG4gICAgICBjbGVhcjogamVzdC5mbigpLFxuICAgICAga2V5OiBqZXN0LmZuKCksXG4gICAgICBsZW5ndGg6IDAsXG4gICAgfVxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBnbG9iYWwubG9jYWxTdG9yYWdlID0gc3RvcmFnZU1vY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgZ2xvYmFsLndpbmRvdyA9IHsgLi4uKGdsb2JhbC53aW5kb3cgfHwge30pLCBsb2NhbFN0b3JhZ2U6IHN0b3JhZ2VNb2NrIH1cblxuICAgIGFjdCgoKSA9PiB7XG4gICAgICByZW5kZXIoPFByb2plY3RGbGFzaGNhcmRzIC8+KVxuICAgIH0pXG5cbiAgICBleHBlY3Qoc2V0SXRlbSkudG9IYXZlQmVlbkNhbGxlZFdpdGgoJ2FjdGl2ZVByb2plY3RJZCcsICcyMDMwNjJiZS01OGQwLTRmOTgtYmJkNC0zM2I0Y2UwODEyNzYnKVxuICB9KVxufSlcbiJdLCJuYW1lcyI6WyJqZXN0IiwibW9jayIsInVzZVBhcmFtcyIsInByb2plY3RJZCIsInVzZVJvdXRlciIsInB1c2giLCJmbiIsInJlcGxhY2UiLCJiYWNrIiwidXNlUHJvamVjdEZsYXNoY2FyZHMiLCJmbGFzaGNhcmRTZXRzIiwic3RhdHMiLCJ0b3RhbF9zZXRzIiwidG90YWxfY2FyZHMiLCJkdWVfdG9kYXkiLCJsZWFybmluZ19jYXJkcyIsIm1hc3RlcmVkX2NhcmRzIiwiYXZlcmFnZV9hY2N1cmFjeSIsImlzTG9hZGluZyIsImVycm9yIiwiZGVzY3JpYmUiLCJpdCIsInNldEl0ZW0iLCJzdG9yYWdlTW9jayIsImdldEl0ZW0iLCJyZW1vdmVJdGVtIiwiY2xlYXIiLCJrZXkiLCJsZW5ndGgiLCJnbG9iYWwiLCJsb2NhbFN0b3JhZ2UiLCJ3aW5kb3ciLCJhY3QiLCJyZW5kZXIiLCJQcm9qZWN0Rmxhc2hjYXJkcyIsImV4cGVjdCIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIl0sIm1hcHBpbmdzIjoiO0FBSUFBLEtBQUtDLElBQUksQ0FBQyxtQkFBbUIsSUFBTyxDQUFBO1FBQ2xDQyxXQUFXLElBQU8sQ0FBQTtnQkFBRUMsV0FBVztZQUF1QyxDQUFBO1FBQ3RFQyxXQUFXLElBQU8sQ0FBQTtnQkFBRUMsTUFBTUwsS0FBS00sRUFBRTtnQkFBSUMsU0FBU1AsS0FBS00sRUFBRTtnQkFBSUUsTUFBTVIsS0FBS00sRUFBRTtZQUFHLENBQUE7SUFDM0UsQ0FBQTtBQUVBTixLQUFLQyxJQUFJLENBQUMsbUNBQW1DLElBQU8sQ0FBQTtRQUNsRFEsc0JBQXNCLElBQU8sQ0FBQTtnQkFBRUMsZUFBZSxFQUFFO2dCQUFFQyxPQUFPO29CQUFFQyxZQUFXO29CQUFHQyxhQUFZO29CQUFHQyxXQUFVO29CQUFHQyxnQkFBZTtvQkFBR0MsZ0JBQWU7b0JBQUdDLGtCQUFpQjtnQkFBRTtnQkFBR0MsV0FBVztnQkFBT0MsT0FBTztZQUFLLENBQUE7SUFDL0wsQ0FBQTs7Ozs7dUJBWDRCOytEQUNWOzZEQUNZOzs7Ozs7QUFXOUJDLFNBQVMsbUNBQW1DO0lBQzFDQyxHQUFHLGtDQUFrQztRQUNuQyxNQUFNQyxVQUFVdEIsS0FBS00sRUFBRTtRQUN2QixNQUFNaUIsY0FBYztZQUNsQkMsU0FBU3hCLEtBQUtNLEVBQUU7WUFDaEJnQjtZQUNBRyxZQUFZekIsS0FBS00sRUFBRTtZQUNuQm9CLE9BQU8xQixLQUFLTSxFQUFFO1lBQ2RxQixLQUFLM0IsS0FBS00sRUFBRTtZQUNac0IsUUFBUTtRQUNWO1FBQ0EsYUFBYTtRQUNiQyxPQUFPQyxZQUFZLEdBQUdQO1FBQ3RCLGFBQWE7UUFDYk0sT0FBT0UsTUFBTSxHQUFHO1lBQUUsR0FBSUYsT0FBT0UsTUFBTSxJQUFJLENBQUMsQ0FBQztZQUFHRCxjQUFjUDtRQUFZO1FBRXRFUyxJQUFBQSxVQUFHLEVBQUM7WUFDRkMsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ0MsYUFBaUI7UUFDM0I7UUFFQUMsT0FBT2IsU0FBU2Msb0JBQW9CLENBQUMsbUJBQW1CO0lBQzFEO0FBQ0YifQ==