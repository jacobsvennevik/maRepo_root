{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/services/__tests__/cleanup-utils-simple.test.ts"],"sourcesContent":["import {\n  cleanupLocalStorage,\n  registerUpload,\n  cleanupOnAbandon,\n  isCleanupInProgress,\n  getCleanupQueueLength,\n} from \"../cleanup-utils\";\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n  key: jest.fn(),\n  length: 0,\n};\n\nObject.defineProperty(window, \"localStorage\", {\n  value: localStorageMock,\n  writable: true,\n});\n\n// Mock window.showToast\nconst mockShowToast = jest.fn();\nObject.defineProperty(window, \"showToast\", {\n  value: mockShowToast,\n  writable: true,\n});\n\n// Mock fetch\nglobal.fetch = jest.fn();\n\ndescribe(\"cleanup-utils (simplified)\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockShowToast.mockClear();\n    localStorageMock.getItem.mockClear();\n    localStorageMock.setItem.mockClear();\n    localStorageMock.removeItem.mockClear();\n    localStorageMock.clear.mockClear();\n    localStorageMock.key.mockClear();\n\n    // Reset global state\n    (window as any).__cleanupInProgress = false;\n    (window as any).__cleanupQueue = [];\n    (window as any).__uploads = [];\n  });\n\n  describe(\"registerUpload\", () => {\n    it(\"should register AbortController for cleanup\", () => {\n      const mockController = { abort: jest.fn() };\n      registerUpload(mockController);\n\n      expect((window as any).__uploads).toContain(mockController);\n    });\n\n    it(\"should initialize uploads array if not exists\", () => {\n      delete (window as any).__uploads;\n      const mockController = { abort: jest.fn() };\n\n      registerUpload(mockController);\n\n      expect((window as any).__uploads).toEqual([mockController]);\n    });\n  });\n\n  describe(\"cleanupLocalStorage\", () => {\n    it(\"should remove project creation localStorage keys\", () => {\n      // Mock localStorage to have some keys\n      localStorageMock.key\n        .mockReturnValueOnce(\"project-setup-guided-setup\")\n        .mockReturnValueOnce(\"draft_123\")\n        .mockReturnValueOnce(\"other-key\")\n        .mockReturnValue(null);\n\n      cleanupLocalStorage();\n\n      expect(localStorageMock.removeItem).toHaveBeenCalledWith(\n        \"project-setup-guided-setup\",\n      );\n      expect(localStorageMock.removeItem).toHaveBeenCalledWith(\"draft_123\");\n      expect(localStorageMock.removeItem).not.toHaveBeenCalledWith(\"other-key\");\n    });\n\n    it(\"should handle localStorage errors gracefully\", () => {\n      localStorageMock.removeItem.mockImplementation(() => {\n        throw new Error(\"localStorage error\");\n      });\n\n      // Should not throw\n      expect(() => cleanupLocalStorage()).not.toThrow();\n    });\n\n    it(\"should handle storage quota exceeded\", () => {\n      localStorageMock.removeItem.mockImplementation(() => {\n        throw new Error(\"QuotaExceededError\");\n      });\n\n      cleanupLocalStorage();\n\n      expect(mockShowToast).toHaveBeenCalledWith(\n        \"Storage limit reached. Please clear some data and try again.\",\n        \"error\",\n      );\n    });\n  });\n\n  describe(\"cleanupOnAbandon\", () => {\n    it(\"should abort uploads and cleanup immediately\", async () => {\n      const mockController1 = { abort: jest.fn() };\n      const mockController2 = { abort: jest.fn() };\n\n      (window as any).__uploads = [mockController1, mockController2];\n\n      // Mock localStorage\n      localStorageMock.key.mockReturnValue(null);\n\n      await cleanupOnAbandon(\"123\");\n\n      expect(mockController1.abort).toHaveBeenCalled();\n      expect(mockController2.abort).toHaveBeenCalled();\n      expect(localStorageMock.removeItem).toHaveBeenCalledWith(\"draft_123\");\n    });\n\n    it(\"should handle localStorage errors in cleanupOnAbandon\", async () => {\n      localStorageMock.removeItem.mockImplementation(() => {\n        throw new Error(\"localStorage error\");\n      });\n\n      // Should not throw\n      await expect(cleanupOnAbandon(\"123\")).resolves.not.toThrow();\n    });\n  });\n\n  describe(\"state tracking\", () => {\n    it(\"should track cleanup progress state\", () => {\n      expect(isCleanupInProgress()).toBe(false);\n\n      (window as any).__cleanupInProgress = true;\n      expect(isCleanupInProgress()).toBe(true);\n    });\n\n    it(\"should track cleanup queue length\", () => {\n      expect(getCleanupQueueLength()).toBe(0);\n\n      (window as any).__cleanupQueue = [1, 2, 3];\n      expect(getCleanupQueueLength()).toBe(3);\n    });\n  });\n\n  describe(\"localStorage quota checking\", () => {\n    it(\"should handle localStorage access errors\", () => {\n      localStorageMock.key.mockImplementation(() => {\n        throw new Error(\"Access denied\");\n      });\n\n      // Should not throw\n      expect(() => cleanupLocalStorage()).not.toThrow();\n    });\n  });\n});\n"],"names":["localStorageMock","getItem","jest","fn","setItem","removeItem","clear","key","length","Object","defineProperty","window","value","writable","mockShowToast","global","fetch","describe","beforeEach","clearAllMocks","mockClear","__cleanupInProgress","__cleanupQueue","__uploads","it","mockController","abort","registerUpload","expect","toContain","toEqual","mockReturnValueOnce","mockReturnValue","cleanupLocalStorage","toHaveBeenCalledWith","not","mockImplementation","Error","toThrow","mockController1","mockController2","cleanupOnAbandon","toHaveBeenCalled","resolves","isCleanupInProgress","toBe","getCleanupQueueLength"],"mappings":"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"}