{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/utils/presetRegistry.ts"],"sourcesContent":["// Style Preset Registry\n// Data-driven preset system with proper schema validation\n\nimport { StyleConfig } from './styleValidator';\n\nexport interface StylePreset {\n  id: string;\n  label: string;\n  description: string;\n  icon: string;\n  config: StyleConfig;\n  category: 'assessment' | 'practice' | 'review';\n  tags: string[];\n}\n\nexport interface StylePresetRecommendation extends StylePreset {\n  score: number;\n}\n\nexport interface PresetRegistry {\n  [key: string]: StylePreset;\n}\n\n/**\n * Core MVP presets as specified in requirements\n */\nexport const STYLE_PRESETS: PresetRegistry = {\n  mcq_quiz: {\n    id: 'mcq_quiz',\n    label: 'MCQ Quiz',\n    description: 'Multiple choice questions with immediate feedback',\n    icon: 'target',\n    category: 'assessment',\n    tags: ['quick', 'immediate', 'multiple-choice'],\n    config: {\n      item_mix: {\n        single_select: 0.9,\n        cloze: 0.1,\n        short_answer: 0,\n        numeric: 0,\n        multi_step: 0\n      },\n      timing: {\n        total_minutes: 15,\n        per_item_seconds: 60,\n        mode: 'soft'\n      },\n      feedback: 'immediate',\n      difficulty: 'balanced',\n      hints: false\n    }\n  },\n\n  mixed_checkpoint: {\n    id: 'mixed_checkpoint',\n    label: 'Mixed Checkpoint',\n    description: 'Combination of question types with deferred feedback',\n    icon: 'check-circle',\n    category: 'assessment',\n    tags: ['comprehensive', 'deferred', 'mixed-types'],\n    config: {\n      item_mix: {\n        single_select: 0.6,\n        short_answer: 0.4,\n        cloze: 0,\n        numeric: 0,\n        multi_step: 0\n      },\n      timing: {\n        total_minutes: 30,\n        per_item_seconds: 90,\n        mode: 'soft'\n      },\n      feedback: 'on_submit',\n      difficulty: 'balanced',\n      hints: true\n    }\n  },\n\n  stem_problem_set: {\n    id: 'stem_problem_set',\n    label: 'STEM Problem Set',\n    description: 'Numeric and multi-step problems with tiered hints',\n    icon: 'settings',\n    category: 'assessment',\n    tags: ['stem', 'complex', 'tiered-hints'],\n    config: {\n      item_mix: {\n        numeric: 0.7,\n        multi_step: 0.3,\n        single_select: 0,\n        short_answer: 0,\n        cloze: 0\n      },\n      timing: {\n        total_minutes: 45,\n        per_item_seconds: 300,\n        mode: 'soft'\n      },\n      feedback: 'tiered_hints',\n      difficulty: 'harder',\n      hints: true\n    }\n  }\n};\n\n/**\n * Extended presets for future use\n */\nexport const EXTENDED_PRESETS: PresetRegistry = {\n  quick_practice: {\n    id: 'quick_practice',\n    label: 'Quick Practice',\n    description: 'Fast-paced practice session with immediate feedback',\n    icon: 'zap',\n    category: 'practice',\n    tags: ['quick', 'practice', 'immediate'],\n    config: {\n      item_mix: {\n        single_select: 0.8,\n        cloze: 0.2,\n        short_answer: 0,\n        numeric: 0,\n        multi_step: 0\n      },\n      timing: {\n        total_minutes: 10,\n        per_item_seconds: 30,\n        mode: 'hard'\n      },\n      feedback: 'immediate',\n      difficulty: 'easier',\n      hints: true\n    }\n  },\n\n  comprehensive_review: {\n    id: 'comprehensive_review',\n    label: 'Comprehensive Review',\n    description: 'Thorough review covering all question types',\n    icon: 'book-open',\n    category: 'review',\n    tags: ['comprehensive', 'review', 'all-types'],\n    config: {\n      item_mix: {\n        single_select: 0.4,\n        short_answer: 0.3,\n        numeric: 0.2,\n        multi_step: 0.1,\n        cloze: 0\n      },\n      timing: {\n        total_minutes: 60,\n        per_item_seconds: 120,\n        mode: 'soft'\n      },\n      feedback: 'on_submit',\n      difficulty: 'balanced',\n      hints: true\n    }\n  },\n\n  exam_preparation: {\n    id: 'exam_preparation',\n    label: 'Exam Preparation',\n    description: 'Strict timing with no hints for exam simulation',\n    icon: 'graduation-cap',\n    category: 'assessment',\n    tags: ['exam', 'strict', 'no-hints'],\n    config: {\n      item_mix: {\n        single_select: 0.7,\n        short_answer: 0.2,\n        numeric: 0.1,\n        multi_step: 0,\n        cloze: 0\n      },\n      timing: {\n        total_minutes: 90,\n        per_item_seconds: 90,\n        mode: 'hard'\n      },\n      feedback: 'end_only',\n      difficulty: 'harder',\n      hints: false\n    }\n  }\n};\n\n/**\n * Get all available presets\n */\nexport function getAllPresets(): PresetRegistry {\n  return { ...STYLE_PRESETS, ...EXTENDED_PRESETS };\n}\n\n/**\n * Get MVP presets only\n */\nexport function getMVPPresets(): PresetRegistry {\n  return STYLE_PRESETS;\n}\n\n/**\n * Get preset by ID\n */\nexport function getPreset(presetId: string): StylePreset | null {\n  const allPresets = getAllPresets();\n  return allPresets[presetId] || null;\n}\n\n/**\n * Get presets by category\n */\nexport function getPresetsByCategory(category: string): StylePreset[] {\n  const allPresets = getAllPresets();\n  return Object.values(allPresets).filter(preset => preset.category === category);\n}\n\n/**\n * Get presets by tags\n */\nexport function getPresetsByTags(tags: string[]): StylePreset[] {\n  const allPresets = getAllPresets();\n  return Object.values(allPresets).filter(preset =>\n    tags.some(tag => preset.tags.includes(tag))\n  );\n}\n\n/**\n * Search presets by query\n */\nexport function searchPresets(query: string): StylePreset[] {\n  const allPresets = getAllPresets();\n  const lowercaseQuery = query.toLowerCase();\n  \n  return Object.values(allPresets).filter(preset =>\n    preset.label.toLowerCase().includes(lowercaseQuery) ||\n    preset.description.toLowerCase().includes(lowercaseQuery) ||\n    preset.tags.some(tag => tag.toLowerCase().includes(lowercaseQuery))\n  );\n}\n\n/**\n * Validate preset configuration\n */\nexport function validatePresetConfig(config: StyleConfig): {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n} {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n\n  // Validate item_mix\n  if (config.item_mix) {\n    const sum = Object.values(config.item_mix).reduce((a, b) => a + b, 0);\n    if (Math.abs(sum - 1.0) > 0.01) {\n      errors.push(`Item mix sums to ${sum.toFixed(2)}, should be 1.0`);\n    }\n    \n    const hasNegativeValues = Object.values(config.item_mix).some(v => v < 0);\n    if (hasNegativeValues) {\n      errors.push('Item mix contains negative values');\n    }\n  }\n\n  // Validate timing\n  if (config.timing) {\n    if (config.timing.total_minutes && config.timing.total_minutes <= 0) {\n      errors.push('Total minutes must be positive');\n    }\n    \n    if (config.timing.per_item_seconds && config.timing.per_item_seconds <= 0) {\n      errors.push('Per item seconds must be positive');\n    }\n    \n    if (config.timing.mode === 'hard' && config.timing.per_item_seconds && config.timing.per_item_seconds < 5) {\n      errors.push('Hard timing requires â‰¥5 seconds per item');\n    }\n  }\n\n  // Validate feedback and hints consistency\n  if (config.feedback === 'end_only' && config.hints === true) {\n    warnings.push('End-only feedback typically disables hints');\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings\n  };\n}\n\n/**\n * Get preset recommendations based on context\n */\nexport function getPresetRecommendations(context: {\n  timeAvailable?: number;\n  difficulty?: string;\n  questionTypes?: string[];\n  feedbackPreference?: string;\n}): StylePreset[] {\n  const allPresets = getAllPresets();\n  const recommendations: StylePresetRecommendation[] = [];\n\n  Object.values(allPresets).forEach(preset => {\n    let score = 0;\n\n    // Time-based scoring\n    if (context.timeAvailable && preset.config.timing?.total_minutes) {\n      const timeDiff = Math.abs(context.timeAvailable - preset.config.timing.total_minutes);\n      score += Math.max(0, 10 - timeDiff / 5); // Closer time = higher score\n    }\n\n    // Difficulty-based scoring\n    if (context.difficulty && preset.config.difficulty === context.difficulty) {\n      score += 10;\n    }\n\n    // Question type scoring\n    if (context.questionTypes && preset.config.item_mix) {\n      const matchingTypes = context.questionTypes.filter(type => \n        preset.config.item_mix?.[type] && preset.config.item_mix[type] > 0\n      );\n      score += matchingTypes.length * 5;\n    }\n\n    // Feedback preference scoring\n    if (context.feedbackPreference && preset.config.feedback === context.feedbackPreference) {\n      score += 10;\n    }\n\n    if (score > 0) {\n      recommendations.push({ ...preset, score } as StylePresetRecommendation);\n    }\n  });\n\n  // Sort by score and return top recommendations\n  return recommendations\n    .sort((a, b) => b.score - a.score)\n    .slice(0, 3)\n    .map(preset => {\n      const { score, ...presetWithoutScore } = preset;\n      return presetWithoutScore;\n    });\n}\n\n/**\n * Export preset configuration as JSON\n */\nexport function exportPresetConfig(preset: StylePreset): string {\n  return JSON.stringify(preset.config, null, 2);\n}\n\n/**\n * Import preset configuration from JSON\n */\nexport function importPresetConfig(jsonString: string): StyleConfig | null {\n  try {\n    const config = JSON.parse(jsonString);\n    const validation = validatePresetConfig(config);\n    \n    if (validation.isValid) {\n      return config;\n    } else {\n      console.error('Invalid preset configuration:', validation.errors);\n      return null;\n    }\n  } catch (error) {\n    console.error('Failed to parse preset configuration:', error);\n    return null;\n  }\n}\n"],"names":["EXTENDED_PRESETS","STYLE_PRESETS","exportPresetConfig","getAllPresets","getMVPPresets","getPreset","getPresetRecommendations","getPresetsByCategory","getPresetsByTags","importPresetConfig","searchPresets","validatePresetConfig","mcq_quiz","id","label","description","icon","category","tags","config","item_mix","single_select","cloze","short_answer","numeric","multi_step","timing","total_minutes","per_item_seconds","mode","feedback","difficulty","hints","mixed_checkpoint","stem_problem_set","quick_practice","comprehensive_review","exam_preparation","presetId","allPresets","Object","values","filter","preset","some","tag","includes","query","lowercaseQuery","toLowerCase","errors","warnings","sum","reduce","a","b","Math","abs","push","toFixed","hasNegativeValues","v","isValid","length","context","recommendations","forEach","score","timeAvailable","timeDiff","max","questionTypes","matchingTypes","type","feedbackPreference","sort","slice","map","presetWithoutScore","JSON","stringify","jsonString","parse","validation","console","error"],"mappings":"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"}