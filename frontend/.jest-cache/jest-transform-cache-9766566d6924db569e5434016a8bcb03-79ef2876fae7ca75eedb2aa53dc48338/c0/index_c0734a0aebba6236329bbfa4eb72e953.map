{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/guided-setup/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport { useGuidedSetupState, GuidedProjectSetup } from './hooks/useGuidedSetupState';\nimport { useStepNavigation } from './hooks/useStepNavigation';\nimport { ProjectSummaryColorful } from '@/features/projects';\nimport { ProjectSetup } from '../../types';\nimport { StepIndicator } from './components/StepIndicator';\nimport { STEP_CONFIG } from './constants';\n\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\nimport KeyboardShortcuts from './components/KeyboardShortcuts';\n\n// Import step components\nimport { \n  ProjectNameStep,\n  EducationLevelStep,\n  SyllabusUploadStep,\n  ExtractionResultsStep,\n  CourseContentUploadStep,\n  TestUploadStep\n} from '@/features/projects';\nimport { SkipButton } from '@/features/projects';\n\ninterface GuidedSetupProps {\n  onBack: () => void;\n}\n\nexport default function GuidedSetup({ onBack }: GuidedSetupProps) {\n  const {\n    setup,\n    extractedData,\n    setExtractedData,\n    syllabusFileName,\n    isSyllabusAnalysisComplete,\n    setHasUnsavedChanges,\n    handleOptionSelect,\n    handleSyllabusUploadComplete,\n    handleCourseContentUploadComplete,\n    handleTestUploadComplete,\n    resetSyllabusUploadState,\n  } = useGuidedSetupState();\n\n  const {\n    currentStepIndex,\n    currentStepData,\n    isFirstStep,\n    isLastStep,\n    showSummary,\n    setShowSummary,\n    progress,\n    getCurrentStepIndex,\n    getTotalSteps,\n    isStepComplete,\n    handleNext,\n    handleBack,\n    handleSkip,\n    handleBackWithCleanup,\n    canSkipCurrentStep,\n  } = useStepNavigation(setup as ProjectSetup, onBack, extractedData);\n\n  // Keyboard navigation\n  useKeyboardNavigation({\n    onNext: handleNext,\n    onBack: handleBackWithCleanup,\n    onSkip: handleSkip,\n    canGoNext: isStepComplete(),\n    canGoBack: !isFirstStep,\n    canSkip: canSkipCurrentStep() && !isStepComplete(),\n    enabled: !showSummary\n  });\n\n  const renderStepContent = () => {\n    switch (currentStepData.id) {\n      case 'projectName':\n        return (\n          <ProjectNameStep\n            projectName={setup.projectName}\n            onProjectNameChange={(value: string) => handleOptionSelect('projectName', value)}\n          />\n        );\n      case 'educationLevel':\n        return (\n          <EducationLevelStep\n            testLevel={setup.testLevel}\n            onTestLevelChange={(value: string) => handleOptionSelect('testLevel', value)}\n          />\n        );\n      case 'uploadSyllabus':\n        return (\n          <SyllabusUploadStep\n            onUploadComplete={handleSyllabusUploadComplete}\n            onNext={handleNext}\n            onBack={handleBack}\n            onSkip={handleSkip}\n            hasUploadCompleted={isSyllabusAnalysisComplete}\n            onResetUploadState={resetSyllabusUploadState}\n          />\n        );\n      case 'extractionResults':\n        if (!extractedData) {\n          return (\n            <div className=\"text-center py-8\">\n              <p className=\"text-gray-600\">No extraction results to review.</p>\n              <Button onClick={handleNext} className=\"mt-4\">\n                Continue\n              </Button>\n            </div>\n          );\n        }\n        return (\n          <ExtractionResultsStep\n            extractedData={extractedData}\n            fileName={syllabusFileName}\n            onConfirm={handleNext}\n            onSave={(updatedData: any) => {\n              // Update the extracted data with the edited version\n              setExtractedData(updatedData);\n              setHasUnsavedChanges(true);\n            }}\n            onEdit={() => {\n              // Go back to upload step\n              handleBack();\n            }}\n            showNavigation={true}\n          />\n        );\n      case 'courseContentUpload':\n        return (\n          <CourseContentUploadStep\n            onUploadComplete={handleCourseContentUploadComplete}\n          />\n        );\n      case 'testUpload':\n        return (\n          <TestUploadStep\n            onUploadComplete={handleTestUploadComplete}\n          />\n        );\n      default:\n        return (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-600\">Unknown step.</p>\n            <Button onClick={handleNext} className=\"mt-4\">\n              Continue\n            </Button>\n          </div>\n        );\n    }\n  };\n\n  if (showSummary) {\n    return <ProjectSummaryColorful setup={setup} onBack={() => setShowSummary(false)} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <div className=\"max-w-4xl mx-auto p-4 sm:p-6 lg:p-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-4 sm:mb-6 lg:mb-8\">\n          <Button variant=\"ghost\" onClick={handleBackWithCleanup} className=\"flex items-center\">\n            <ChevronLeft size={16} className=\"mr-1\" />\n            Back\n          </Button>\n          <div className=\"flex items-center gap-2 sm:gap-4\">\n            {/* hasUnsavedChanges removed */}\n            <div className=\"text-xs sm:text-sm text-gray-600\">\n              Step {getCurrentStepIndex()} of {getTotalSteps()}\n            </div>\n            <KeyboardShortcuts />\n          </div>\n        </div>\n\n        {/* Step Indicator */}\n        <StepIndicator \n          steps={STEP_CONFIG}\n          currentStepIndex={currentStepIndex}\n          completedSteps={[]} // TODO: Track completed steps\n          skippedSteps={!extractedData ? ['extractionResults'] : []}\n        />\n        \n\n\n        {/* Progress Bar */}\n        <div className=\"mb-4 sm:mb-6 lg:mb-8\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-xs sm:text-sm font-medium text-gray-700\">Progress</span>\n            <span className=\"text-xs sm:text-sm text-gray-500\">{Math.round(progress)}%</span>\n          </div>\n          <Progress value={progress} className=\"h-2\" />\n        </div>\n\n        {/* Step Content */}\n        <Card className=\"max-w-2xl mx-auto\">\n          <CardHeader className=\"text-center\">\n            <div className=\"w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-4\">\n              {(() => { const Icon = currentStepData.icon as any; return <Icon className=\"h-6 w-6 sm:h-8 sm:w-8 text-white\" />; })()}\n            </div>\n            <CardTitle className=\"text-xl sm:text-2xl text-slate-900\" data-testid=\"step-title\">{currentStepData.title}</CardTitle>\n            <p className=\"text-sm sm:text-base text-slate-600\">{currentStepData.description}</p>\n          </CardHeader>\n          <CardContent className=\"space-y-4 sm:space-y-6\">\n            {renderStepContent()}\n            \n            {/* Navigation */}\n            <div className=\"flex justify-between pt-4 sm:pt-6\">\n              <Button variant=\"outline\" onClick={handleBackWithCleanup} className=\"text-sm\">\n                {isFirstStep ? 'Back to Selection' : 'Previous'}\n              </Button>\n              <div className=\"flex gap-2\">\n                {canSkipCurrentStep() && (\n                  <SkipButton\n                    onSkip={handleSkip}\n                    text={currentStepData.skipText || \"Skip\"}\n                    disabled={false}\n                  />\n                )}\n                <Button \n                  onClick={handleNext}\n                  disabled={!isStepComplete()}\n                  className=\"bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 text-sm\"\n                >\n                  {isLastStep ? 'Review & Create' : 'Next'}\n                  <ChevronRight size={16} className=\"ml-2\" />\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":["GuidedSetup","onBack","setup","extractedData","setExtractedData","syllabusFileName","isSyllabusAnalysisComplete","setHasUnsavedChanges","handleOptionSelect","handleSyllabusUploadComplete","handleCourseContentUploadComplete","handleTestUploadComplete","resetSyllabusUploadState","useGuidedSetupState","currentStepIndex","currentStepData","isFirstStep","isLastStep","showSummary","setShowSummary","progress","getCurrentStepIndex","getTotalSteps","isStepComplete","handleNext","handleBack","handleSkip","handleBackWithCleanup","canSkipCurrentStep","useStepNavigation","useKeyboardNavigation","onNext","onSkip","canGoNext","canGoBack","canSkip","enabled","renderStepContent","id","ProjectNameStep","projectName","onProjectNameChange","value","EducationLevelStep","testLevel","onTestLevelChange","SyllabusUploadStep","onUploadComplete","hasUploadCompleted","onResetUploadState","div","className","p","Button","onClick","ExtractionResultsStep","fileName","onConfirm","onSave","updatedData","onEdit","showNavigation","CourseContentUploadStep","TestUploadStep","ProjectSummaryColorful","variant","ChevronLeft","size","KeyboardShortcuts","StepIndicator","steps","STEP_CONFIG","completedSteps","skippedSteps","span","Math","round","Progress","Card","CardHeader","Icon","icon","CardTitle","data-testid","title","description","CardContent","SkipButton","text","skipText","disabled","ChevronRight"],"mappings":"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"}