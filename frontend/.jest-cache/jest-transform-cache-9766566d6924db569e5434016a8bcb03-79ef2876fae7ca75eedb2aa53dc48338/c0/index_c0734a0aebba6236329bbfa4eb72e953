52b5c6e4a3ac4edf8ba7ccb602bca1ba
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return GuidedSetup;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _button = require("../../../../components/ui/button");
const _card = require("../../../../components/ui/card");
const _progress = require("../../../../components/ui/progress");
const _lucidereact = require("lucide-react");
const _useGuidedSetupState = require("./hooks/useGuidedSetupState");
const _useStepNavigation = require("./hooks/useStepNavigation");
const _projects = require("../..");
const _StepIndicator = require("./components/StepIndicator");
const _constants = require("./constants");
const _useKeyboardNavigation = require("./hooks/useKeyboardNavigation");
const _KeyboardShortcuts = /*#__PURE__*/ _interop_require_default(require("./components/KeyboardShortcuts"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function GuidedSetup({ onBack }) {
    const { setup, extractedData, setExtractedData, syllabusFileName, isSyllabusAnalysisComplete, setHasUnsavedChanges, handleOptionSelect, handleSyllabusUploadComplete, handleCourseContentUploadComplete, handleTestUploadComplete, resetSyllabusUploadState } = (0, _useGuidedSetupState.useGuidedSetupState)();
    const { currentStepIndex, currentStepData, isFirstStep, isLastStep, showSummary, setShowSummary, progress, getCurrentStepIndex, getTotalSteps, isStepComplete, handleNext, handleBack, handleSkip, handleBackWithCleanup, canSkipCurrentStep } = (0, _useStepNavigation.useStepNavigation)(setup, onBack, extractedData);
    // Keyboard navigation
    (0, _useKeyboardNavigation.useKeyboardNavigation)({
        onNext: handleNext,
        onBack: handleBackWithCleanup,
        onSkip: handleSkip,
        canGoNext: isStepComplete(),
        canGoBack: !isFirstStep,
        canSkip: canSkipCurrentStep() && !isStepComplete(),
        enabled: !showSummary
    });
    const renderStepContent = ()=>{
        switch(currentStepData.id){
            case 'projectName':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.ProjectNameStep, {
                    projectName: setup.projectName,
                    onProjectNameChange: (value)=>handleOptionSelect('projectName', value)
                });
            case 'educationLevel':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.EducationLevelStep, {
                    testLevel: setup.testLevel,
                    onTestLevelChange: (value)=>handleOptionSelect('testLevel', value)
                });
            case 'uploadSyllabus':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.SyllabusUploadStep, {
                    onUploadComplete: handleSyllabusUploadComplete,
                    onNext: handleNext,
                    onBack: handleBack,
                    onSkip: handleSkip,
                    hasUploadCompleted: isSyllabusAnalysisComplete,
                    onResetUploadState: resetSyllabusUploadState
                });
            case 'extractionResults':
                if (!extractedData) {
                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "text-center py-8",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-gray-600",
                                children: "No extraction results to review."
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                onClick: handleNext,
                                className: "mt-4",
                                children: "Continue"
                            })
                        ]
                    });
                }
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.ExtractionResultsStep, {
                    extractedData: extractedData,
                    fileName: syllabusFileName,
                    onConfirm: handleNext,
                    onSave: (updatedData)=>{
                        // Update the extracted data with the edited version
                        setExtractedData(updatedData);
                        setHasUnsavedChanges(true);
                    },
                    onEdit: ()=>{
                        // Go back to upload step
                        handleBack();
                    },
                    showNavigation: true
                });
            case 'courseContentUpload':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.CourseContentUploadStep, {
                    onUploadComplete: handleCourseContentUploadComplete
                });
            case 'testUpload':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.TestUploadStep, {
                    onUploadComplete: handleTestUploadComplete
                });
            default:
                return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "text-center py-8",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "text-gray-600",
                            children: "Unknown step."
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                            onClick: handleNext,
                            className: "mt-4",
                            children: "Continue"
                        })
                    ]
                });
        }
    };
    if (showSummary) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.ProjectSummaryColorful, {
            setup: setup,
            onBack: ()=>setShowSummary(false)
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "max-w-4xl mx-auto p-4 sm:p-6 lg:p-8",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between mb-4 sm:mb-6 lg:mb-8",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                            variant: "ghost",
                            onClick: handleBackWithCleanup,
                            className: "flex items-center",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronLeft, {
                                    size: 16,
                                    className: "mr-1"
                                }),
                                "Back"
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-2 sm:gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "text-xs sm:text-sm text-gray-600",
                                    children: [
                                        "Step ",
                                        getCurrentStepIndex(),
                                        " of ",
                                        getTotalSteps()
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_KeyboardShortcuts.default, {})
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_StepIndicator.StepIndicator, {
                    steps: _constants.STEP_CONFIG,
                    currentStepIndex: currentStepIndex,
                    completedSteps: [],
                    skippedSteps: !extractedData ? [
                        'extractionResults'
                    ] : []
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "mb-4 sm:mb-6 lg:mb-8",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between mb-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "text-xs sm:text-sm font-medium text-gray-700",
                                    children: "Progress"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    className: "text-xs sm:text-sm text-gray-500",
                                    children: [
                                        Math.round(progress),
                                        "%"
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                            value: progress,
                            className: "h-2"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                    className: "max-w-2xl mx-auto",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                            className: "text-center",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-4",
                                    children: (()=>{
                                        const Icon = currentStepData.icon;
                                        return /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                            className: "h-6 w-6 sm:h-8 sm:w-8 text-white"
                                        });
                                    })()
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                    className: "text-xl sm:text-2xl text-slate-900",
                                    "data-testid": "step-title",
                                    children: currentStepData.title
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-sm sm:text-base text-slate-600",
                                    children: currentStepData.description
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                            className: "space-y-4 sm:space-y-6",
                            children: [
                                renderStepContent(),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex justify-between pt-4 sm:pt-6",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "outline",
                                            onClick: handleBackWithCleanup,
                                            className: "text-sm",
                                            children: isFirstStep ? 'Back to Selection' : 'Previous'
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex gap-2",
                                            children: [
                                                canSkipCurrentStep() && /*#__PURE__*/ (0, _jsxruntime.jsx)(_projects.SkipButton, {
                                                    onSkip: handleSkip,
                                                    text: currentStepData.skipText || "Skip",
                                                    disabled: false
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                    onClick: handleNext,
                                                    disabled: !isStepComplete(),
                                                    className: "bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 text-sm",
                                                    children: [
                                                        isLastStep ? 'Review & Create' : 'Next',
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
                                                            size: 16,
                                                            className: "ml-2"
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,