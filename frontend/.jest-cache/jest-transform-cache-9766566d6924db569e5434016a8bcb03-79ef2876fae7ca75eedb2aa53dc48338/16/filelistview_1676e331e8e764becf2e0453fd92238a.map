{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/files/file-list-view.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { \n  MoreVertical,\n  Star,\n  Download,\n  Share2,\n  Edit3,\n  Trash2,\n  Eye,\n  Clock\n} from \"lucide-react\";\nimport { FileItem } from '@/lib/file-utils';\nimport { getFileIcon, getFileTypeColor, formatFileSize } from '@/lib/file-utils';\n\ninterface FileListViewProps {\n  files: FileItem[];\n  selectedFiles: Set<string>;\n  onSelectFile: (fileId: string) => void;\n  onSelectAll: () => void;\n  onToggleFavorite: (fileId: string) => void;\n  onFileAction: (action: string, fileId: string) => void;\n}\n\nexport function FileListView({\n  files,\n  selectedFiles,\n  onSelectFile,\n  onSelectAll,\n  onToggleFavorite,\n  onFileAction,\n}: FileListViewProps) {\n  const allSelected = files.length > 0 && selectedFiles.size === files.length;\n  const someSelected = selectedFiles.size > 0 && selectedFiles.size < files.length;\n\n  return (\n    <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className=\"w-12\">\n              <Checkbox\n                checked={allSelected}\n                ref={(el) => {\n                  if (el) el.indeterminate = someSelected;\n                }}\n                onCheckedChange={onSelectAll}\n              />\n            </TableHead>\n            <TableHead>Name</TableHead>\n            <TableHead>Size</TableHead>\n            <TableHead>Date modified</TableHead>\n            <TableHead className=\"w-12\"></TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {files.map((file) => (\n            <TableRow key={file.id} className=\"hover:bg-gray-50\">\n              <TableCell>\n                <Checkbox\n                  checked={selectedFiles.has(file.id)}\n                  onCheckedChange={() => onSelectFile(file.id)}\n                />\n              </TableCell>\n              <TableCell>\n                <div className=\"flex items-center gap-3\">\n                  <div className={`p-2 rounded-lg bg-gradient-to-r ${file.color}`}>\n                    {getFileIcon(file.type)}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"font-medium text-gray-900 truncate\">\n                        {file.name}\n                      </span>\n                      <Badge className={`${getFileTypeColor(file.type)} text-xs`}>\n                        {file.type.toUpperCase()}\n                      </Badge>\n                      {file.tags && file.tags.length > 0 && (\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {file.tags[0]}\n                        </Badge>\n                      )}\n                    </div>\n                    <div className=\"flex items-center gap-3 text-xs text-gray-500 mt-1\">\n                      <span className=\"capitalize\">{file.visibility}</span>\n                      {file.versionCount && file.versionCount > 1 && (\n                        <>\n                          <span>•</span>\n                          <span>{file.versionCount} versions</span>\n                        </>\n                      )}\n                      {file.sharedWith && file.sharedWith.length > 0 && (\n                        <>\n                          <span>•</span>\n                          <span>Shared with {file.sharedWith.length}</span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </TableCell>\n              <TableCell>\n                <span className=\"text-sm text-gray-600\">{formatFileSize(file.size)}</span>\n              </TableCell>\n              <TableCell>\n                <div className=\"flex items-center gap-1 text-sm text-gray-600\">\n                  <Clock className=\"h-4 w-4\" />\n                  <span>{file.lastModified}</span>\n                </div>\n              </TableCell>\n              <TableCell>\n                <div className=\"flex items-center gap-1\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => onToggleFavorite(file.id)}\n                    className=\"p-1 h-8 w-8\"\n                  >\n                    <Star \n                      className={`h-4 w-4 ${\n                        file.isFavorite ? 'fill-yellow-400 text-yellow-400' : 'text-gray-400'\n                      }`} \n                    />\n                  </Button>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button variant=\"ghost\" size=\"sm\" className=\"p-1 h-8 w-8\">\n                        <MoreVertical className=\"h-4 w-4\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                      <DropdownMenuItem onClick={() => onFileAction('preview', file.id)}>\n                        <Eye className=\"h-4 w-4 mr-2\" />\n                        Open/Preview\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => onFileAction('download', file.id)}>\n                        <Download className=\"h-4 w-4 mr-2\" />\n                        Download\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => onFileAction('share', file.id)}>\n                        <Share2 className=\"h-4 w-4 mr-2\" />\n                        Share/Get link\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => onFileAction('rename', file.id)}>\n                        <Edit3 className=\"h-4 w-4 mr-2\" />\n                        Rename\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => onFileAction('move', file.id)}>\n                        <Edit3 className=\"h-4 w-4 mr-2\" />\n                        Move\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => onFileAction('versions', file.id)}>\n                        <Clock className=\"h-4 w-4 mr-2\" />\n                        Version History\n                      </DropdownMenuItem>\n                      <DropdownMenuItem \n                        className=\"text-red-600\"\n                        onClick={() => onFileAction('delete', file.id)}\n                      >\n                        <Trash2 className=\"h-4 w-4 mr-2\" />\n                        Delete\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n"],"names":["FileListView","files","selectedFiles","onSelectFile","onSelectAll","onToggleFavorite","onFileAction","allSelected","length","size","someSelected","div","className","Table","TableHeader","TableRow","TableHead","Checkbox","checked","ref","el","indeterminate","onCheckedChange","TableBody","map","file","TableCell","has","id","color","getFileIcon","type","span","name","Badge","getFileTypeColor","toUpperCase","tags","variant","visibility","versionCount","sharedWith","formatFileSize","Clock","lastModified","Button","onClick","Star","isFavorite","DropdownMenu","DropdownMenuTrigger","asChild","MoreVertical","DropdownMenuContent","align","DropdownMenuItem","Eye","Download","Share2","Edit3","Trash2"],"mappings":"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"}