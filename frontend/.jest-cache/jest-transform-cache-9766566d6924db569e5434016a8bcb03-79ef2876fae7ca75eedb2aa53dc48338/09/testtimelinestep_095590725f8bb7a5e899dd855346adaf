0b81b4b59c1f46c8490e9263ae5cdf77
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "TestTimelineStep", {
    enumerable: true,
    get: function() {
        return TestTimelineStep;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _label = require("../../../../components/ui/label");
const _button = require("../../../../components/ui/button");
const _input = require("../../../../components/ui/input");
const _badge = require("../../../../components/ui/badge");
const _tabs = require("../../../../components/ui/tabs");
const _lucidereact = require("lucide-react");
const _dynamic = /*#__PURE__*/ _interop_require_default(require("next/dynamic"));
const _ai = require("../ai");
const _aianalysis = require("../../services/ai-analysis");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const ReactCalendar = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("react-calendar"))), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("react-calendar")
            ]
    },
    ssr: false,
    loading: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "w-full h-64 bg-gray-100 rounded-lg animate-pulse flex items-center justify-center",
            children: "Loading calendar..."
        })
});
function TestTimelineStep({ testFiles, importantDates, onTestFilesChange, onTestFileRemove, onAddDate, onRemoveDate, onApplyAITopics, onApplyAIDates, onApplyAITestTypes, onApplyAIRecommendations, dateTypeOptions }) {
    const [isTestDragOver, setIsTestDragOver] = (0, _react.useState)(false);
    const [isAnalyzing, setIsAnalyzing] = (0, _react.useState)(false);
    const [showAIPreview, setShowAIPreview] = (0, _react.useState)(false);
    const [aiResults, setAiResults] = (0, _react.useState)({
        topics: [],
        dates: [],
        testTypes: []
    });
    const [newDate, setNewDate] = (0, _react.useState)({
        date: '',
        description: '',
        type: 'exam'
    });
    const testFileInputRef = (0, _react.useRef)(null);
    // Trigger AI analysis when test files are uploaded
    (0, _react.useEffect)(()=>{
        if (testFiles.length > 0 && !isAnalyzing && !showAIPreview) {
            analyzeTestFiles();
        }
    }, [
        testFiles
    ]);
    const analyzeTestFiles = async ()=>{
        if (testFiles.length === 0) return;
        setIsAnalyzing(true);
        try {
            const results = await (0, _aianalysis.analyzeUploadedFiles)(testFiles);
            setAiResults(results);
            setShowAIPreview(true);
        } catch (error) {
            console.error('AI analysis failed:', error);
        } finally{
            setIsAnalyzing(false);
        }
    };
    const handleTestDragOver = (0, _react.useCallback)((e)=>{
        e.preventDefault();
        setIsTestDragOver(true);
    }, []);
    const handleTestDragLeave = (0, _react.useCallback)((e)=>{
        e.preventDefault();
        setIsTestDragOver(false);
    }, []);
    const handleTestDrop = (0, _react.useCallback)((e)=>{
        e.preventDefault();
        setIsTestDragOver(false);
        const droppedFiles = Array.from(e.dataTransfer.files);
        onTestFilesChange([
            ...testFiles,
            ...droppedFiles
        ]);
    }, [
        testFiles,
        onTestFilesChange
    ]);
    const handleTestFileSelect = (0, _react.useCallback)((e)=>{
        const selectedFiles = Array.from(e.target.files || []);
        onTestFilesChange([
            ...testFiles,
            ...selectedFiles
        ]);
    }, [
        testFiles,
        onTestFilesChange
    ]);
    const formatFileSize = (bytes)=>{
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = [
            'Bytes',
            'KB',
            'MB',
            'GB'
        ];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    };
    const formatDate = (dateString)=>{
        const date = new Date(dateString);
        return date.toLocaleDateString('en-US', {
            weekday: 'short',
            year: 'numeric',
            month: 'short',
            day: 'numeric'
        });
    };
    const getDateTypeLabel = (value)=>{
        return dateTypeOptions.find((opt)=>opt.value === value)?.label || value;
    };
    const getDateTypeColor = (value)=>{
        return dateTypeOptions.find((opt)=>opt.value === value)?.color || 'bg-gray-100 text-gray-800';
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "space-y-6",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.Tabs, {
            defaultValue: "tests",
            className: "w-full",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsList, {
                    className: "grid w-full grid-cols-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsTrigger, {
                            value: "tests",
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                                    className: "h-4 w-4"
                                }),
                                "Previous Tests"
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsTrigger, {
                            value: "timeline",
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CalendarDays, {
                                    className: "h-4 w-4"
                                }),
                                "Important Dates"
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                    value: "tests",
                    className: "space-y-4",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                className: "text-sm sm:text-base font-medium",
                                children: "Upload Previous Tests/Exams"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: `border-2 border-dashed rounded-lg p-6 text-center transition-all duration-300 ${isTestDragOver ? 'border-blue-400 bg-blue-50/50 scale-105' : 'border-gray-300 hover:border-blue-300 hover:bg-gray-50/50'}`,
                                onDragOver: handleTestDragOver,
                                onDragLeave: handleTestDragLeave,
                                onDrop: handleTestDrop,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "space-y-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "mx-auto w-12 h-12 bg-gradient-to-r from-purple-400 to-pink-600 rounded-full flex items-center justify-center",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Upload, {
                                                className: "h-6 w-6 text-white"
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                    className: "text-base font-semibold text-slate-900 mb-2",
                                                    children: isTestDragOver ? 'Drop your test files here!' : 'Upload previous tests and exams'
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-slate-600 mb-3",
                                                    children: "Upload previous exams, quizzes, practice tests, or sample questions to help with preparation."
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-xs text-gray-500 mb-3",
                                                    children: "Supported formats: PDF, DOCX, PPTX, TXT, PNG, JPG"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                    variant: "outline",
                                                    onClick: ()=>testFileInputRef.current?.click(),
                                                    className: "border-purple-200 text-purple-600 hover:bg-purple-50",
                                                    children: "Browse test files"
                                                })
                                            ]
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                ref: testFileInputRef,
                                type: "file",
                                multiple: true,
                                className: "hidden",
                                onChange: handleTestFileSelect,
                                accept: ".pdf,.docx,.pptx,.txt,.png,.jpg,.jpeg"
                            }),
                            testFiles.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "space-y-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                        className: "font-medium text-slate-900",
                                        children: [
                                            "Test Documents (",
                                            testFiles.length,
                                            ")"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "space-y-2 max-h-40 overflow-y-auto",
                                        children: testFiles.map((file, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center justify-between p-3 bg-purple-50 border border-purple-200 rounded-lg",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center space-x-3",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                                                                className: "h-5 w-5 text-purple-600"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                        className: "text-sm font-medium text-slate-900",
                                                                        children: file.name
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                        className: "text-xs text-gray-500",
                                                                        children: formatFileSize(file.size)
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                        variant: "ghost",
                                                        size: "sm",
                                                        onClick: ()=>onTestFileRemove(index),
                                                        className: "text-red-500 hover:text-red-700 hover:bg-red-50",
                                                        children: "Remove"
                                                    })
                                                ]
                                            }, index))
                                    })
                                ]
                            }),
                            isAnalyzing && /*#__PURE__*/ (0, _jsxruntime.jsx)(_ai.AILoading, {
                                message: "Analyzing your test files...",
                                subMessage: "Extracting question types, difficulty patterns, and key topics",
                                variant: "purple"
                            }),
                            showAIPreview && /*#__PURE__*/ (0, _jsxruntime.jsx)(_ai.AIPreview, {
                                detectedTopics: aiResults.topics,
                                detectedDates: aiResults.dates,
                                detectedTestTypes: aiResults.testTypes,
                                onApplyTopics: onApplyAITopics,
                                onApplyDates: onApplyAIDates,
                                onApplyTestTypes: onApplyAITestTypes,
                                onApplyRecommendations: onApplyAIRecommendations,
                                onDismiss: ()=>setShowAIPreview(false)
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "text-xs sm:text-sm text-gray-600 bg-purple-50 p-3 rounded-lg border border-purple-200",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.HelpCircle, {
                                        className: "inline h-4 w-4 mr-1 text-purple-600"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                        className: "text-purple-800",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                                children: "AI Enhancement:"
                                            }),
                                            " Uploading previous tests helps our AI understand the format, difficulty level, and question types you'll encounter, enabling better study recommendations!"
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                    value: "timeline",
                    className: "space-y-4",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                className: "text-sm sm:text-base font-medium",
                                children: "Schedule your important dates"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-sm text-gray-600",
                                children: "Add key dates like exams, assignments, and deadlines"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "space-y-3 p-4 bg-gray-50 rounded-lg border",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                        className: "font-medium text-slate-900",
                                        children: "Add New Date"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "grid grid-cols-1 sm:grid-cols-3 gap-3",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                        className: "text-xs font-medium",
                                                        children: "Date"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                        type: "date",
                                                        value: newDate.date,
                                                        onChange: (e)=>setNewDate((prev)=>({
                                                                    ...prev,
                                                                    date: e.target.value
                                                                })),
                                                        className: "text-sm"
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                        className: "text-xs font-medium",
                                                        children: "Type"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("select", {
                                                        value: newDate.type,
                                                        onChange: (e)=>setNewDate((prev)=>({
                                                                    ...prev,
                                                                    type: e.target.value
                                                                })),
                                                        className: "w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500",
                                                        children: dateTypeOptions.map((option)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                value: option.value,
                                                                children: option.label
                                                            }, option.value))
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                        className: "text-xs font-medium",
                                                        children: "Description"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                        placeholder: "e.g., Midterm Exam",
                                                        value: newDate.description,
                                                        onChange: (e)=>setNewDate((prev)=>({
                                                                    ...prev,
                                                                    description: e.target.value
                                                                })),
                                                        className: "text-sm"
                                                    })
                                                ]
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                        onClick: onAddDate,
                                        disabled: !newDate.date || !newDate.description,
                                        className: "w-full sm:w-auto",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Plus, {
                                                className: "h-4 w-4 mr-2"
                                            }),
                                            "Add Date"
                                        ]
                                    })
                                ]
                            }),
                            importantDates.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "space-y-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                        className: "font-medium text-slate-900",
                                        children: [
                                            "Important Dates (",
                                            importantDates.length,
                                            ")"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "space-y-2 max-h-60 overflow-y-auto",
                                        children: importantDates.map((date, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center justify-between p-3 bg-white border border-gray-200 rounded-lg shadow-sm",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center space-x-3",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CalendarDays, {
                                                                className: "h-5 w-5 text-blue-600"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                        className: "text-sm font-medium text-slate-900",
                                                                        children: formatDate(date.date)
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                        className: "text-sm text-gray-600",
                                                                        children: date.description
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                                className: `text-xs ${getDateTypeColor(date.type)}`,
                                                                children: getDateTypeLabel(date.type)
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                        variant: "ghost",
                                                        size: "sm",
                                                        onClick: ()=>onRemoveDate(index),
                                                        className: "text-red-500 hover:text-red-700 hover:bg-red-50",
                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                                            className: "h-4 w-4"
                                                        })
                                                    })
                                                ]
                                            }, index))
                                    })
                                ]
                            }),
                            importantDates.length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "text-center py-8 text-gray-500",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CalendarDays, {
                                        className: "h-12 w-12 mx-auto mb-3 text-gray-300"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        children: "No important dates added yet"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-sm",
                                        children: "Add your first date above to get started"
                                    })
                                ]
                            })
                        ]
                    })
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,