{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/components/__tests__/CreateFlashcardSetWizard-Generation.test.tsx"],"sourcesContent":["import { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport React from 'react'\nimport CreateFlashcardSetWizard from '../CreateFlashcardSetWizard'\nimport { axiosGeneration, axiosApi } from '@/lib/axios'\n\njest.mock('@/lib/axios', () => ({\n  axiosGeneration: { post: jest.fn() },\n  axiosApi: { get: jest.fn(), post: jest.fn(), patch: jest.fn() },\n}))\n\ndescribe('CreateFlashcardSetWizard - Generation', () => {\n  const projectId = '11111111-1111-1111-1111-111111111111'\n\n  function setup(open = true) {\n    const onOpenChange = jest.fn()\n    render(\n      <CreateFlashcardSetWizard\n        projectId={projectId}\n        open={open}\n        onOpenChange={onOpenChange}\n      />\n    )\n    return { onOpenChange }\n  }\n\n  beforeEach(() => {\n    jest.resetAllMocks()\n    process.env.NODE_ENV = 'test'\n  })\n\n  async function goToStep3WithFileSelected() {\n    setup(true)\n\n    // Step 1: choose files\n    await waitFor(() => screen.getByText('How would you like to start?'))\n    fireEvent.click(screen.getByText('Use Files'))\n\n    // Step 2: ensure recent files are shown and select one\n    await waitFor(() => screen.getByText('Recent Files'))\n    // Select the first demo file provided by test-mode fallback\n    fireEvent.click(screen.getByText('Course Syllabus.pdf'))\n\n    // Now Next should be enabled\n    fireEvent.click(screen.getByText('Next'))\n\n    // Step 3 should be visible\n    await waitFor(() => screen.getByText('Generate Flashcards'))\n  }\n\n  it('posts to generation endpoint with X-Test-Mode header in test mode', async () => {\n    ;(axiosGeneration.post as jest.Mock).mockResolvedValue({ data: { deck: { suggested_title: 'Deck', suggested_description: 'Desc' }, cards: [] } })\n\n    await goToStep3WithFileSelected()\n\n    fireEvent.click(screen.getByText('Generate Flashcards'))\n\n    await waitFor(() => {\n      expect(axiosGeneration.post).toHaveBeenCalledWith(\n        `/projects/${projectId}/flashcards/generate`,\n        expect.objectContaining({ project_id: projectId, source_type: 'files' }),\n        expect.objectContaining({ headers: expect.objectContaining({ 'X-Test-Mode': 'true' }) })\n      )\n    })\n  })\n\n  it('handles generation errors gracefully', async () => {\n    ;(axiosGeneration.post as jest.Mock).mockRejectedValue(new Error('boom'))\n\n    await goToStep3WithFileSelected()\n\n    fireEvent.click(screen.getByText('Generate Flashcards'))\n\n    // No throw; just ensure button returns to enabled state eventually\n    await waitFor(() => expect(screen.getByText('Generate Flashcards')).toBeEnabled())\n  })\n})\n"],"names":["jest","mock","axiosGeneration","post","fn","axiosApi","get","patch","describe","projectId","setup","open","onOpenChange","render","CreateFlashcardSetWizard","beforeEach","resetAllMocks","process","env","NODE_ENV","goToStep3WithFileSelected","waitFor","screen","getByText","fireEvent","click","it","mockResolvedValue","data","deck","suggested_title","suggested_description","cards","expect","toHaveBeenCalledWith","objectContaining","project_id","source_type","headers","mockRejectedValue","Error","toBeEnabled"],"mappings":";AAKAA,KAAKC,IAAI,CAAC,eAAe,IAAO,CAAA;QAC9BC,iBAAiB;YAAEC,MAAMH,KAAKI,EAAE;QAAG;QACnCC,UAAU;YAAEC,KAAKN,KAAKI,EAAE;YAAID,MAAMH,KAAKI,EAAE;YAAIG,OAAOP,KAAKI,EAAE;QAAG;IAChE,CAAA;;;;;uBARmD;+DACjC;iFACmB;uBACK;;;;;;AAO1CI,SAAS,yCAAyC;IAChD,MAAMC,YAAY;IAElB,SAASC,MAAMC,OAAO,IAAI;QACxB,MAAMC,eAAeZ,KAAKI,EAAE;QAC5BS,IAAAA,aAAM,gBACJ,qBAACC,iCAAwB;YACvBL,WAAWA;YACXE,MAAMA;YACNC,cAAcA;;QAGlB,OAAO;YAAEA;QAAa;IACxB;IAEAG,WAAW;QACTf,KAAKgB,aAAa;QAClBC,QAAQC,GAAG,CAACC,QAAQ,GAAG;IACzB;IAEA,eAAeC;QACbV,MAAM;QAEN,uBAAuB;QACvB,MAAMW,IAAAA,cAAO,EAAC,IAAMC,aAAM,CAACC,SAAS,CAAC;QACrCC,gBAAS,CAACC,KAAK,CAACH,aAAM,CAACC,SAAS,CAAC;QAEjC,uDAAuD;QACvD,MAAMF,IAAAA,cAAO,EAAC,IAAMC,aAAM,CAACC,SAAS,CAAC;QACrC,4DAA4D;QAC5DC,gBAAS,CAACC,KAAK,CAACH,aAAM,CAACC,SAAS,CAAC;QAEjC,6BAA6B;QAC7BC,gBAAS,CAACC,KAAK,CAACH,aAAM,CAACC,SAAS,CAAC;QAEjC,2BAA2B;QAC3B,MAAMF,IAAAA,cAAO,EAAC,IAAMC,aAAM,CAACC,SAAS,CAAC;IACvC;IAEAG,GAAG,qEAAqE;;QACpExB,sBAAe,CAACC,IAAI,CAAewB,iBAAiB,CAAC;YAAEC,MAAM;gBAAEC,MAAM;oBAAEC,iBAAiB;oBAAQC,uBAAuB;gBAAO;gBAAGC,OAAO,EAAE;YAAC;QAAE;QAE/I,MAAMZ;QAENI,gBAAS,CAACC,KAAK,CAACH,aAAM,CAACC,SAAS,CAAC;QAEjC,MAAMF,IAAAA,cAAO,EAAC;YACZY,OAAO/B,sBAAe,CAACC,IAAI,EAAE+B,oBAAoB,CAC/C,CAAC,UAAU,EAAEzB,UAAU,oBAAoB,CAAC,EAC5CwB,OAAOE,gBAAgB,CAAC;gBAAEC,YAAY3B;gBAAW4B,aAAa;YAAQ,IACtEJ,OAAOE,gBAAgB,CAAC;gBAAEG,SAASL,OAAOE,gBAAgB,CAAC;oBAAE,eAAe;gBAAO;YAAG;QAE1F;IACF;IAEAT,GAAG,wCAAwC;;QACvCxB,sBAAe,CAACC,IAAI,CAAeoC,iBAAiB,CAAC,IAAIC,MAAM;QAEjE,MAAMpB;QAENI,gBAAS,CAACC,KAAK,CAACH,aAAM,CAACC,SAAS,CAAC;QAEjC,mEAAmE;QACnE,MAAMF,IAAAA,cAAO,EAAC,IAAMY,OAAOX,aAAM,CAACC,SAAS,CAAC,wBAAwBkB,WAAW;IACjF;AACF"}