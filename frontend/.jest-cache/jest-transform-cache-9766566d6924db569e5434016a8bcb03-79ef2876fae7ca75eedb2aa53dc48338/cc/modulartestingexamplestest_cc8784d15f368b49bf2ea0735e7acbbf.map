{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/test-utils/examples/modular-testing-examples.test.tsx"],"sourcesContent":["/**\n * Example: How to Use Modular Test Patterns\n * \n * This file demonstrates how to use the modular test patterns\n * for different types of components.\n */\n\nimport React from 'react';\nimport { screen } from '@testing-library/react';\nimport '@testing-library/jest-dom';\n\n// Import modular test utilities\nimport { \n  renderWithProviders,\n  createAuthTestSuite,\n  createFileUploadTestSuite,\n  authScenarios,\n  fileUploadScenarios,\n  setupTestEnvironment\n} from '../../test-utils';\n\n// ============================================================================\n// Example 1: Authentication Component Testing\n// ============================================================================\n\n// Mock component for demonstration\nconst AuthComponent = () => (\n  <div>\n    <input type=\"email\" placeholder=\"Email\" />\n    <input type=\"password\" placeholder=\"Password\" />\n    <button>Sign In</button>\n  </div>\n);\n\ndescribe('AuthComponent - Modular Testing', () => {\n  // Create a complete test suite\n  const authSuite = createAuthTestSuite(AuthComponent);\n\n  describe('Complete Authentication Suite', () => {\n    it('successful login', async () => {\n      await authSuite.testSuccessfulLogin();\n    });\n\n    it('login error', async () => {\n      await authSuite.testLoginError();\n    });\n\n    it('form validation', async () => {\n      await authSuite.testFormValidation();\n    });\n\n    it('accessibility', async () => {\n      await authSuite.testAccessibility();\n    });\n\n    it('performance', async () => {\n      await authSuite.testPerformance();\n    });\n  });\n});\n\n// ============================================================================\n// Example 2: File Upload Component Testing\n// ============================================================================\n\n// Mock file upload component\nconst FileUploadComponent = ({ onUpload }: { onUpload: (files: File[]) => void }) => (\n  <div>\n    <input type=\"file\" multiple />\n    <button onClick={() => onUpload([])}>Upload</button>\n  </div>\n);\n\ndescribe('FileUploadComponent - Modular Testing', () => {\n  const mockOnUpload = jest.fn();\n  \n  // Create a complete test suite\n  const fileUploadSuite = createFileUploadTestSuite(FileUploadComponent, { onUpload: mockOnUpload });\n\n  describe('Complete File Upload Suite', () => {\n    it('file upload', async () => {\n      await fileUploadSuite.testFileUpload();\n    });\n\n    it('file validation', async () => {\n      await fileUploadSuite.testFileValidation();\n    });\n\n    it('drag and drop', async () => {\n      await fileUploadSuite.testDragAndDrop();\n    });\n\n    it('error handling', async () => {\n      await fileUploadSuite.testErrorHandling();\n    });\n\n    it('accessibility', async () => {\n      await fileUploadSuite.testAccessibility();\n    });\n\n    it('performance', async () => {\n      await fileUploadSuite.testPerformance();\n    });\n  });\n});\n\n// ============================================================================\n// Example 3: Custom Component with Manual Pattern Usage\n// ============================================================================\n\nconst CustomComponent = () => (\n  <div>\n    <h1>Custom Component</h1>\n    <button>Click me</button>\n  </div>\n);\n\ndescribe('CustomComponent - Manual Pattern Usage', () => {\n  // Setup test environment\n  const testEnv = setupTestEnvironment({\n    includeAuth: true,\n    includeFileUpload: false,\n    timeout: 5000\n  });\n\n  beforeEach(() => {\n    testEnv.cleanup();\n  });\n\n  describe('Rendering', () => {\n    it('renders with required elements', () => {\n      renderWithProviders(<CustomComponent />);\n      \n      expect(screen.getByText('Custom Component')).toBeInTheDocument();\n      expect(screen.getByRole('button')).toBeInTheDocument();\n    });\n  });\n\n  describe('Interactions', () => {\n    it('handles button click', async () => {\n      renderWithProviders(<CustomComponent />);\n      \n      const button = screen.getByRole('button');\n      // Add your interaction test here\n    });\n  });\n\n  describe('Performance', () => {\n    it('renders within acceptable time', () => {\n      const startTime = performance.now();\n      renderWithProviders(<CustomComponent />);\n      const endTime = performance.now();\n      \n      expect(endTime - startTime).toBeLessThan(100);\n    });\n  });\n});\n\n// ============================================================================\n// Example 4: Data-Driven Testing\n// ============================================================================\n\ndescribe('Data-Driven Testing Examples', () => {\n  describe('Authentication Scenarios', () => {\n    // Test multiple credential scenarios\n    authScenarios.validCredentials.forEach((credentials, index) => {\n      it(`handles valid credentials ${index + 1}`, async () => {\n        const authSuite = createAuthTestSuite(AuthComponent);\n        // Custom test implementation using the credentials\n      });\n    });\n\n    // Test multiple error scenarios\n    authScenarios.errorScenarios.forEach((scenario) => {\n      it(`handles ${scenario.name}`, async () => {\n        const authSuite = createAuthTestSuite(AuthComponent);\n        // Custom test implementation using the error scenario\n      });\n    });\n  });\n\n  describe('File Upload Scenarios', () => {\n    // Test multiple file types\n    fileUploadScenarios.validFiles.forEach((file) => {\n      it(`handles ${file.name} upload`, async () => {\n        const fileUploadSuite = createFileUploadTestSuite(FileUploadComponent);\n        // Custom test implementation using the file\n      });\n    });\n\n    // Test validation scenarios\n    fileUploadScenarios.validationScenarios.forEach((scenario) => {\n      it(`validates ${scenario.name}`, async () => {\n        const fileUploadSuite = createFileUploadTestSuite(FileUploadComponent);\n        // Custom test implementation using the validation scenario\n      });\n    });\n  });\n});\n\n// ============================================================================\n// Example 5: Custom Test Patterns\n// ============================================================================\n\n/**\n * Create custom test patterns for specific component types\n */\nconst createCustomTestPattern = (component: React.ComponentType<any>) => {\n  return {\n    async testCustomBehavior() {\n      renderWithProviders(<component />);\n      // Custom test implementation\n    },\n\n    async testCustomInteraction() {\n      renderWithProviders(<component />);\n      // Custom interaction test\n    },\n\n    async testCustomValidation() {\n      renderWithProviders(<component />);\n      // Custom validation test\n    }\n  };\n};\n\ndescribe('Custom Test Patterns', () => {\n  const customPattern = createCustomTestPattern(CustomComponent);\n\n  it('custom behavior', async () => {\n    await customPattern.testCustomBehavior();\n  });\n\n  it('custom interaction', async () => {\n    await customPattern.testCustomInteraction();\n  });\n\n  it('custom validation', async () => {\n    await customPattern.testCustomValidation();\n  });\n});\n"],"names":["AuthComponent","div","input","type","placeholder","button","describe","authSuite","createAuthTestSuite","it","testSuccessfulLogin","testLoginError","testFormValidation","testAccessibility","testPerformance","FileUploadComponent","onUpload","multiple","onClick","mockOnUpload","jest","fn","fileUploadSuite","createFileUploadTestSuite","testFileUpload","testFileValidation","testDragAndDrop","testErrorHandling","CustomComponent","h1","testEnv","setupTestEnvironment","includeAuth","includeFileUpload","timeout","beforeEach","cleanup","renderWithProviders","expect","screen","getByText","toBeInTheDocument","getByRole","startTime","performance","now","endTime","toBeLessThan","authScenarios","validCredentials","forEach","credentials","index","errorScenarios","scenario","name","fileUploadScenarios","validFiles","file","validationScenarios","createCustomTestPattern","component","testCustomBehavior","testCustomInteraction","testCustomValidation","customPattern"],"mappings":"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"}