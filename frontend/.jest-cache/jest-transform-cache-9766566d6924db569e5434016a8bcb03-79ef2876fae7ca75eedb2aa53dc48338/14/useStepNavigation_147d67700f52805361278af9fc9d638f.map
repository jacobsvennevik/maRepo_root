{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/guided-setup/hooks/useStepNavigation.ts"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { STEP_CONFIG } from '../constants';\nimport { ProjectSetup } from '@/features/projects/types';\n\nexport const useStepNavigation = (setup: ProjectSetup, onBack: () => void, extractedData?: any) => {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n\n  const currentStepData = STEP_CONFIG[currentStepIndex];\n  const isFirstStep = currentStepIndex === 0;\n\n  // Calculate effective step count accounting for skipped steps\n  const getEffectiveStepCount = useCallback(() => {\n    let count = STEP_CONFIG.length;\n    // Subtract 1 if extraction results step should be skipped\n    if (!extractedData) {\n      count--;\n    }\n    return count;\n  }, [extractedData]);\n\n  const isLastStep = currentStepIndex === getEffectiveStepCount() - 1;\n\n  const getCurrentStepIndex = useCallback(() => {\n    let effectiveIndex = currentStepIndex + 1;\n    // Subtract 1 if we've passed the extraction results step and it was skipped\n    if (!extractedData && currentStepIndex > STEP_CONFIG.findIndex(step => step.id === 'extractionResults')) {\n      effectiveIndex--;\n    }\n    return effectiveIndex;\n  }, [currentStepIndex, extractedData]);\n  const getTotalSteps = useCallback(() => getEffectiveStepCount(), [getEffectiveStepCount]);\n\n  const progress = ((currentStepIndex + 1) / getEffectiveStepCount()) * 100;\n\n  const isStepComplete = useCallback(() => {\n    const stepId = currentStepData.id;\n    \n    switch (stepId) {\n      case 'projectName':\n        console.log('Checking projectName completion:', setup.projectName, 'trimmed:', setup.projectName.trim(), 'result:', !!setup.projectName.trim());\n        return !!setup.projectName.trim();\n      case 'purpose':\n        return !!setup.purpose;\n      case 'educationLevel':\n        return !!setup.testLevel;\n      case 'uploadSyllabus':\n        return !!extractedData; // Complete if syllabus was uploaded and processed\n      case 'extractionResults':\n        return !!extractedData; // Only complete if there's extracted data\n      case 'courseContentUpload':\n        return !!setup.courseFiles && setup.courseFiles.length > 0; // Complete if course files were uploaded\n      case 'testUpload':\n        return !!setup.testFiles && setup.testFiles.length > 0; // Complete if test files were uploaded\n      case 'learningPreferences':\n        const hasLearningStyle = Array.isArray(setup.learningStyle) \n          ? setup.learningStyle.length > 0 \n          : !!setup.learningStyle;\n        const hasStudyPreference = Array.isArray(setup.studyPreference) \n          ? setup.studyPreference.length > 0 \n          : !!setup.studyPreference;\n        return hasLearningStyle && hasStudyPreference;\n      case 'timeframe':\n        return !!setup.timeframe;\n      case 'goal':\n        return !!setup.goal;\n      case 'studyFrequency':\n        return !!setup.studyFrequency;\n      case 'collaboration':\n        return !!setup.collaboration;\n      default:\n        return true;\n    }\n  }, [currentStepData.id, setup]);\n\n  const handleNext = useCallback(() => {\n    if (isLastStep) {\n      setShowSummary(true);\n    } else {\n      let nextIndex = currentStepIndex + 1;\n      \n      // Skip extraction results step if no data was extracted\n      if (STEP_CONFIG[nextIndex]?.id === 'extractionResults' && !extractedData) {\n        nextIndex++;\n      }\n      \n      setCurrentStepIndex(nextIndex);\n    }\n  }, [isLastStep, currentStepIndex, extractedData]);\n\n  const handleBack = useCallback(() => {\n    if (isFirstStep) {\n      onBack();\n    } else {\n      let prevIndex = currentStepIndex - 1;\n      \n      // Skip extraction results step if no data was extracted\n      if (STEP_CONFIG[prevIndex]?.id === 'extractionResults' && !extractedData) {\n        prevIndex--;\n      }\n      \n      setCurrentStepIndex(prevIndex);\n    }\n  }, [isFirstStep, onBack, currentStepIndex, extractedData]);\n\n  const handleSkip = useCallback(() => {\n    // Skip logic is the same as next for now, but we could add specific skip behavior here\n    // For example, we could mark the step as skipped in the state\n    handleNext();\n  }, [handleNext]);\n\n  const canSkipCurrentStep = useCallback(() => {\n    return currentStepData.canSkip === true;\n  }, [currentStepData]);\n\n  const handleBackWithCleanup = useCallback(() => {\n    if (isFirstStep) {\n      onBack();\n    } else {\n      handleBack();\n    }\n  }, [isFirstStep, onBack, handleBack]);\n\n  return {\n    currentStepIndex,\n    setCurrentStepIndex,\n    currentStepData,\n    isFirstStep,\n    isLastStep,\n    showSummary,\n    setShowSummary,\n    progress,\n    getCurrentStepIndex,\n    getTotalSteps,\n    isStepComplete,\n    handleNext,\n    handleBack,\n    handleSkip,\n    handleBackWithCleanup,\n    canSkipCurrentStep,\n  };\n}; "],"names":["useStepNavigation","setup","onBack","extractedData","currentStepIndex","setCurrentStepIndex","useState","showSummary","setShowSummary","currentStepData","STEP_CONFIG","isFirstStep","getEffectiveStepCount","useCallback","count","length","isLastStep","getCurrentStepIndex","effectiveIndex","findIndex","step","id","getTotalSteps","progress","isStepComplete","stepId","console","log","projectName","trim","purpose","testLevel","courseFiles","testFiles","hasLearningStyle","Array","isArray","learningStyle","hasStudyPreference","studyPreference","timeframe","goal","studyFrequency","collaboration","handleNext","nextIndex","handleBack","prevIndex","handleSkip","canSkipCurrentStep","canSkip","handleBackWithCleanup"],"mappings":"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"}