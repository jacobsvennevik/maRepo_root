{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/lib/paths.ts"],"sourcesContent":["export type ProjectPath = {\n  base?: 'projects' | 'active-project';\n  projectId?: string;\n  section?: string; // e.g., 'flashcards', 'diagnostics'\n};\n\nexport function parseProjectPath(pathname: string): ProjectPath {\n  // Remove query string and hash fragment first\n  const cleanPathname = pathname.split('?')[0].split('#')[0];\n  \n  // Optional locale: en or en-US\n  const locale = String.raw`(?:[a-z]{2}(?:-[A-Z]{2})?/)?`;\n  const base = String.raw`(projects|active-project)`;\n  const re = new RegExp(`^/${locale}${base}/([^/]+)/?([^/?#]*)`, 'i');\n\n  const m = cleanPathname.match(re);\n  if (!m) return {};\n  return {\n    base: m[1] as ProjectPath['base'],\n    projectId: decodeURIComponent(m[2]),\n    section: m[3] || undefined,\n  };\n}\n\nconst DEFAULT_BASE =\n  (process.env.NEXT_PUBLIC_PROJECT_BASE_SEGMENT as 'projects' | 'active-project') ||\n  'active-project';\n\nexport function projectHref(\n  projectId: string,\n  ...segments: Array<string | number>\n) {\n  const seg = segments.filter(Boolean).join('/');\n  return `/${DEFAULT_BASE}/${encodeURIComponent(projectId)}${seg ? `/${seg}` : ''}`;\n}\n\n// Helper function to check if a section is active\nexport function isProjectSectionActive(pathname: string, projectId: string, section: string): boolean {\n  const parsed = parseProjectPath(pathname);\n  return parsed.projectId === projectId && parsed.section === section;\n}\n\n// Helper function to get the current project info from pathname\nexport function getCurrentProjectInfo(pathname: string): { projectId?: string; section?: string } {\n  const parsed = parseProjectPath(pathname);\n  return {\n    projectId: parsed.projectId,\n    section: parsed.section,\n  };\n}\n\n"],"names":["getCurrentProjectInfo","isProjectSectionActive","parseProjectPath","projectHref","pathname","cleanPathname","split","locale","String","raw","base","re","RegExp","m","match","projectId","decodeURIComponent","section","undefined","DEFAULT_BASE","process","env","NEXT_PUBLIC_PROJECT_BASE_SEGMENT","segments","seg","filter","Boolean","join","encodeURIComponent","parsed"],"mappings":";;;;;;;;;;;IA2CgBA,qBAAqB;eAArBA;;IANAC,sBAAsB;eAAtBA;;IA/BAC,gBAAgB;eAAhBA;;IAsBAC,WAAW;eAAXA;;;AAtBT,SAASD,iBAAiBE,QAAgB;IAC/C,8CAA8C;IAC9C,MAAMC,gBAAgBD,SAASE,KAAK,CAAC,IAAI,CAAC,EAAE,CAACA,KAAK,CAAC,IAAI,CAAC,EAAE;IAE1D,+BAA+B;IAC/B,MAAMC,SAASC,OAAOC,GAAG,CAAC,4BAA4B,CAAC;IACvD,MAAMC,OAAOF,OAAOC,GAAG,CAAC,yBAAyB,CAAC;IAClD,MAAME,KAAK,IAAIC,OAAO,CAAC,EAAE,EAAEL,SAASG,KAAK,mBAAmB,CAAC,EAAE;IAE/D,MAAMG,IAAIR,cAAcS,KAAK,CAACH;IAC9B,IAAI,CAACE,GAAG,OAAO,CAAC;IAChB,OAAO;QACLH,MAAMG,CAAC,CAAC,EAAE;QACVE,WAAWC,mBAAmBH,CAAC,CAAC,EAAE;QAClCI,SAASJ,CAAC,CAAC,EAAE,IAAIK;IACnB;AACF;AAEA,MAAMC,eACJ,AAACC,QAAQC,GAAG,CAACC,gCAAgC,IAC7C;AAEK,SAASnB,YACdY,SAAiB,EACjB,GAAGQ,QAAgC;IAEnC,MAAMC,MAAMD,SAASE,MAAM,CAACC,SAASC,IAAI,CAAC;IAC1C,OAAO,CAAC,CAAC,EAAER,aAAa,CAAC,EAAES,mBAAmBb,aAAaS,MAAM,CAAC,CAAC,EAAEA,KAAK,GAAG,IAAI;AACnF;AAGO,SAASvB,uBAAuBG,QAAgB,EAAEW,SAAiB,EAAEE,OAAe;IACzF,MAAMY,SAAS3B,iBAAiBE;IAChC,OAAOyB,OAAOd,SAAS,KAAKA,aAAac,OAAOZ,OAAO,KAAKA;AAC9D;AAGO,SAASjB,sBAAsBI,QAAgB;IACpD,MAAMyB,SAAS3B,iBAAiBE;IAChC,OAAO;QACLW,WAAWc,OAAOd,SAAS;QAC3BE,SAASY,OAAOZ,OAAO;IACzB;AACF"}