{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/utils/previewGenerator.ts"],"sourcesContent":["// Deterministic Preview Generator\n// Generates consistent mock items based on seeded random number generation\n\nimport { StyleConfig } from './styleValidator';\n\nexport interface PreviewItem {\n  id: string;\n  type: 'mcq' | 'short_answer' | 'numeric' | 'multi_step' | 'cloze';\n  question: string;\n  options?: string[];\n  answer?: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n  hints?: string[];\n}\n\nexport interface PreviewBadge {\n  type: 'timing' | 'feedback' | 'difficulty';\n  label: string;\n  variant: 'default' | 'secondary' | 'destructive' | 'outline';\n}\n\n/**\n * Seeded random number generator for deterministic previews\n */\nclass SeededRandom {\n  private seed: number;\n\n  constructor(seed: number) {\n    this.seed = seed;\n  }\n\n  next(): number {\n    // Linear congruential generator\n    this.seed = (this.seed * 1664525 + 1013904223) % Math.pow(2, 32);\n    return this.seed / Math.pow(2, 32);\n  }\n\n  nextInt(min: number, max: number): number {\n    return Math.floor(this.next() * (max - min + 1)) + min;\n  }\n\n  choice<T>(array: T[]): T {\n    return array[this.nextInt(0, array.length - 1)];\n  }\n}\n\n/**\n * Generates a stable seed from configuration\n */\nexport function generateSeed(effectiveConfig: StyleConfig): number {\n  const configString = JSON.stringify(effectiveConfig, Object.keys(effectiveConfig).sort());\n  let hash = 0;\n  \n  for (let i = 0; i < configString.length; i++) {\n    const char = configString.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32-bit integer\n  }\n  \n  return Math.abs(hash);\n}\n\n/**\n * Generates deterministic preview items based on configuration\n */\nexport function generatePreviewItems(effectiveConfig: StyleConfig, maxItems: number = 3): PreviewItem[] {\n  const seed = generateSeed(effectiveConfig);\n  const rng = new SeededRandom(seed);\n  const items: PreviewItem[] = [];\n  \n  const itemMix = effectiveConfig.item_mix || {\n    single_select: 0.5,\n    short_answer: 0.3,\n    numeric: 0.2\n  };\n\n  // Generate items respecting proportions\n  for (let i = 0; i < maxItems; i++) {\n    const rand = rng.next();\n    let cumulative = 0;\n    \n    if (rand < (cumulative += itemMix.single_select || 0)) {\n      items.push(generateMCQItem(rng, i, effectiveConfig));\n    } else if (rand < (cumulative += itemMix.short_answer || 0)) {\n      items.push(generateShortAnswerItem(rng, i, effectiveConfig));\n    } else if (rand < (cumulative += itemMix.numeric || 0)) {\n      items.push(generateNumericItem(rng, i, effectiveConfig));\n    } else if (rand < (cumulative += itemMix.multi_step || 0)) {\n      items.push(generateMultiStepItem(rng, i, effectiveConfig));\n    } else if (rand < (cumulative += itemMix.cloze || 0)) {\n      items.push(generateClozeItem(rng, i, effectiveConfig));\n    } else {\n      // Fallback to MCQ if no specific type\n      items.push(generateMCQItem(rng, i, effectiveConfig));\n    }\n  }\n\n  return items;\n}\n\n/**\n * Generates preview badges based on configuration\n */\nexport function generatePreviewBadges(effectiveConfig: StyleConfig): PreviewBadge[] {\n  const badges: PreviewBadge[] = [];\n\n  // Timing badge\n  if (effectiveConfig.timing?.mode) {\n    badges.push({\n      type: 'timing',\n      label: getTimingLabel(effectiveConfig.timing.mode),\n      variant: getTimingVariant(effectiveConfig.timing.mode)\n    });\n  }\n\n  // Feedback badge\n  if (effectiveConfig.feedback) {\n    badges.push({\n      type: 'feedback',\n      label: getFeedbackLabel(effectiveConfig.feedback),\n      variant: getFeedbackVariant(effectiveConfig.feedback)\n    });\n  }\n\n  // Difficulty badge\n  if (effectiveConfig.difficulty) {\n    badges.push({\n      type: 'difficulty',\n      label: getDifficultyLabel(effectiveConfig.difficulty),\n      variant: getDifficultyVariant(effectiveConfig.difficulty)\n    });\n  }\n\n  return badges;\n}\n\n// Item generators\nfunction generateMCQItem(rng: SeededRandom, index: number, config: StyleConfig): PreviewItem {\n  const topics = ['Physics', 'Chemistry', 'Biology', 'Mathematics', 'Computer Science'];\n  const topic = rng.choice(topics);\n  const difficulty = getDifficultyFromConfig(config.difficulty);\n  \n  return {\n    id: `mcq-${index}`,\n    type: 'mcq',\n    question: `What is the primary principle behind ${topic.toLowerCase()}?`,\n    options: [\n      'Option A: First principle',\n      'Option B: Second principle', \n      'Option C: Third principle',\n      'Option D: Fourth principle'\n    ],\n    answer: 'Option A: First principle',\n    difficulty,\n    hints: config.hints ? [`Consider the fundamental laws of ${topic.toLowerCase()}`] : undefined\n  };\n}\n\nfunction generateShortAnswerItem(rng: SeededRandom, index: number, config: StyleConfig): PreviewItem {\n  const concepts = ['photosynthesis', 'thermodynamics', 'evolution', 'algorithms', 'probability'];\n  const concept = rng.choice(concepts);\n  const difficulty = getDifficultyFromConfig(config.difficulty);\n  \n  return {\n    id: `short-${index}`,\n    type: 'short_answer',\n    question: `Explain the process of ${concept} in 2-3 sentences.`,\n    difficulty,\n    hints: config.hints ? [`Think about the key steps involved in ${concept}`] : undefined\n  };\n}\n\nfunction generateNumericItem(rng: SeededRandom, index: number, config: StyleConfig): PreviewItem {\n  const difficulty = getDifficultyFromConfig(config.difficulty);\n  const baseValue = rng.nextInt(10, 100);\n  \n  return {\n    id: `numeric-${index}`,\n    type: 'numeric',\n    question: `Calculate the result: ${baseValue} × ${rng.nextInt(2, 9)} + ${rng.nextInt(1, 20)}`,\n    answer: `${baseValue * rng.nextInt(2, 9) + rng.nextInt(1, 20)}`,\n    difficulty,\n    hints: config.hints ? ['Remember order of operations: multiplication first, then addition'] : undefined\n  };\n}\n\nfunction generateMultiStepItem(rng: SeededRandom, index: number, config: StyleConfig): PreviewItem {\n  const difficulty = getDifficultyFromConfig(config.difficulty);\n  \n  return {\n    id: `multistep-${index}`,\n    type: 'multi_step',\n    question: `Solve this multi-step problem:\\n1. Calculate the area of a circle with radius 5\\n2. Find the circumference\\n3. Determine the ratio of area to circumference`,\n    difficulty,\n    hints: config.hints ? ['Use π ≈ 3.14159 for calculations'] : undefined\n  };\n}\n\nfunction generateClozeItem(rng: SeededRandom, index: number, config: StyleConfig): PreviewItem {\n  const difficulty = getDifficultyFromConfig(config.difficulty);\n  \n  return {\n    id: `cloze-${index}`,\n    type: 'cloze',\n    question: `The process of _____ converts light energy into chemical energy through the reaction: 6CO₂ + 6H₂O + light energy → C₆H₁₂O₆ + 6O₂`,\n    answer: 'photosynthesis',\n    difficulty,\n    hints: config.hints ? ['This process occurs in plant cells'] : undefined\n  };\n}\n\n// Helper functions\nfunction getDifficultyFromConfig(difficulty?: string): 'easy' | 'medium' | 'hard' {\n  switch (difficulty) {\n    case 'easier': return 'easy';\n    case 'harder': return 'hard';\n    default: return 'medium';\n  }\n}\n\nfunction getTimingLabel(mode: string): string {\n  switch (mode) {\n    case 'hard': return 'Hard Timing';\n    case 'soft': return 'Soft Timing';\n    case 'none': return 'No Timing';\n    default: return 'Timing';\n  }\n}\n\nfunction getTimingVariant(mode: string): 'default' | 'secondary' | 'destructive' | 'outline' {\n  switch (mode) {\n    case 'hard': return 'destructive';\n    case 'soft': return 'secondary';\n    case 'none': return 'outline';\n    default: return 'default';\n  }\n}\n\nfunction getFeedbackLabel(feedback: string): string {\n  switch (feedback) {\n    case 'immediate': return 'Immediate';\n    case 'on_submit': return 'On Submit';\n    case 'end_only': return 'End Only';\n    case 'tiered_hints': return 'Tiered Hints';\n    default: return 'Feedback';\n  }\n}\n\nfunction getFeedbackVariant(feedback: string): 'default' | 'secondary' | 'destructive' | 'outline' {\n  switch (feedback) {\n    case 'immediate': return 'default';\n    case 'on_submit': return 'secondary';\n    case 'end_only': return 'destructive';\n    case 'tiered_hints': return 'outline';\n    default: return 'default';\n  }\n}\n\nfunction getDifficultyLabel(difficulty: string): string {\n  switch (difficulty) {\n    case 'easier': return 'Easy';\n    case 'balanced': return 'Medium';\n    case 'harder': return 'Hard';\n    default: return 'Difficulty';\n  }\n}\n\nfunction getDifficultyVariant(difficulty: string): 'default' | 'secondary' | 'destructive' | 'outline' {\n  switch (difficulty) {\n    case 'easier': return 'secondary';\n    case 'balanced': return 'default';\n    case 'harder': return 'destructive';\n    default: return 'outline';\n  }\n}\n\n/**\n * Gets a summary of the preview configuration\n */\nexport function getPreviewSummary(effectiveConfig: StyleConfig): {\n  totalItems: number;\n  itemTypes: string[];\n  timingMode: string;\n  feedbackMode: string;\n  difficulty: string;\n} {\n  const itemMix = effectiveConfig.item_mix || {};\n  const itemTypes = Object.keys(itemMix).filter(key => itemMix[key] > 0);\n  \n  return {\n    totalItems: 3, // Default preview size\n    itemTypes,\n    timingMode: effectiveConfig.timing?.mode || 'soft',\n    feedbackMode: effectiveConfig.feedback || 'immediate',\n    difficulty: effectiveConfig.difficulty || 'balanced'\n  };\n}\n"],"names":["generatePreviewBadges","generatePreviewItems","generateSeed","getPreviewSummary","SeededRandom","constructor","seed","next","Math","pow","nextInt","min","max","floor","choice","array","length","effectiveConfig","configString","JSON","stringify","Object","keys","sort","hash","i","char","charCodeAt","abs","maxItems","rng","items","itemMix","item_mix","single_select","short_answer","numeric","rand","cumulative","push","generateMCQItem","generateShortAnswerItem","generateNumericItem","multi_step","generateMultiStepItem","cloze","generateClozeItem","badges","timing","mode","type","label","getTimingLabel","variant","getTimingVariant","feedback","getFeedbackLabel","getFeedbackVariant","difficulty","getDifficultyLabel","getDifficultyVariant","index","config","topics","topic","getDifficultyFromConfig","id","question","toLowerCase","options","answer","hints","undefined","concepts","concept","baseValue","itemTypes","filter","key","totalItems","timingMode","feedbackMode"],"mappings":"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"}