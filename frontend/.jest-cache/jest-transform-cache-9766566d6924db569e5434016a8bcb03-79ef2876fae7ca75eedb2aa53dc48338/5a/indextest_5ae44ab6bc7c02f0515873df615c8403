4dadc9a5f4effd9206725d9787704947
/**
 * TestUploadStep - Comprehensive Test Suite
 * 
 * This test suite demonstrates the optimized testing approach with:
 * - Modular test organization
 * - Centralized utilities
 * - Parameterized testing
 * - Consistent mock patterns
 * - Performance optimizations
 */ // Import all test modules
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createFileValidationTestCases: function() {
        return _testutils.createFileValidationTestCases;
    },
    renderWithProviders: function() {
        return _testutils.renderWithProviders;
    },
    setupFullTestEnvironment: function() {
        return _testutils.setupFullTestEnvironment;
    },
    standardMocks: function() {
        return _testutils.standardMocks;
    },
    testFactories: function() {
        return _testutils.testFactories;
    }
});
require("./test-upload-step.test-mode.test");
require("./test-upload-step.production-mode.test");
require("./test-upload-step.file-validation.test");
require("./test-upload-step.error-handling.test");
const _testutils = require("../../../../test-utils");
 /**
 * Test Suite Summary:
 * 
 * 1. test-mode.test.tsx - Tests for test mode functionality
 *    - Test mode banner display
 *    - Mock data handling
 *    - Single and multiple file uploads
 *    - File removal functionality
 * 
 * 2. production-mode.test.tsx - Tests for production mode functionality
 *    - Production mode detection
 *    - API upload and processing
 *    - Upload failure handling
 *    - Processing timeout handling
 * 
 * 3. file-validation.test.tsx - Tests for file validation
 *    - Parameterized file type validation
 *    - File size validation
 *    - Mixed file handling
 *    - Error clearing functionality
 * 
 * 4. error-handling.test.tsx - Tests for error scenarios
 *    - Network error handling
 *    - Processing error handling
 *    - Partial success scenarios
 *    - Timeout handling
 * 
 * Benefits of this approach:
 * - Each test file focuses on a specific concern
 * - Easier to maintain and debug
 * - Better test organization and discoverability
 * - Reduced test file size (from 757 lines to ~150 lines each)
 * - Consistent use of centralized utilities
 * - Parameterized testing reduces duplication
 * - Better performance through parallel execution
 */ 
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNvYmhvcm5zdmVubmV2aWsvRG9jdW1lbnRzL0dpdEh1Yi9tYVJlcG9fcm9vdC9mcm9udGVuZC9zcmMvZmVhdHVyZXMvcHJvamVjdHMvY29tcG9uZW50cy9fX3Rlc3RzX18vaW5kZXgudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRlc3RVcGxvYWRTdGVwIC0gQ29tcHJlaGVuc2l2ZSBUZXN0IFN1aXRlXG4gKiBcbiAqIFRoaXMgdGVzdCBzdWl0ZSBkZW1vbnN0cmF0ZXMgdGhlIG9wdGltaXplZCB0ZXN0aW5nIGFwcHJvYWNoIHdpdGg6XG4gKiAtIE1vZHVsYXIgdGVzdCBvcmdhbml6YXRpb25cbiAqIC0gQ2VudHJhbGl6ZWQgdXRpbGl0aWVzXG4gKiAtIFBhcmFtZXRlcml6ZWQgdGVzdGluZ1xuICogLSBDb25zaXN0ZW50IG1vY2sgcGF0dGVybnNcbiAqIC0gUGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uc1xuICovXG5cbi8vIEltcG9ydCBhbGwgdGVzdCBtb2R1bGVzXG5pbXBvcnQgJy4vdGVzdC11cGxvYWQtc3RlcC50ZXN0LW1vZGUudGVzdCc7XG5pbXBvcnQgJy4vdGVzdC11cGxvYWQtc3RlcC5wcm9kdWN0aW9uLW1vZGUudGVzdCc7XG5pbXBvcnQgJy4vdGVzdC11cGxvYWQtc3RlcC5maWxlLXZhbGlkYXRpb24udGVzdCc7XG5pbXBvcnQgJy4vdGVzdC11cGxvYWQtc3RlcC5lcnJvci1oYW5kbGluZy50ZXN0JztcblxuLy8gUmUtZXhwb3J0IHV0aWxpdGllcyBmb3IgY29udmVuaWVuY2VcbmV4cG9ydCB7XG4gIHJlbmRlcldpdGhQcm92aWRlcnMsXG4gIHNldHVwRnVsbFRlc3RFbnZpcm9ubWVudCxcbiAgdGVzdEZhY3RvcmllcyxcbiAgc3RhbmRhcmRNb2NrcyxcbiAgY3JlYXRlRmlsZVZhbGlkYXRpb25UZXN0Q2FzZXNcbn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL3Rlc3QtdXRpbHMnO1xuXG4vKipcbiAqIFRlc3QgU3VpdGUgU3VtbWFyeTpcbiAqIFxuICogMS4gdGVzdC1tb2RlLnRlc3QudHN4IC0gVGVzdHMgZm9yIHRlc3QgbW9kZSBmdW5jdGlvbmFsaXR5XG4gKiAgICAtIFRlc3QgbW9kZSBiYW5uZXIgZGlzcGxheVxuICogICAgLSBNb2NrIGRhdGEgaGFuZGxpbmdcbiAqICAgIC0gU2luZ2xlIGFuZCBtdWx0aXBsZSBmaWxlIHVwbG9hZHNcbiAqICAgIC0gRmlsZSByZW1vdmFsIGZ1bmN0aW9uYWxpdHlcbiAqIFxuICogMi4gcHJvZHVjdGlvbi1tb2RlLnRlc3QudHN4IC0gVGVzdHMgZm9yIHByb2R1Y3Rpb24gbW9kZSBmdW5jdGlvbmFsaXR5XG4gKiAgICAtIFByb2R1Y3Rpb24gbW9kZSBkZXRlY3Rpb25cbiAqICAgIC0gQVBJIHVwbG9hZCBhbmQgcHJvY2Vzc2luZ1xuICogICAgLSBVcGxvYWQgZmFpbHVyZSBoYW5kbGluZ1xuICogICAgLSBQcm9jZXNzaW5nIHRpbWVvdXQgaGFuZGxpbmdcbiAqIFxuICogMy4gZmlsZS12YWxpZGF0aW9uLnRlc3QudHN4IC0gVGVzdHMgZm9yIGZpbGUgdmFsaWRhdGlvblxuICogICAgLSBQYXJhbWV0ZXJpemVkIGZpbGUgdHlwZSB2YWxpZGF0aW9uXG4gKiAgICAtIEZpbGUgc2l6ZSB2YWxpZGF0aW9uXG4gKiAgICAtIE1peGVkIGZpbGUgaGFuZGxpbmdcbiAqICAgIC0gRXJyb3IgY2xlYXJpbmcgZnVuY3Rpb25hbGl0eVxuICogXG4gKiA0LiBlcnJvci1oYW5kbGluZy50ZXN0LnRzeCAtIFRlc3RzIGZvciBlcnJvciBzY2VuYXJpb3NcbiAqICAgIC0gTmV0d29yayBlcnJvciBoYW5kbGluZ1xuICogICAgLSBQcm9jZXNzaW5nIGVycm9yIGhhbmRsaW5nXG4gKiAgICAtIFBhcnRpYWwgc3VjY2VzcyBzY2VuYXJpb3NcbiAqICAgIC0gVGltZW91dCBoYW5kbGluZ1xuICogXG4gKiBCZW5lZml0cyBvZiB0aGlzIGFwcHJvYWNoOlxuICogLSBFYWNoIHRlc3QgZmlsZSBmb2N1c2VzIG9uIGEgc3BlY2lmaWMgY29uY2VyblxuICogLSBFYXNpZXIgdG8gbWFpbnRhaW4gYW5kIGRlYnVnXG4gKiAtIEJldHRlciB0ZXN0IG9yZ2FuaXphdGlvbiBhbmQgZGlzY292ZXJhYmlsaXR5XG4gKiAtIFJlZHVjZWQgdGVzdCBmaWxlIHNpemUgKGZyb20gNzU3IGxpbmVzIHRvIH4xNTAgbGluZXMgZWFjaClcbiAqIC0gQ29uc2lzdGVudCB1c2Ugb2YgY2VudHJhbGl6ZWQgdXRpbGl0aWVzXG4gKiAtIFBhcmFtZXRlcml6ZWQgdGVzdGluZyByZWR1Y2VzIGR1cGxpY2F0aW9uXG4gKiAtIEJldHRlciBwZXJmb3JtYW5jZSB0aHJvdWdoIHBhcmFsbGVsIGV4ZWN1dGlvblxuICovXG4iXSwibmFtZXMiOlsiY3JlYXRlRmlsZVZhbGlkYXRpb25UZXN0Q2FzZXMiLCJyZW5kZXJXaXRoUHJvdmlkZXJzIiwic2V0dXBGdWxsVGVzdEVudmlyb25tZW50Iiwic3RhbmRhcmRNb2NrcyIsInRlc3RGYWN0b3JpZXMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUVELDBCQUEwQjs7Ozs7Ozs7Ozs7O0lBWXhCQSw2QkFBNkI7ZUFBN0JBLHdDQUE2Qjs7SUFKN0JDLG1CQUFtQjtlQUFuQkEsOEJBQW1COztJQUNuQkMsd0JBQXdCO2VBQXhCQSxtQ0FBd0I7O0lBRXhCQyxhQUFhO2VBQWJBLHdCQUFhOztJQURiQyxhQUFhO2VBQWJBLHdCQUFhOzs7UUFUUjtRQUNBO1FBQ0E7UUFDQTsyQkFTQTtDQUVQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQW1DQyJ9