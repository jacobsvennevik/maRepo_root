{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/quiz/components/QuizWizard/steps/BasicConfigStep.tsx"],"sourcesContent":["/**\n * BasicConfigStep\n */\n\nimport React from 'react';\nimport { FormProvider } from 'react-hook-form';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { \n  DIFFICULTY_OPTIONS,\n  QUIZ_TYPE_OPTIONS,\n} from '../../../constants';\nimport { \n  getSuggestedTimeLimit,\n} from '../../../utils';\n\ninterface BasicConfigStepProps {\n  form: any;\n  suggestedDifficulty?: string;\n}\n\nexport const BasicConfigStep: React.FC<BasicConfigStepProps> = ({\n  form,\n  suggestedDifficulty,\n}) => {\n  const { register, watch, setValue, formState } = form;\n\n  return (\n    <FormProvider {...form}>\n      <div className=\"space-y-4\">\n        <div className=\"text-center space-y-2\">\n          <h2 className=\"text-xl font-semibold text-slate-900\">Basic Quiz Settings</h2>\n          <p className=\"text-sm text-slate-600\">Configure the basic parameters for your quiz</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-4\">\n          <div>\n            <Label htmlFor=\"title\">Quiz Title *</Label>\n            <Input \n              id=\"title\" \n              {...register('title')}\n              placeholder=\"e.g., Week 3 Knowledge Check\"\n            />\n            {formState.errors.title && (\n              <p className=\"text-sm text-red-600 mt-1\">{formState.errors.title.message}</p>\n            )}\n          </div>\n\n          <div>\n            <Label htmlFor=\"topic\">Topic/Subject *</Label>\n            <Input \n              id=\"topic\" \n              {...register('topic')}\n              placeholder=\"e.g., Machine Learning Fundamentals\"\n            />\n            {formState.errors.topic && (\n              <p className=\"text-sm text-red-600 mt-1\">{formState.errors.topic.message}</p>\n            )}\n            {suggestedDifficulty && (\n              <p className=\"text-sm text-blue-600 mt-1\">\n                ðŸ’¡ Suggested difficulty: {suggestedDifficulty}\n              </p>\n            )}\n          </div>\n\n          <div>\n            <Label htmlFor=\"description\">Description</Label>\n            <Textarea \n              id=\"description\" \n              {...register('description')}\n              placeholder=\"Optional description of the quiz content...\"\n              rows={3}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"quiz_type\">Quiz Type</Label>\n              <Select \n                value={watch('quiz_type')} \n                onValueChange={(value) => setValue('quiz_type', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select quiz type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {QUIZ_TYPE_OPTIONS.map((option: any) => (\n                    <SelectItem key={option.value} value={option.value}>\n                      <div>\n                        <div className=\"font-medium\">{option.label}</div>\n                        <div className=\"text-xs text-slate-500\">{option.description}</div>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <Label htmlFor=\"difficulty\">Difficulty Level</Label>\n              <Select \n                value={watch('difficulty')} \n                onValueChange={(value) => setValue('difficulty', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select difficulty\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {DIFFICULTY_OPTIONS.map((option: any) => (\n                    <SelectItem key={option.value} value={option.value}>\n                      <div>\n                        <div className=\"font-medium\">{option.label}</div>\n                        <div className=\"text-xs text-slate-500\">{option.description}</div>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"max_questions\">Number of Questions</Label>\n              <Input \n                id=\"max_questions\" \n                type=\"number\"\n                {...register('max_questions', { valueAsNumber: true })}\n                placeholder=\"10\"\n                min={1}\n                max={50}\n              />\n              {formState.errors.max_questions && (\n                <p className=\"text-sm text-red-600 mt-1\">{formState.errors.max_questions.message}</p>\n              )}\n              {watch('max_questions') && (\n                <p className=\"text-sm text-blue-600 mt-1\">\n                  ðŸ’¡ Suggested: {Math.round((getSuggestedTimeLimit(watch('max_questions') || 10, watch('difficulty') || 'INTERMEDIATE')) / 60)} minutes\n                </p>\n              )}\n            </div>\n\n            <div>\n              <Label htmlFor=\"time_limit_sec\">Time Limit (minutes)</Label>\n              <Input \n                id=\"time_limit_sec\" \n                type=\"number\"\n                {...register('time_limit_sec', { valueAsNumber: true })}\n                placeholder=\"20\"\n                min={1}\n                max={120}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </FormProvider>\n  );\n};\n\nexport default BasicConfigStep;\n\n\n"],"names":["BasicConfigStep","form","suggestedDifficulty","register","watch","setValue","formState","FormProvider","div","className","h2","p","Label","htmlFor","Input","id","placeholder","errors","title","message","topic","Textarea","rows","Select","value","onValueChange","SelectTrigger","SelectValue","SelectContent","QUIZ_TYPE_OPTIONS","map","option","SelectItem","label","description","DIFFICULTY_OPTIONS","type","valueAsNumber","min","max","max_questions","Math","round","getSuggestedTimeLimit"],"mappings":"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"}