{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/utils/__tests__/styleValidator.test.ts"],"sourcesContent":["// Unit Tests for Style Validator\nimport { \n  validateConfig, \n  applyFixes, \n  getValidationSummary,\n  hasCriticalErrors,\n  validateField,\n  type StyleConfig \n} from '../styleValidator';\n\ndescribe('Style Validator', () => {\n  describe('validateConfig', () => {\n    it('should validate item mix normalization', () => {\n      const config: StyleConfig = {\n        item_mix: {\n          single_select: 0.5,\n          short_answer: 0.3\n        }\n      };\n\n      const result = validateConfig(config);\n      \n      expect(result.issues).toHaveLength(1);\n      expect(result.issues[0].code).toBe('NORMALIZE_MIX');\n      expect(result.issues[0].level).toBe('warning');\n      expect(result.fixes).toHaveLength(1);\n      expect(result.fixes[0].path).toBe('item_mix');\n    });\n\n    it('should validate hard timing constraints', () => {\n      const config: StyleConfig = {\n        timing: {\n          mode: 'hard',\n          per_item_seconds: 3\n        }\n      };\n\n      const result = validateConfig(config);\n      \n      expect(result.issues).toHaveLength(1);\n      expect(result.issues[0].code).toBe('HARD_TIMING_MIN');\n      expect(result.issues[0].level).toBe('error');\n      expect(result.fixes[0].value).toBe(60);\n    });\n\n    it('should validate end-only feedback constraint', () => {\n      const config: StyleConfig = {\n        feedback: 'end_only',\n        hints: true\n      };\n\n      const result = validateConfig(config);\n      \n      expect(result.issues).toHaveLength(1);\n      expect(result.issues[0].code).toBe('END_ONLY_NO_HINTS');\n      expect(result.issues[0].level).toBe('warning');\n      expect(result.fixes[0].value).toBe(false);\n    });\n\n    it('should pass valid configuration', () => {\n      const config: StyleConfig = {\n        item_mix: {\n          single_select: 0.6,\n          short_answer: 0.4\n        },\n        timing: {\n          mode: 'soft',\n          total_minutes: 30,\n          per_item_seconds: 90\n        },\n        feedback: 'immediate',\n        hints: false\n      };\n\n      const result = validateConfig(config);\n      \n      expect(result.issues).toHaveLength(0);\n      expect(result.fixes).toHaveLength(0);\n    });\n  });\n\n  describe('applyFixes', () => {\n    it('should apply fixes to configuration', () => {\n      const config: StyleConfig = {\n        item_mix: {\n          single_select: 0.5,\n          short_answer: 0.3\n        }\n      };\n\n      const fixes = [\n        { path: 'item_mix', value: { single_select: 0.625, short_answer: 0.375 } }\n      ];\n\n      const result = applyFixes(config, fixes);\n      \n      expect(result.item_mix?.single_select).toBe(0.625);\n      expect(result.item_mix?.short_answer).toBe(0.375);\n    });\n\n    it('should handle nested path fixes', () => {\n      const config: StyleConfig = {\n        timing: {\n          mode: 'hard',\n          per_item_seconds: 3\n        }\n      };\n\n      const fixes = [\n        { path: 'timing.per_item_seconds', value: 60 }\n      ];\n\n      const result = applyFixes(config, fixes);\n      \n      expect(result.timing?.per_item_seconds).toBe(60);\n    });\n  });\n\n  describe('getValidationSummary', () => {\n    it('should return correct summary counts', () => {\n      const config: StyleConfig = {\n        item_mix: { single_select: 0.5, short_answer: 0.3 },\n        timing: { mode: 'hard', per_item_seconds: 3 },\n        feedback: 'end_only',\n        hints: true\n      };\n\n      const summary = getValidationSummary(config);\n      \n      expect(summary.errors).toBe(1);\n      expect(summary.warnings).toBe(2);\n      expect(summary.info).toBe(0);\n      expect(summary.total).toBe(3);\n    });\n  });\n\n  describe('hasCriticalErrors', () => {\n    it('should return true for configurations with errors', () => {\n      const config: StyleConfig = {\n        timing: { mode: 'hard', per_item_seconds: 3 }\n      };\n\n      expect(hasCriticalErrors(config)).toBe(true);\n    });\n\n    it('should return false for configurations without errors', () => {\n      const config: StyleConfig = {\n        timing: { mode: 'soft', per_item_seconds: 60 }\n      };\n\n      expect(hasCriticalErrors(config)).toBe(false);\n    });\n  });\n\n  describe('validateField', () => {\n    it('should validate individual fields', () => {\n      const config: StyleConfig = {\n        timing: { mode: 'soft', per_item_seconds: 60 }\n      };\n\n      const issues = validateField(config, 'timing.per_item_seconds', 3);\n      \n      expect(issues).toHaveLength(0); // No issues for soft timing\n    });\n  });\n});\n"],"names":["describe","it","config","item_mix","single_select","short_answer","result","validateConfig","expect","issues","toHaveLength","code","toBe","level","fixes","path","timing","mode","per_item_seconds","value","feedback","hints","total_minutes","applyFixes","summary","getValidationSummary","errors","warnings","info","total","hasCriticalErrors","validateField"],"mappings":"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"}