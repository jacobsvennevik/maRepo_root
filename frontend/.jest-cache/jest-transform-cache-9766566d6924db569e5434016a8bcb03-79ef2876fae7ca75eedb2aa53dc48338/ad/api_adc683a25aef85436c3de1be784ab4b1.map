{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/services/api.ts"],"sourcesContent":["import axios from \"axios\";\nimport { axiosApi } from \"@/lib/axios-api\";\nimport { ProjectSetup } from \"../types\";\n\nexport interface ProjectData {\n  name: string;\n  project_type: \"school\" | \"self_study\";\n  course_name?: string;\n  course_code?: string;\n  teacher_name?: string;\n  syllabus?: string;\n  goal_description?: string;\n  study_frequency?: string;\n  start_date?: string;\n  end_date?: string;\n  is_draft?: boolean;\n  [key: string]: any;\n}\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8000\";\n\n// Test mode - set to true to bypass API calls and use mock data\nconst TEST_MODE =\n  process.env.NODE_ENV === \"development\" &&\n  process.env.NEXT_PUBLIC_TEST_MODE !== \"false\";\n\nexport const createProject = async (projectData: ProjectData) => {\n  try {\n    const response = await axiosApi.post(\"projects/\", projectData, {\n      headers: {\n        \"Idempotency-Key\": crypto.randomUUID()\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      console.error(\"Project creation error:\", {\n        status: error.response.status,\n        data: error.response.data,\n        headers: error.response.headers,\n      });\n      throw new APIError(\n        error.response.status,\n        error.response.data.detail ||\n          error.response.data.message ||\n          \"Failed to create project\",\n      );\n    }\n    throw new Error(\"Failed to create project\");\n  }\n};\n\nexport const uploadFileWithProgress = async (\n  projectId: string,\n  file: File,\n  onProgress: (progress: number) => void,\n) => {\n\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"project_id\", projectId);\n\n    const response = await axiosApi.post(\n      `/projects/${projectId}/upload_file/`,\n      formData,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          if (progressEvent.total) {\n            const percentCompleted = Math.round(\n              (progressEvent.loaded * 100) / progressEvent.total,\n            );\n            onProgress(percentCompleted);\n          }\n        },\n      },\n    );\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      console.error(\"File upload error:\", {\n        status: error.response.status,\n        data: error.response.data,\n        headers: error.response.headers,\n      });\n      throw new APIError(\n        error.response.status,\n        error.response.data.detail ||\n          error.response.data.message ||\n          \"Failed to upload file\",\n      );\n    }\n    throw new Error(\"Failed to upload file\");\n  }\n};\n\nexport async function uploadSyllabus(\n  projectId: string,\n  file: File,\n): Promise<any> {\n\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  try {\n    const response = await axiosApi.post(\n      `/projects/${projectId}/upload_file/`,\n      formData,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      },\n    );\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      console.error(\"Syllabus upload error:\", {\n        status: error.response.status,\n        data: error.response.data,\n        headers: error.response.headers,\n      });\n      throw new APIError(\n        error.response.status,\n        error.response.data.detail ||\n          error.response.data.message ||\n          \"Failed to upload syllabus\",\n      );\n    }\n    throw new Error(\"Failed to upload syllabus\");\n  }\n}\n\nexport async function uploadFile(file: File, uploadType: string): Promise<any> {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  // Map frontend upload types to backend endpoints\n  const uploadTypeMap: Record<string, string> = {\n    'course-files': 'course-files',\n    'test-files': 'test-files', \n    'learning-materials': 'learning-materials',\n    'syllabus': 'course-files', // Map syllabus to course-files\n    'tests': 'test-files',      // Map tests to test-files\n    'content': 'learning-materials' // Map content to learning-materials\n  };\n\n  const backendUploadType = uploadTypeMap[uploadType] || uploadType;\n\n  try {\n    const response = await axiosApi.post(\n      `/upload/${backendUploadType}/`,\n      formData,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      },\n    );\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      console.error(\"File upload error:\", {\n        status: error.response.status,\n        data: error.response.data,\n        headers: error.response.headers,\n      });\n      throw new APIError(\n        error.response.status,\n        error.response.data.detail ||\n          error.response.data.message ||\n          \"Failed to upload file\",\n      );\n    }\n    throw new Error(\"Failed to upload file\");\n  }\n}\n\nexport const getProjects = async () => {\n  try {\n    console.log('ðŸ”¥ TESTING: Back to axios with dev-guards disabled');\n    const response = await axiosApi.get(\"projects\");\n    // Import the mapping function\n    const { mapApiResponseToProjectV2 } = await import(\"./utils\");\n    \n    // Transform API response to ProjectV2 format\n    const projects = Array.isArray(response.data) \n      ? response.data.map(mapApiResponseToProjectV2)\n      : [response.data].map(mapApiResponseToProjectV2);\n    \n    return projects;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      throw new APIError(\n        error.response.status,\n        error.response.data.detail ||\n          error.response.data.message ||\n          \"Failed to fetch projects\",\n      );\n    }\n    throw new Error(\"Failed to fetch projects\");\n  }\n};\n\nexport const finalizeProject = async (projectId: string) => {\n  try {\n    const response = await axiosApi.patch(`projects/${projectId}/`, {\n      is_draft: false,\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      throw new APIError(\n        error.response.status,\n        error.response.data.detail ||\n          error.response.data.message ||\n          \"Failed to finalize project\",\n      );\n    }\n    throw new Error(\"Failed to finalize project\");\n  }\n};\n\nexport const cleanupAbandonedDrafts = async (hours: number = 24) => {\n  try {\n    const response = await axiosApi.post(\"projects/cleanup_drafts/\", {\n      hours,\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      throw new APIError(\n        error.response.status,\n        error.response.data.error ||\n          error.response.data.message ||\n          \"Failed to cleanup abandoned drafts\",\n      );\n    }\n    throw new Error(\"Failed to cleanup abandoned drafts\");\n  }\n};\n\nexport class APIError extends Error {\n  constructor(\n    public statusCode: number,\n    message: string,\n  ) {\n    super(message);\n    this.name = \"APIError\";\n  }\n}\n"],"names":["APIError","cleanupAbandonedDrafts","createProject","finalizeProject","getProjects","uploadFile","uploadFileWithProgress","uploadSyllabus","API_BASE_URL","process","env","NEXT_PUBLIC_API_URL","TEST_MODE","NODE_ENV","NEXT_PUBLIC_TEST_MODE","projectData","response","axiosApi","post","headers","crypto","randomUUID","data","error","axios","isAxiosError","console","status","detail","message","Error","projectId","file","onProgress","formData","FormData","append","onUploadProgress","progressEvent","total","percentCompleted","Math","round","loaded","uploadType","uploadTypeMap","backendUploadType","log","get","mapApiResponseToProjectV2","projects","Array","isArray","map","patch","is_draft","hours","constructor","statusCode","name"],"mappings":"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"}