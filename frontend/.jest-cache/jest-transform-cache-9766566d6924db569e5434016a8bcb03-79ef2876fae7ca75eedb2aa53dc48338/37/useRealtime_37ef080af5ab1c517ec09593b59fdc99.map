{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/hooks/useRealtime.ts"],"sourcesContent":["/**\n * React hook for real-time study progress updates.\n */\nimport { useState, useEffect, useCallback } from 'react';\nimport { webSocketService, StudyProgressUpdate, ProjectUpdate } from '@/lib/websocket';\nimport { connectionManager } from '@/lib/websocket-connection';\n\nexport interface StudyStats {\n  total_cards: number;\n  reviewed_today: number;\n  due_cards: number;\n  study_streak: number;\n  completion_rate: number;\n  cards_by_difficulty?: number[];\n}\n\nexport function useStudyProgress() {\n  const [stats, setStats] = useState<StudyStats | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n\n  // Update connection status\n  useEffect(() => {\n    const unsubscribe = connectionManager.subscribe((status) => {\n      setIsConnected(status.isConnected);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // Listen for study progress updates\n  useEffect(() => {\n    const handleProgressUpdate = (event: CustomEvent<StudyProgressUpdate>) => {\n      const data = event.detail;\n      setStats(data.progress_stats);\n      setLastUpdate(new Date());\n    };\n\n    const handleInitialStats = (event: CustomEvent<StudyStats>) => {\n      setStats(event.detail);\n      setLastUpdate(new Date());\n    };\n\n    window.addEventListener('study-progress-update', handleProgressUpdate as EventListener);\n    window.addEventListener('initial-study-stats', handleInitialStats as EventListener);\n\n    return () => {\n      window.removeEventListener('study-progress-update', handleProgressUpdate as EventListener);\n      window.removeEventListener('initial-study-stats', handleInitialStats as EventListener);\n    };\n  }, []);\n\n  // Review flashcard function\n  const reviewFlashcard = useCallback((flashcardId: string, rating: number) => {\n    webSocketService.reviewFlashcard(flashcardId, rating);\n  }, []);\n\n  // Get study progress function\n  const getStudyProgress = useCallback(() => {\n    webSocketService.getStudyProgress();\n  }, []);\n\n  // Ping server function\n  const ping = useCallback(() => {\n    webSocketService.ping();\n  }, []);\n\n  // Reconnect function\n  const reconnect = useCallback(() => {\n    webSocketService.reconnect();\n  }, []);\n\n  return {\n    stats,\n    isConnected,\n    lastUpdate,\n    reviewFlashcard,\n    getStudyProgress,\n    ping,\n    reconnect,\n  };\n}\n\n/**\n * React hook for real-time project updates.\n */\n\nexport function useProjectUpdates() {\n  const [projects, setProjects] = useState<ProjectUpdate[]>([]);\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Update connection status\n  useEffect(() => {\n    const unsubscribe = connectionManager.subscribe((status) => {\n      setIsConnected(status.isConnected);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // Listen for project updates\n  useEffect(() => {\n    const handleProjectCreated = (event: CustomEvent<ProjectUpdate>) => {\n      const newProject = event.detail;\n      setProjects(prev => [...prev, newProject]);\n    };\n\n    const handleProjectUpdated = (event: CustomEvent<ProjectUpdate>) => {\n      const updatedProject = event.detail;\n      setProjects(prev => \n        prev.map(project => \n          project.id === updatedProject.id ? updatedProject : project\n        )\n      );\n    };\n\n    window.addEventListener('project-created', handleProjectCreated as EventListener);\n    window.addEventListener('project-updated', handleProjectUpdated as EventListener);\n\n    return () => {\n      window.removeEventListener('project-created', handleProjectCreated as EventListener);\n      window.removeEventListener('project-updated', handleProjectUpdated as EventListener);\n    };\n  }, []);\n\n  return {\n    projects,\n    isConnected,\n  };\n}\n\n/**\n * React hook for file processing updates.\n */\nexport function useFileProcessing() {\n  const [processingFiles, setProcessingFiles] = useState<Map<string, any>>(new Map());\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Update connection status\n  useEffect(() => {\n    const unsubscribe = connectionManager.subscribe((status) => {\n      setIsConnected(status.isConnected);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // Listen for file processing updates\n  useEffect(() => {\n    const handleFileProcessingUpdate = (event: CustomEvent<any>) => {\n      const data = event.detail;\n      setProcessingFiles(prev => {\n        const newMap = new Map(prev);\n        newMap.set(data.file_id, data);\n        return newMap;\n      });\n    };\n\n    window.addEventListener('file-processing-update', handleFileProcessingUpdate as EventListener);\n\n    return () => {\n      window.removeEventListener('file-processing-update', handleFileProcessingUpdate as EventListener);\n    };\n  }, []);\n\n  return {\n    processingFiles,\n    isConnected,\n  };\n}\n"],"names":["useFileProcessing","useProjectUpdates","useStudyProgress","stats","setStats","useState","isConnected","setIsConnected","lastUpdate","setLastUpdate","useEffect","unsubscribe","connectionManager","subscribe","status","handleProgressUpdate","event","data","detail","progress_stats","Date","handleInitialStats","window","addEventListener","removeEventListener","reviewFlashcard","useCallback","flashcardId","rating","webSocketService","getStudyProgress","ping","reconnect","projects","setProjects","handleProjectCreated","newProject","prev","handleProjectUpdated","updatedProject","map","project","id","processingFiles","setProcessingFiles","Map","handleFileProcessingUpdate","newMap","set","file_id"],"mappings":"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"}