{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/app/projects/[projectId]/flashcards/[setId]/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useParams, useRouter } from \"next/navigation\";\nimport { FlashcardCarousel } from \"@/features/flashcards/components/FlashcardCarousel\";\nimport type { FlashcardSet } from \"@/features/flashcards/types\";\nimport { useEffect, useState } from \"react\";\nimport { axiosGeneration } from \"@/lib/axios\";\n\nexport default function FlashcardSetCarouselPage() {\n  const params = useParams();\n  const router = useRouter();\n  const projectId = params.projectId as string;\n  const setIdParam = params.setId as string;\n  const setId = Number(setIdParam);\n  const isMockSet = setIdParam.startsWith('mock_');\n\n  const [flashcardSet, setFlashcardSet] = useState<FlashcardSet | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchSet = async () => {\n      try {\n        setIsLoading(true);\n        \n        if (isMockSet) {\n          // Handle mock flashcard set\n          const mockFlashcardSet: FlashcardSet = {\n            id: 999999, // Use a high number to avoid conflicts\n            title: \"Mock Flashcard Set\",\n            description: \"Sample flashcard set for testing\",\n            owner: parseInt(projectId),\n            difficulty_level: 'INTERMEDIATE' as const,\n            target_audience: 'Students',\n            estimated_study_time: 15,\n            tags: ['mock', 'test'],\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            flashcard_count: 3,\n            is_public: false,\n            study_stats: {\n              total_cards: 3,\n              due_cards: 3,\n              mastered_cards: 0,\n              learning_cards: 0,\n              review_cards: 0,\n              retention_rate: 0,\n              streak_days: 0,\n              next_review: '2024-01-01T00:00:00Z'\n            },\n            flashcards: [\n              {\n                id: 1,\n                question: 'What is the capital of France?',\n                answer: 'Paris',\n                concept_id: 'geography-capitals',\n                difficulty: 'BEGINNER' as const,\n                bloom_level: 'remember' as const,\n                card_type: 'definition' as const,\n                related_concepts: ['France', 'European capitals'],\n                hints: ['Think of the City of Light'],\n                examples: ['France is a country in Western Europe'],\n                common_misconceptions: ['Some think it might be Lyon or Marseille'],\n                learning_objective: 'Identify European capitals',\n                tags: ['geography', 'capitals'],\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString(),\n                algorithm: 'sm2' as const,\n                learning_state: 'new' as const,\n                interval: 1,\n                repetitions: 0,\n                ease_factor: 2.5,\n                leitner_box: 1,\n                next_review: new Date().toISOString(),\n                total_reviews: 0,\n                correct_reviews: 0,\n                metrics: {},\n                flashcard_set: {} as FlashcardSet, // Circular reference, will be set below\n                accuracy_rate: 0,\n                is_overdue: false,\n                is_due: true,\n                days_until_due: 0,\n                retention_rate: 0,\n                memory_strength: 0\n              },\n              {\n                id: 2,\n                question: 'What is 2 + 2?',\n                answer: '4',\n                concept_id: 'math-arithmetic',\n                difficulty: 'BEGINNER' as const,\n                bloom_level: 'remember' as const,\n                card_type: 'question' as const,\n                related_concepts: ['addition', 'basic math'],\n                hints: ['Count on your fingers'],\n                examples: ['2 + 2 = 4'],\n                common_misconceptions: ['Some might think it equals 22'],\n                learning_objective: 'Perform basic arithmetic',\n                tags: ['math', 'arithmetic'],\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString(),\n                algorithm: 'sm2' as const,\n                learning_state: 'new' as const,\n                interval: 1,\n                repetitions: 0,\n                ease_factor: 2.5,\n                leitner_box: 1,\n                next_review: new Date().toISOString(),\n                total_reviews: 0,\n                correct_reviews: 0,\n                metrics: {},\n                flashcard_set: {} as FlashcardSet,\n                accuracy_rate: 0,\n                is_overdue: false,\n                is_due: true,\n                days_until_due: 0,\n                retention_rate: 0,\n                memory_strength: 0\n              },\n              {\n                id: 3,\n                question: 'Who wrote Romeo and Juliet?',\n                answer: 'William Shakespeare',\n                concept_id: 'literature-shakespeare',\n                difficulty: 'INTERMEDIATE' as const,\n                bloom_level: 'remember' as const,\n                card_type: 'definition' as const,\n                related_concepts: ['Shakespeare', 'English literature', 'tragedy'],\n                hints: ['Famous English playwright from the 16th century'],\n                examples: ['He also wrote Hamlet and Macbeth'],\n                common_misconceptions: ['Some might think it was Christopher Marlowe'],\n                learning_objective: 'Identify famous literary works and their authors',\n                tags: ['literature', 'shakespeare'],\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString(),\n                algorithm: 'sm2' as const,\n                learning_state: 'new' as const,\n                interval: 1,\n                repetitions: 0,\n                ease_factor: 2.5,\n                leitner_box: 1,\n                next_review: new Date().toISOString(),\n                total_reviews: 0,\n                correct_reviews: 0,\n                metrics: {},\n                flashcard_set: {} as FlashcardSet,\n                accuracy_rate: 0,\n                is_overdue: false,\n                is_due: true,\n                days_until_due: 0,\n                retention_rate: 0,\n                memory_strength: 0\n              }\n            ]\n          };\n          \n          // Set circular references\n          mockFlashcardSet.flashcards?.forEach(card => {\n            card.flashcard_set = mockFlashcardSet;\n          });\n          \n          setFlashcardSet(mockFlashcardSet);\n        } else {\n          // Handle real flashcard set - use authenticated generation client\n          const res = await axiosGeneration.get<FlashcardSet>(`projects/${projectId}/flashcard-sets/${setId}/`);\n          setFlashcardSet(res.data);\n        }\n      } catch (err: any) {\n        setError(err.message ?? \"Failed to load flashcard set\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    if (!Number.isNaN(setId) || isMockSet) {\n      fetchSet();\n    }\n  }, [setId, setIdParam, isMockSet, projectId]);\n\n  if (!isMockSet && Number.isNaN(setId)) return null;\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[300px]\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error || !flashcardSet) {\n    return (\n      <div className=\"max-w-3xl mx-auto p-6 text-center text-red-600\">\n        {error ?? \"Flashcard set not found\"}\n      </div>\n    );\n  }\n\n  return (\n    <FlashcardCarousel\n      flashcardSet={flashcardSet}\n      projectId={projectId}\n      onBack={() => router.push(`/projects/${projectId}/flashcards`)}\n      onEditCard={() => {}}\n      onDiscardCard={() => {}}\n      onAddCard={() => {}}\n      onViewAll={() => {}}\n    />\n  );\n}\n\n\n"],"names":["FlashcardSetCarouselPage","params","useParams","router","useRouter","projectId","setIdParam","setId","Number","isMockSet","startsWith","flashcardSet","setFlashcardSet","useState","isLoading","setIsLoading","error","setError","useEffect","fetchSet","mockFlashcardSet","id","title","description","owner","parseInt","difficulty_level","target_audience","estimated_study_time","tags","created_at","Date","toISOString","updated_at","flashcard_count","is_public","study_stats","total_cards","due_cards","mastered_cards","learning_cards","review_cards","retention_rate","streak_days","next_review","flashcards","question","answer","concept_id","difficulty","bloom_level","card_type","related_concepts","hints","examples","common_misconceptions","learning_objective","algorithm","learning_state","interval","repetitions","ease_factor","leitner_box","total_reviews","correct_reviews","metrics","flashcard_set","accuracy_rate","is_overdue","is_due","days_until_due","memory_strength","forEach","card","res","axiosGeneration","get","data","err","message","isNaN","div","className","FlashcardCarousel","onBack","push","onEditCard","onDiscardCard","onAddCard","onViewAll"],"mappings":"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"}