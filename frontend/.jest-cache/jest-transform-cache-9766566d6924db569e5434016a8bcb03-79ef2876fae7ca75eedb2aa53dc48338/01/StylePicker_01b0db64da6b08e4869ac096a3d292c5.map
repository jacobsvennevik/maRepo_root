{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/components/StylePicker.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Slider } from '@/components/ui/slider';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { \n  Clock, \n  MessageSquare, \n  Target, \n  Lightbulb,\n  CheckCircle2,\n  Settings,\n  AlertTriangle,\n  CheckCircle,\n  Info\n} from 'lucide-react';\nimport { \n  validateConfig, \n  applyFixes, \n  getValidationSummary,\n  type ValidationIssue,\n  type StyleConfig \n} from '../utils/styleValidator';\nimport { \n  generatePreviewItems, \n  generatePreviewBadges,\n  type PreviewItem,\n  type PreviewBadge \n} from '../utils/previewGenerator';\nimport { getMVPPresets, type StylePreset } from '../utils/presetRegistry';\nimport { \n  trackStyleSelected, \n  trackStyleCustomized, \n  trackPreviewOpened,\n  trackValidationTriggered,\n  trackAutofixApplied \n} from '../utils/styleAnalytics';\n\nexport interface TestStyleConfig {\n  test_style: 'mcq_quiz' | 'mixed_checkpoint' | 'stem_problem_set' | null;\n  style_config_override: {\n    timing?: {\n      total_minutes: number;\n      per_item_seconds: number;\n    };\n    feedback?: 'immediate' | 'on_submit' | 'end_only' | 'tiered_hints';\n    item_mix?: {\n      single_select: number;\n      cloze: number;\n      short_answer: number;\n      numeric: number;\n      multi_step: number;\n    };\n    difficulty?: 'easier' | 'balanced' | 'harder';\n    hints?: boolean;\n  };\n}\n\ninterface StylePickerProps {\n  value: TestStyleConfig;\n  onChange: (config: TestStyleConfig) => void;\n  onNext: () => void;\n  onBack: () => void;\n}\n\nconst PRESETS = {\n  mcq_quiz: {\n    name: 'MCQ Quiz',\n    description: 'Multiple choice questions with immediate feedback',\n    icon: Target,\n    config: {\n      timing: { total_minutes: 15, per_item_seconds: 60 },\n      feedback: 'immediate' as const,\n      item_mix: { single_select: 0.9, cloze: 0.1, short_answer: 0, numeric: 0, multi_step: 0 },\n      difficulty: 'balanced' as const,\n      hints: false\n    }\n  },\n  mixed_checkpoint: {\n    name: 'Mixed Checkpoint',\n    description: 'Combination of question types with deferred feedback',\n    icon: CheckCircle2,\n    config: {\n      timing: { total_minutes: 30, per_item_seconds: 90 },\n      feedback: 'on_submit' as const,\n      item_mix: { single_select: 0.6, cloze: 0, short_answer: 0.4, numeric: 0, multi_step: 0 },\n      difficulty: 'balanced' as const,\n      hints: true\n    }\n  },\n  stem_problem_set: {\n    name: 'STEM Problem Set',\n    description: 'Numeric and multi-step problems with tiered hints',\n    icon: Settings,\n    config: {\n      timing: { total_minutes: 45, per_item_seconds: 300 },\n      feedback: 'tiered_hints' as const,\n      item_mix: { single_select: 0, cloze: 0, short_answer: 0, numeric: 0.7, multi_step: 0.3 },\n      difficulty: 'harder' as const,\n      hints: true\n    }\n  }\n};\n\n// Icon mapping for presets\nconst getIconComponent = (iconName: string) => {\n  const iconMap: Record<string, React.ElementType> = {\n    target: Target,\n    'check-circle': CheckCircle2,\n    settings: Settings,\n    clock: Clock,\n    message: MessageSquare,\n    lightbulb: Lightbulb\n  };\n  return iconMap[iconName] || Target;\n};\n\nexport function StylePicker({ value, onChange, onNext, onBack }: StylePickerProps) {\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [validationIssues, setValidationIssues] = useState<ValidationIssue[]>([]);\n  const [previewItems, setPreviewItems] = useState<PreviewItem[]>([]);\n  const [previewBadges, setPreviewBadges] = useState<PreviewBadge[]>([]);\n  const [showPreview, setShowPreview] = useState(false);\n  \n  const presets = getMVPPresets();\n  \n  const [effectiveConfig, setEffectiveConfig] = useState<StyleConfig>(() => {\n    if (value.test_style && presets[value.test_style]) {\n      return { ...presets[value.test_style].config, ...value.style_config_override };\n    }\n    return value.style_config_override;\n  });\n\n  // Validate configuration whenever it changes\n  useEffect(() => {\n    const validation = validateConfig(effectiveConfig);\n    setValidationIssues(validation.issues);\n    \n    // Track validation events\n    if (validation.issues.length > 0) {\n      trackValidationTriggered(\n        value.test_style || 'custom',\n        validation.issues.length,\n        validation.issues.some(i => i.level === 'error'),\n        validation.issues.some(i => i.level === 'warning')\n      );\n    }\n  }, [effectiveConfig, value.test_style]);\n\n  // Generate preview when configuration changes\n  useEffect(() => {\n    if (showPreview) {\n      const items = generatePreviewItems(effectiveConfig);\n      const badges = generatePreviewBadges(effectiveConfig);\n      setPreviewItems(items);\n      setPreviewBadges(badges);\n    }\n  }, [effectiveConfig, showPreview]);\n\n  const handlePresetSelect = (presetId: string) => {\n    const preset = presets[presetId];\n    if (!preset) return;\n    \n    // Ensure timing config has required properties and item_mix has correct structure\n    const configWithRequiredTiming = {\n      ...preset.config,\n      timing: preset.config.timing ? {\n        total_minutes: preset.config.timing.total_minutes ?? 30,\n        per_item_seconds: preset.config.timing.per_item_seconds ?? 60\n      } : undefined,\n      item_mix: preset.config.item_mix ? {\n        single_select: preset.config.item_mix.single_select ?? 0,\n        cloze: preset.config.item_mix.cloze ?? 0,\n        short_answer: preset.config.item_mix.short_answer ?? 0,\n        numeric: preset.config.item_mix.numeric ?? 0,\n        multi_step: preset.config.item_mix.multi_step ?? 0\n      } : undefined\n    };\n    \n    const newConfig = {\n      test_style: presetId as any,\n      style_config_override: configWithRequiredTiming\n    };\n    setEffectiveConfig(configWithRequiredTiming);\n    onChange(newConfig);\n    \n    // Track preset selection\n    trackStyleSelected(presetId, preset.label, 'preset');\n  };\n\n  const handleOverrideChange = (key: string, newValue: any) => {\n    const oldValue = effectiveConfig[key as keyof StyleConfig];\n    \n    // Create base overrides with the new value\n    // eslint-disable-next-line prefer-const\n    let updatedOverrides = {\n      ...effectiveConfig,\n      [key]: newValue\n    };\n    \n    // Ensure timing config has required properties if it's being updated\n    if (key === 'timing' && newValue) {\n      updatedOverrides.timing = {\n        total_minutes: newValue.total_minutes ?? 30,\n        per_item_seconds: newValue.per_item_seconds ?? 60\n      };\n    }\n    \n    // Ensure item_mix has correct structure if it's being updated\n    if (key === 'item_mix' && newValue) {\n      updatedOverrides.item_mix = {\n        single_select: newValue.single_select ?? 0,\n        cloze: newValue.cloze ?? 0,\n        short_answer: newValue.short_answer ?? 0,\n        numeric: newValue.numeric ?? 0,\n        multi_step: newValue.multi_step ?? 0\n      };\n    }\n    \n    setEffectiveConfig(updatedOverrides);\n    \n    // Create a properly typed config for onChange that matches TestStyleConfig\n    const configForOnChange = {\n      ...updatedOverrides,\n      // Ensure timing has required properties if it exists\n      timing: updatedOverrides.timing ? {\n        total_minutes: updatedOverrides.timing.total_minutes ?? 30,\n        per_item_seconds: updatedOverrides.timing.per_item_seconds ?? 60\n      } : undefined,\n      // Ensure item_mix has correct structure if it exists\n      item_mix: updatedOverrides.item_mix ? {\n        single_select: updatedOverrides.item_mix.single_select ?? 0,\n        cloze: updatedOverrides.item_mix.cloze ?? 0,\n        short_answer: updatedOverrides.item_mix.short_answer ?? 0,\n        numeric: updatedOverrides.item_mix.numeric ?? 0,\n        multi_step: updatedOverrides.item_mix.multi_step ?? 0\n      } : undefined\n    } as TestStyleConfig['style_config_override'];\n    \n    onChange({\n      test_style: value.test_style,\n      style_config_override: configForOnChange\n    });\n    \n    // Track customization\n    trackStyleCustomized(\n      value.test_style || 'custom',\n      key,\n      oldValue,\n      newValue,\n      key\n    );\n  };\n\n  const handleApplyAllFixes = () => {\n    const validation = validateConfig(effectiveConfig);\n    if (validation.fixes.length > 0) {\n      const fixedConfig = applyFixes(effectiveConfig, validation.fixes);\n      setEffectiveConfig(fixedConfig);\n      \n      // Create a properly typed config for onChange that matches TestStyleConfig\n      const configForOnChange = {\n        ...fixedConfig,\n        // Ensure timing has required properties if it exists\n        timing: fixedConfig.timing ? {\n          total_minutes: fixedConfig.timing.total_minutes ?? 30,\n          per_item_seconds: fixedConfig.timing.per_item_seconds ?? 60\n        } : undefined,\n        // Ensure item_mix has correct structure if it exists\n        item_mix: fixedConfig.item_mix ? {\n          single_select: fixedConfig.item_mix.single_select ?? 0,\n          cloze: fixedConfig.item_mix.cloze ?? 0,\n          short_answer: fixedConfig.item_mix.short_answer ?? 0,\n          numeric: fixedConfig.item_mix.numeric ?? 0,\n          multi_step: fixedConfig.item_mix.multi_step ?? 0\n        } : undefined\n      } as TestStyleConfig['style_config_override'];\n      \n      onChange({\n        test_style: value.test_style,\n        style_config_override: configForOnChange\n      });\n      \n      // Track autofix application\n      trackAutofixApplied(\n        value.test_style || 'custom',\n        validation.fixes.length,\n        validation.fixes.map(f => f.path)\n      );\n    }\n  };\n\n  const handlePreviewToggle = () => {\n    setShowPreview(!showPreview);\n    if (!showPreview) {\n      trackPreviewOpened(value.test_style || 'custom', 3);\n    }\n  };\n\n  const renderValidationIssues = () => {\n    if (validationIssues.length === 0) return null;\n\n    const errors = validationIssues.filter(i => i.level === 'error');\n    const warnings = validationIssues.filter(i => i.level === 'warning');\n    const info = validationIssues.filter(i => i.level === 'info');\n\n    return (\n      <div className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <h4 className=\"font-medium text-sm\">Validation Issues</h4>\n          {validationIssues.some(i => i.fix) && (\n            <Button \n              size=\"sm\" \n              variant=\"outline\"\n              onClick={handleApplyAllFixes}\n            >\n              Apply All Fixes\n            </Button>\n          )}\n        </div>\n        \n        <div className=\"space-y-2\">\n          {errors.map((issue, index) => (\n            <Alert key={index} variant=\"destructive\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>\n                <strong>{issue.path}:</strong> {issue.message}\n                {issue.fix && (\n                  <Button \n                    size=\"sm\" \n                    variant=\"outline\" \n                    className=\"ml-2\"\n                    onClick={() => {\n                      const fixedConfig = applyFixes(effectiveConfig, [issue.fix!]);\n                      setEffectiveConfig(fixedConfig);\n                      \n                      // Create a properly typed config for onChange that matches TestStyleConfig\n                      const configForOnChange = {\n                        ...fixedConfig,\n                        // Ensure timing has required properties if it exists\n                        timing: fixedConfig.timing ? {\n                          total_minutes: fixedConfig.timing.total_minutes ?? 30,\n                          per_item_seconds: fixedConfig.timing.per_item_seconds ?? 60\n                        } : undefined,\n                        // Ensure item_mix has correct structure if it exists\n                        item_mix: fixedConfig.item_mix ? {\n                          single_select: fixedConfig.item_mix.single_select ?? 0,\n                          cloze: fixedConfig.item_mix.cloze ?? 0,\n                          short_answer: fixedConfig.item_mix.short_answer ?? 0,\n                          numeric: fixedConfig.item_mix.numeric ?? 0,\n                          multi_step: fixedConfig.item_mix.multi_step ?? 0\n                        } : undefined\n                      } as TestStyleConfig['style_config_override'];\n                      \n                      onChange({\n                        test_style: value.test_style,\n                        style_config_override: configForOnChange\n                      });\n                    }}\n                  >\n                    Fix\n                  </Button>\n                )}\n              </AlertDescription>\n            </Alert>\n          ))}\n          \n          {warnings.map((issue, index) => (\n            <Alert key={index} variant=\"default\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>\n                <strong>{issue.path}:</strong> {issue.message}\n                {issue.fix && (\n                  <Button \n                    size=\"sm\" \n                    variant=\"outline\" \n                    className=\"ml-2\"\n                    onClick={() => {\n                      const fixedConfig = applyFixes(effectiveConfig, [issue.fix!]);\n                      setEffectiveConfig(fixedConfig);\n                      \n                      // Create a properly typed config for onChange that matches TestStyleConfig\n                      const configForOnChange = {\n                        ...fixedConfig,\n                        // Ensure timing has required properties if it exists\n                        timing: fixedConfig.timing ? {\n                          total_minutes: fixedConfig.timing.total_minutes ?? 30,\n                          per_item_seconds: fixedConfig.timing.per_item_seconds ?? 60\n                        } : undefined,\n                        // Ensure item_mix has correct structure if it exists\n                        item_mix: fixedConfig.item_mix ? {\n                          single_select: fixedConfig.item_mix.single_select ?? 0,\n                          cloze: fixedConfig.item_mix.cloze ?? 0,\n                          short_answer: fixedConfig.item_mix.short_answer ?? 0,\n                          numeric: fixedConfig.item_mix.numeric ?? 0,\n                          multi_step: fixedConfig.item_mix.multi_step ?? 0\n                        } : undefined\n                      } as TestStyleConfig['style_config_override'];\n                      \n                      onChange({\n                        test_style: value.test_style,\n                        style_config_override: configForOnChange\n                      });\n                    }}\n                  >\n                    Fix\n                  </Button>\n                )}\n              </AlertDescription>\n            </Alert>\n          ))}\n          \n          {info.map((issue, index) => (\n            <Alert key={index} variant=\"default\">\n              <Info className=\"h-4 w-4\" />\n              <AlertDescription>\n                <strong>{issue.path}:</strong> {issue.message}\n              </AlertDescription>\n            </Alert>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const renderPreview = () => {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h4 className=\"font-medium text-sm\">Preview Configuration</h4>\n          <Button \n            size=\"sm\" \n            variant=\"outline\"\n            onClick={handlePreviewToggle}\n          >\n            {showPreview ? 'Hide Preview' : 'Show Preview'}\n          </Button>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-2 text-xs\">\n          <div className=\"flex items-center gap-2\">\n            <Clock className=\"h-3 w-3\" />\n            <span>Timing: {effectiveConfig.timing?.total_minutes || 15}m total</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <MessageSquare className=\"h-3 w-3\" />\n            <span>Feedback: {effectiveConfig.feedback || 'immediate'}</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Target className=\"h-3 w-3\" />\n            <span>Difficulty: {effectiveConfig.difficulty || 'balanced'}</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Lightbulb className=\"h-3 w-3\" />\n            <span>Hints: {effectiveConfig.hints ? 'Yes' : 'No'}</span>\n          </div>\n        </div>\n        \n        {showPreview && (\n          <div className=\"space-y-3\">\n            <div className=\"flex flex-wrap gap-1\">\n              {previewBadges.map((badge, index) => (\n                <Badge key={index} variant={badge.variant} className=\"text-xs\">\n                  {badge.label}\n                </Badge>\n              ))}\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"text-xs font-medium\">Sample Items:</div>\n              {previewItems.map((item, index) => (\n                <div key={index} className=\"p-2 bg-gray-50 rounded text-xs\">\n                  <div className=\"font-medium\">{item.question}</div>\n                  {item.options && (\n                    <div className=\"mt-1 text-gray-600\">\n                      {item.options.slice(0, 2).join(', ')}...\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-2\">Choose Test Style</h3>\n        <p className=\"text-sm text-gray-600 mb-4\">\n          Select a preset style or customize your test configuration\n        </p>\n      </div>\n\n      {/* Preset Selection */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        {Object.values(presets).map((preset) => {\n          const Icon = getIconComponent(preset.icon);\n          const isSelected = value.test_style === preset.id;\n          \n          return (\n            <Card \n              key={preset.id}\n              className={`cursor-pointer transition-all ${\n                isSelected \n                  ? 'ring-2 ring-blue-500 bg-blue-50' \n                  : 'hover:shadow-md hover:bg-gray-50'\n              }`}\n              onClick={() => handlePresetSelect(preset.id)}\n            >\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex items-center gap-3\">\n                  <Icon className=\"h-6 w-6 text-blue-600\" />\n                  <CardTitle className=\"text-base\">{preset.label}</CardTitle>\n                </div>\n              </CardHeader>\n              <CardContent className=\"pt-0\">\n                <p className=\"text-sm text-gray-600\">{preset.description}</p>\n                <div className=\"mt-2 flex flex-wrap gap-1\">\n                  {preset.tags.slice(0, 2).map((tag) => (\n                    <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                      {tag}\n                    </Badge>\n                  ))}\n                </div>\n                {isSelected && (\n                  <Badge className=\"mt-2\" variant=\"default\">\n                    Selected\n                  </Badge>\n                )}\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Validation Issues */}\n      {renderValidationIssues()}\n\n      {/* Advanced Configuration */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h4 className=\"font-medium\">Advanced Configuration</h4>\n          <Checkbox\n            checked={showAdvanced}\n            onCheckedChange={setShowAdvanced}\n          />\n        </div>\n\n        {showAdvanced && (\n          <div className=\"space-y-4 p-4 border rounded-lg\">\n            {/* Timing Configuration */}\n            <div className=\"space-y-3\">\n              <Label>Timing Configuration</Label>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"text-sm\">Total Time (minutes)</Label>\n                  <Slider\n                    value={[effectiveConfig.timing?.total_minutes || 15]}\n                    onValueChange={([value]) => \n                      handleOverrideChange('timing', {\n                        ...effectiveConfig.timing,\n                        total_minutes: value\n                      })\n                    }\n                    min={5}\n                    max={120}\n                    step={5}\n                    className=\"mt-2\"\n                  />\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    {effectiveConfig.timing?.total_minutes || 15} minutes\n                  </div>\n                </div>\n                <div>\n                  <Label className=\"text-sm\">Per Item Time (seconds)</Label>\n                  <Slider\n                    value={[effectiveConfig.timing?.per_item_seconds || 60]}\n                    onValueChange={([value]) => \n                      handleOverrideChange('timing', {\n                        ...effectiveConfig.timing,\n                        per_item_seconds: value\n                      })\n                    }\n                    min={30}\n                    max={600}\n                    step={30}\n                    className=\"mt-2\"\n                  />\n                  <div className=\"text-xs text-gray-500 mt-1\">\n                    {effectiveConfig.timing?.per_item_seconds || 60} seconds\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Feedback Configuration */}\n            <div>\n              <Label>Feedback Mode</Label>\n              <select\n                value={effectiveConfig.feedback || 'immediate'}\n                onChange={(e) => handleOverrideChange('feedback', e.target.value)}\n                className=\"mt-2 w-full p-2 border rounded-md\"\n              >\n                <option value=\"immediate\">Immediate</option>\n                <option value=\"on_submit\">On Submit</option>\n                <option value=\"end_only\">End Only</option>\n                <option value=\"tiered_hints\">Tiered Hints</option>\n              </select>\n            </div>\n\n            {/* Difficulty Configuration */}\n            <div>\n              <Label>Difficulty Level</Label>\n              <select\n                value={effectiveConfig.difficulty || 'balanced'}\n                onChange={(e) => handleOverrideChange('difficulty', e.target.value)}\n                className=\"mt-2 w-full p-2 border rounded-md\"\n              >\n                <option value=\"easier\">Easier</option>\n                <option value=\"balanced\">Balanced</option>\n                <option value=\"harder\">Harder</option>\n              </select>\n            </div>\n\n            {/* Hints Configuration */}\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                checked={effectiveConfig.hints || false}\n                onCheckedChange={(checked) => handleOverrideChange('hints', checked)}\n              />\n              <Label>Enable Hints</Label>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Preview */}\n      {renderPreview()}\n\n      {/* Navigation */}\n      <div className=\"flex justify-between\">\n        <Button variant=\"outline\" onClick={onBack}>\n          Back\n        </Button>\n        <Button onClick={onNext}>\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":["StylePicker","PRESETS","mcq_quiz","name","description","icon","Target","config","timing","total_minutes","per_item_seconds","feedback","item_mix","single_select","cloze","short_answer","numeric","multi_step","difficulty","hints","mixed_checkpoint","CheckCircle2","stem_problem_set","Settings","getIconComponent","iconName","iconMap","target","settings","clock","Clock","message","MessageSquare","lightbulb","Lightbulb","value","onChange","onNext","onBack","showAdvanced","setShowAdvanced","useState","validationIssues","setValidationIssues","previewItems","setPreviewItems","previewBadges","setPreviewBadges","showPreview","setShowPreview","presets","getMVPPresets","effectiveConfig","setEffectiveConfig","test_style","style_config_override","useEffect","validation","validateConfig","issues","length","trackValidationTriggered","some","i","level","items","generatePreviewItems","badges","generatePreviewBadges","handlePresetSelect","presetId","preset","configWithRequiredTiming","undefined","newConfig","trackStyleSelected","label","handleOverrideChange","key","newValue","oldValue","updatedOverrides","configForOnChange","trackStyleCustomized","handleApplyAllFixes","fixes","fixedConfig","applyFixes","trackAutofixApplied","map","f","path","handlePreviewToggle","trackPreviewOpened","renderValidationIssues","errors","filter","warnings","info","div","className","h4","fix","Button","size","variant","onClick","issue","index","Alert","AlertTriangle","AlertDescription","strong","Info","renderPreview","span","badge","Badge","item","question","options","slice","join","h3","p","Object","values","Icon","isSelected","id","Card","CardHeader","CardTitle","CardContent","tags","tag","Checkbox","checked","onCheckedChange","Label","Slider","onValueChange","min","max","step","select","e","option"],"mappings":"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"}