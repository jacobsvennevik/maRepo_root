{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/components/DiagnosticDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { axiosApi } from \"@/lib/axios-api\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { CreateDiagnosticWizard } from './CreateDiagnosticWizard';\nimport { Calendar, Clock, Users, Target, Plus, BarChart3, Play, Edit, Trash2 } from 'lucide-react';\n\ninterface DiagnosticSession {\n  id: string;\n  topic: string;\n  status: 'DRAFT' | 'OPEN' | 'CLOSED';\n  delivery_mode: 'IMMEDIATE_FEEDBACK' | 'DEFERRED_FEEDBACK';\n  scheduled_for?: string;\n  due_at?: string;\n  max_questions: number;\n  created_at: string;\n  participation_rate?: number;\n  average_score?: number;\n}\n\ninterface CreateDiagnosticForm {\n  topic: string;\n  delivery_mode: 'IMMEDIATE_FEEDBACK' | 'DEFERRED_FEEDBACK';\n  max_questions: number;\n  difficulty: number;\n  scheduled_for?: string;\n  due_at?: string;\n}\n\nexport default function DiagnosticDashboard({ projectId }: { projectId: string }) {\n  const [sessions, setSessions] = useState<DiagnosticSession[]>([]);\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchDiagnosticSessions();\n  }, [projectId]);\n\n  const fetchDiagnosticSessions = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axiosApi.get(`diagnostic-sessions/?project=${projectId}`);\n      const data = response.data;\n      setSessions(data.results || data || []);\n    } catch (error) {\n      console.error('Failed to fetch diagnostic sessions:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDiagnosticCreated = (newSession: any) => {\n    setSessions(prev => [newSession, ...prev]);\n  };\n\n  const getStatusBadge = (status: string) => {\n    const variants = {\n      DRAFT: 'secondary',\n      OPEN: 'default',\n      CLOSED: 'destructive',\n    } as const;\n    \n    return <Badge variant={variants[status as keyof typeof variants] || 'secondary'}>{status}</Badge>;\n  };\n\n  const getDeliveryModeLabel = (mode: string) => {\n    return mode === 'IMMEDIATE_FEEDBACK' ? 'Immediate Feedback' : 'Deferred Feedback';\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'Not set';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const formatTime = (dateString?: string) => {\n    if (!dateString) return 'Not set';\n    return new Date(dateString).toLocaleTimeString();\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Pre-Lecture Diagnostics</h2>\n          <p className=\"text-muted-foreground\">\n            Assess student readiness and identify knowledge gaps before lectures\n          </p>\n        </div>\n        <Button onClick={() => setIsCreateDialogOpen(true)}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          Create Diagnostic\n        </Button>\n        \n        <CreateDiagnosticWizard\n          open={isCreateDialogOpen}\n          onOpenChange={setIsCreateDialogOpen}\n          projectId={projectId}\n          onCreated={handleDiagnosticCreated}\n        />\n      </div>\n\n      {/* Tabs */}\n      <Tabs defaultValue=\"all\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"all\">All Sessions</TabsTrigger>\n          <TabsTrigger value=\"draft\">Draft</TabsTrigger>\n          <TabsTrigger value=\"open\">Open</TabsTrigger>\n          <TabsTrigger value=\"closed\">Closed</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"all\" className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {sessions.map((session) => (\n              <DiagnosticSessionCard\n                key={session.id}\n                session={session}\n                onRefresh={fetchDiagnosticSessions}\n              />\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"draft\" className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {sessions.filter(s => s.status === 'DRAFT').map((session) => (\n              <DiagnosticSessionCard\n                key={session.id}\n                session={session}\n                onRefresh={fetchDiagnosticSessions}\n              />\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"open\" className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {sessions.filter(s => s.status === 'OPEN').map((session) => (\n              <DiagnosticSessionCard\n                key={session.id}\n                session={session}\n                onRefresh={fetchDiagnosticSessions}\n              />\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"closed\" className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {sessions.filter(s => s.status === 'CLOSED').map((session) => (\n              <DiagnosticSessionCard\n                key={session.id}\n                session={session}\n                onRefresh={fetchDiagnosticSessions}\n              />\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {sessions.length === 0 && !isLoading && (\n        <div className=\"text-center py-12\">\n          <Target className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n          <h3 className=\"mt-4 text-lg font-semibold\">No diagnostic sessions yet</h3>\n          <p className=\"mt-2 text-muted-foreground\">\n            Create your first diagnostic to start assessing student readiness\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction DiagnosticSessionCard({ \n  session, \n  onRefresh \n}: { \n  session: DiagnosticSession; \n  onRefresh: () => void;\n}) {\n  const getStatusBadge = (status: string) => {\n    const variants = {\n      DRAFT: 'secondary',\n      OPEN: 'default',\n      CLOSED: 'destructive',\n    } as const;\n    \n    return <Badge variant={variants[status as keyof typeof variants] || 'secondary'}>{status}</Badge>;\n  };\n\n  const getDeliveryModeLabel = (mode: string) => {\n    return mode === 'IMMEDIATE_FEEDBACK' ? 'Immediate Feedback' : 'Deferred Feedback';\n  };\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'Not set';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const formatTime = (dateString?: string) => {\n    if (!dateString) return 'Not set';\n    return new Date(dateString).toLocaleTimeString();\n  };\n\n  const handleStatusChange = async (newStatus: string) => {\n    try {\n      await axiosApi.patch(`diagnostic-sessions/${session.id}/`, { status: newStatus });\n      onRefresh();\n    } catch (error) {\n      console.error('Failed to update status:', error);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!confirm('Are you sure you want to delete this diagnostic session?')) return;\n    \n    try {\n      await axiosApi.delete(`diagnostic-sessions/${session.id}/`);\n      onRefresh();\n    } catch (error) {\n      console.error('Failed to delete session:', error);\n    }\n  };\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"space-y-1\">\n            <CardTitle className=\"text-lg\">{session.topic}</CardTitle>\n            <div className=\"flex items-center space-x-2\">\n              {getStatusBadge(session.status)}\n              <Badge variant=\"outline\">{getDeliveryModeLabel(session.delivery_mode)}</Badge>\n            </div>\n          </div>\n          <div className=\"flex space-x-1\">\n            <Button variant=\"ghost\" size=\"sm\" onClick={() => handleStatusChange('OPEN')}>\n              <Play className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\">\n              <Edit className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" onClick={handleDelete}>\n              <Trash2 className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n            <span>{formatDate(session.scheduled_for)}</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n            <span>{formatTime(session.due_at)}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-muted-foreground\">Questions: {session.max_questions}</span>\n          <span className=\"text-muted-foreground\">\n            Created: {formatDate(session.created_at)}\n          </span>\n        </div>\n\n        {session.participation_rate !== undefined && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span>Participation</span>\n              <span>{Math.round(session.participation_rate * 100)}%</span>\n            </div>\n            <Progress value={session.participation_rate * 100} className=\"h-2\" />\n          </div>\n        )}\n\n        {session.average_score !== undefined && (\n          <div className=\"flex items-center justify-between text-sm\">\n            <span>Average Score</span>\n            <span className=\"font-medium\">{Math.round(session.average_score * 100)}%</span>\n          </div>\n        )}\n\n        <div className=\"flex space-x-2\">\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n            <BarChart3 className=\"mr-2 h-4 w-4\" />\n            Analytics\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n            <Users className=\"mr-2 h-4 w-4\" />\n            Responses\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["DiagnosticDashboard","projectId","sessions","setSessions","useState","isCreateDialogOpen","setIsCreateDialogOpen","isLoading","setIsLoading","useEffect","fetchDiagnosticSessions","response","axiosApi","get","data","results","error","console","handleDiagnosticCreated","newSession","prev","getStatusBadge","status","variants","DRAFT","OPEN","CLOSED","Badge","variant","getDeliveryModeLabel","mode","formatDate","dateString","Date","toLocaleDateString","formatTime","toLocaleTimeString","div","className","h2","p","Button","onClick","Plus","CreateDiagnosticWizard","open","onOpenChange","onCreated","Tabs","defaultValue","TabsList","TabsTrigger","value","TabsContent","map","session","DiagnosticSessionCard","onRefresh","id","filter","s","length","Target","h3","handleStatusChange","newStatus","patch","handleDelete","confirm","delete","Card","CardHeader","CardTitle","topic","delivery_mode","size","Play","Edit","Trash2","CardContent","Calendar","span","scheduled_for","Clock","due_at","max_questions","created_at","participation_rate","undefined","Math","round","Progress","average_score","BarChart3","Users"],"mappings":"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"}