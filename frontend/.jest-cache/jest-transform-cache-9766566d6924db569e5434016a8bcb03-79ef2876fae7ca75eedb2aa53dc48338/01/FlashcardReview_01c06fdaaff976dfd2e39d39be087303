c724c9cde105c1d695cad0e8cd0178c8
/**
 * Real-time flashcard review component with live progress updates.
 */ "use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FlashcardReview", {
    enumerable: true,
    get: function() {
        return FlashcardReview;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _useRealtime = require("../../../hooks/useRealtime");
const _button = require("../../../components/ui/button");
const _card = require("../../../components/ui/card");
const _badge = require("../../../components/ui/badge");
const _progress = require("../../../components/ui/progress");
const _studystatsdisplay = require("../../../components/shared/study-stats-display");
const _designtokens = require("../../../constants/design-tokens");
function FlashcardReview({ flashcards, onComplete }) {
    const [currentIndex, setCurrentIndex] = (0, _react.useState)(0);
    const [showAnswer, setShowAnswer] = (0, _react.useState)(false);
    const [sessionStats, setSessionStats] = (0, _react.useState)({
        reviewed: 0,
        correct: 0,
        incorrect: 0
    });
    const { reviewFlashcard, stats, isConnected } = (0, _useRealtime.useStudyProgress)();
    const currentCard = flashcards[currentIndex];
    const progress = (currentIndex + 1) / flashcards.length * 100;
    (0, _react.useEffect)(()=>{
        // Reset session stats when flashcards change
        setSessionStats({
            reviewed: 0,
            correct: 0,
            incorrect: 0
        });
        setCurrentIndex(0);
        setShowAnswer(false);
    }, [
        flashcards
    ]);
    const handleRating = async (rating)=>{
        if (!currentCard) return;
        try {
            // Send review to server via WebSocket
            reviewFlashcard(currentCard.id, rating);
            // Update session stats
            setSessionStats((prev)=>({
                    reviewed: prev.reviewed + 1,
                    correct: prev.correct + (rating >= 3 ? 1 : 0),
                    incorrect: prev.incorrect + (rating < 3 ? 1 : 0)
                }));
            // Move to next card
            if (currentIndex < flashcards.length - 1) {
                setCurrentIndex((prev)=>prev + 1);
                setShowAnswer(false);
            } else {
                // Session complete
                onComplete?.();
            }
        } catch (error) {
            console.error('Error reviewing flashcard:', error);
        }
    };
    const getDifficultyColor = (difficulty)=>{
        return _designtokens.DIFFICULTY_COLORS[difficulty] || _designtokens.DIFFICULTY_COLORS[1];
    };
    const getRatingButtonColor = (rating)=>{
        return _designtokens.RATING_BUTTON_COLORS[rating] || _designtokens.RATING_BUTTON_COLORS[3];
    };
    if (!currentCard) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
            className: "w-full max-w-2xl mx-auto",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "p-8 text-center",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                        className: "text-lg font-semibold text-gray-600",
                        children: "No flashcards available"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-gray-500 mt-2",
                        children: "Create some flashcards to start studying!"
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "w-full max-w-2xl mx-auto space-y-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: `w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "text-sm text-gray-600",
                                children: isConnected ? 'Live progress tracking' : 'Offline mode'
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                        variant: "outline",
                        className: getDifficultyColor(currentCard.difficulty),
                        children: [
                            "Difficulty ",
                            currentCard.difficulty
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex justify-between text-sm text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                children: [
                                    "Card ",
                                    currentIndex + 1,
                                    " of ",
                                    flashcards.length
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                children: [
                                    Math.round(progress),
                                    "% complete"
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                        value: progress,
                        className: _designtokens.UI_CONSTANTS.PROGRESS_BAR_HEIGHT
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex justify-center gap-4 text-sm",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                        className: "text-blue-600",
                        children: [
                            "✅ ",
                            sessionStats.correct,
                            " correct"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                        className: "text-red-600",
                        children: [
                            "❌ ",
                            sessionStats.incorrect,
                            " incorrect"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                        className: "text-gray-600",
                        children: [
                            "\uD83D\uDCCA ",
                            sessionStats.reviewed,
                            " reviewed"
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                className: _designtokens.UI_CONSTANTS.CARD_MIN_HEIGHT,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                            className: "text-center",
                            children: [
                                currentCard.flashcard_set.project.name,
                                " - ",
                                currentCard.flashcard_set.title
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                        className: "space-y-6",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "text-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                        className: "text-lg font-semibold text-gray-800 mb-4",
                                        children: "Question"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-gray-700 text-lg leading-relaxed",
                                        children: currentCard.question
                                    })
                                ]
                            }),
                            showAnswer && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "text-center border-t pt-6",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                        className: "text-lg font-semibold text-gray-800 mb-4",
                                        children: "Answer"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-gray-700 text-lg leading-relaxed",
                                        children: currentCard.answer
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "flex justify-center gap-4",
                                children: !showAnswer ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    onClick: ()=>setShowAnswer(true),
                                    className: "px-8 py-2",
                                    children: "Show Answer"
                                }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "space-y-4",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "text-center text-gray-600 mb-4",
                                            children: "How well did you know this?"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "flex justify-center gap-2",
                                            children: [
                                                1,
                                                2,
                                                3,
                                                4,
                                                5
                                            ].map((rating)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                    onClick: ()=>handleRating(rating),
                                                    className: `w-12 h-12 rounded-full text-white font-bold ${getRatingButtonColor(rating)}`,
                                                    children: rating
                                                }, rating))
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "flex justify-center gap-8 text-xs text-gray-500 mt-2",
                                            children: Object.entries(_designtokens.RATING_LABELS).map(([rating, label])=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    children: [
                                                        rating,
                                                        " - ",
                                                        label
                                                    ]
                                                }, rating))
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                ]
            }),
            stats && /*#__PURE__*/ (0, _jsxruntime.jsx)(_studystatsdisplay.StudyStatsDisplay, {
                stats: stats
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,