{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/flashcards/components/FlashcardReview.tsx"],"sourcesContent":["/**\n * Real-time flashcard review component with live progress updates.\n */\n\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { useStudyProgress } from '@/hooks/useRealtime';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { StudyStatsDisplay } from '@/components/shared/study-stats-display';\nimport { DIFFICULTY_COLORS, RATING_BUTTON_COLORS, RATING_LABELS, UI_CONSTANTS } from '@/constants/design-tokens';\n\ninterface Flashcard {\n  id: string;\n  question: string;\n  answer: string;\n  difficulty: number;\n  next_review?: string;\n  flashcard_set: {\n    id: string;\n    title: string;\n    project: {\n      id: string;\n      name: string;\n    };\n  };\n}\n\ninterface FlashcardReviewProps {\n  flashcards: Flashcard[];\n  onComplete?: () => void;\n}\n\nexport function FlashcardReview({ flashcards, onComplete }: FlashcardReviewProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [sessionStats, setSessionStats] = useState({\n    reviewed: 0,\n    correct: 0,\n    incorrect: 0,\n  });\n  \n  const { reviewFlashcard, stats, isConnected } = useStudyProgress();\n  \n  const currentCard = flashcards[currentIndex];\n  const progress = ((currentIndex + 1) / flashcards.length) * 100;\n  \n  useEffect(() => {\n    // Reset session stats when flashcards change\n    setSessionStats({ reviewed: 0, correct: 0, incorrect: 0 });\n    setCurrentIndex(0);\n    setShowAnswer(false);\n  }, [flashcards]);\n\n  const handleRating = async (rating: number) => {\n    if (!currentCard) return;\n    \n    try {\n      // Send review to server via WebSocket\n      reviewFlashcard(currentCard.id, rating);\n      \n      // Update session stats\n      setSessionStats(prev => ({\n        reviewed: prev.reviewed + 1,\n        correct: prev.correct + (rating >= 3 ? 1 : 0),\n        incorrect: prev.incorrect + (rating < 3 ? 1 : 0),\n      }));\n      \n      // Move to next card\n      if (currentIndex < flashcards.length - 1) {\n        setCurrentIndex(prev => prev + 1);\n        setShowAnswer(false);\n      } else {\n        // Session complete\n        onComplete?.();\n      }\n    } catch (error) {\n      console.error('Error reviewing flashcard:', error);\n    }\n  };\n\n  const getDifficultyColor = (difficulty: number) => {\n    return DIFFICULTY_COLORS[difficulty as keyof typeof DIFFICULTY_COLORS] || DIFFICULTY_COLORS[1];\n  };\n\n  const getRatingButtonColor = (rating: number) => {\n    return RATING_BUTTON_COLORS[rating as keyof typeof RATING_BUTTON_COLORS] || RATING_BUTTON_COLORS[3];\n  };\n\n  if (!currentCard) {\n    return (\n      <Card className=\"w-full max-w-2xl mx-auto\">\n        <CardContent className=\"p-8 text-center\">\n          <h3 className=\"text-lg font-semibold text-gray-600\">No flashcards available</h3>\n          <p className=\"text-gray-500 mt-2\">Create some flashcards to start studying!</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto space-y-6\">\n      {/* Connection status */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span className=\"text-sm text-gray-600\">\n            {isConnected ? 'Live progress tracking' : 'Offline mode'}\n          </span>\n        </div>\n        <Badge variant=\"outline\" className={getDifficultyColor(currentCard.difficulty)}>\n          Difficulty {currentCard.difficulty}\n        </Badge>\n      </div>\n\n      {/* Progress bar */}\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between text-sm text-gray-600\">\n          <span>Card {currentIndex + 1} of {flashcards.length}</span>\n          <span>{Math.round(progress)}% complete</span>\n        </div>\n        <Progress value={progress} className={UI_CONSTANTS.PROGRESS_BAR_HEIGHT} />\n      </div>\n\n      {/* Session stats */}\n      <div className=\"flex justify-center gap-4 text-sm\">\n        <span className=\"text-blue-600\">‚úÖ {sessionStats.correct} correct</span>\n        <span className=\"text-red-600\">‚ùå {sessionStats.incorrect} incorrect</span>\n        <span className=\"text-gray-600\">üìä {sessionStats.reviewed} reviewed</span>\n      </div>\n\n      {/* Flashcard */}\n      <Card className={UI_CONSTANTS.CARD_MIN_HEIGHT}>\n        <CardHeader>\n          <CardTitle className=\"text-center\">\n            {currentCard.flashcard_set.project.name} - {currentCard.flashcard_set.title}\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Question */}\n          <div className=\"text-center\">\n            <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Question</h3>\n            <p className=\"text-gray-700 text-lg leading-relaxed\">{currentCard.question}</p>\n          </div>\n\n          {/* Answer */}\n          {showAnswer && (\n            <div className=\"text-center border-t pt-6\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Answer</h3>\n              <p className=\"text-gray-700 text-lg leading-relaxed\">{currentCard.answer}</p>\n            </div>\n          )}\n\n          {/* Actions */}\n          <div className=\"flex justify-center gap-4\">\n            {!showAnswer ? (\n              <Button \n                onClick={() => setShowAnswer(true)}\n                className=\"px-8 py-2\"\n              >\n                Show Answer\n              </Button>\n            ) : (\n              <div className=\"space-y-4\">\n                <p className=\"text-center text-gray-600 mb-4\">How well did you know this?</p>\n                <div className=\"flex justify-center gap-2\">\n                  {[1, 2, 3, 4, 5].map((rating) => (\n                    <Button\n                      key={rating}\n                      onClick={() => handleRating(rating)}\n                      className={`w-12 h-12 rounded-full text-white font-bold ${getRatingButtonColor(rating)}`}\n                    >\n                      {rating}\n                    </Button>\n                  ))}\n                </div>\n                <div className=\"flex justify-center gap-8 text-xs text-gray-500 mt-2\">\n                  {Object.entries(RATING_LABELS).map(([rating, label]) => (\n                    <span key={rating}>{rating} - {label}</span>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Global study stats */}\n      {stats && (\n        <StudyStatsDisplay stats={stats} />\n      )}\n    </div>\n  );\n}\n"],"names":["FlashcardReview","flashcards","onComplete","currentIndex","setCurrentIndex","useState","showAnswer","setShowAnswer","sessionStats","setSessionStats","reviewed","correct","incorrect","reviewFlashcard","stats","isConnected","useStudyProgress","currentCard","progress","length","useEffect","handleRating","rating","id","prev","error","console","getDifficultyColor","difficulty","DIFFICULTY_COLORS","getRatingButtonColor","RATING_BUTTON_COLORS","Card","className","CardContent","h3","p","div","span","Badge","variant","Math","round","Progress","value","UI_CONSTANTS","PROGRESS_BAR_HEIGHT","CARD_MIN_HEIGHT","CardHeader","CardTitle","flashcard_set","project","name","title","question","answer","Button","onClick","map","Object","entries","RATING_LABELS","label","StudyStatsDisplay"],"mappings":"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"}