f2b06af748ee436cd45089ae6e68d89d
"use strict";
jest.mock('@/lib/axios', ()=>({
        axiosGeneration: {
            get: jest.fn()
        }
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _datatransformation = require("../data-transformation");
const _axios = require("../../../../../../lib/axios");
describe('data-transformation: refreshFlashcardSets', ()=>{
    beforeEach(()=>{
        _axios.axiosGeneration.get.mockReset();
    });
    it('calls generation endpoint for project-scoped sets', async ()=>{
        ;
        _axios.axiosGeneration.get.mockResolvedValue({
            data: {
                results: []
            }
        });
        const projectId = '203062be-58d0-4f98-bbd4-33b4ce081276';
        await (0, _datatransformation.refreshFlashcardSets)(projectId);
        expect(_axios.axiosGeneration.get).toHaveBeenCalledWith(`projects/${projectId}/flashcard-sets/`);
    });
    it('falls back to UUID when projectId is numeric (via global hint)', async ()=>{
        ;
        _axios.axiosGeneration.get.mockResolvedValue({
            data: {
                results: []
            }
        });
        const uuid = '203062be-58d0-4f98-bbd4-33b4ce081276';
        global.__activeProjectId = uuid;
        await (0, _datatransformation.refreshFlashcardSets)('1');
        expect(_axios.axiosGeneration.get).toHaveBeenCalledWith(`projects/${uuid}/flashcard-sets/`);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNvYmhvcm5zdmVubmV2aWsvRG9jdW1lbnRzL0dpdEh1Yi9tYVJlcG9fcm9vdC9mcm9udGVuZC9zcmMvYXBwL3Byb2plY3RzL1twcm9qZWN0SWRdL2ZsYXNoY2FyZHMvdXRpbHMvX190ZXN0c19fL2RhdGEtdHJhbnNmb3JtYXRpb24udGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWZyZXNoRmxhc2hjYXJkU2V0cyB9IGZyb20gJy4uL2RhdGEtdHJhbnNmb3JtYXRpb24nXG5pbXBvcnQgeyBheGlvc0dlbmVyYXRpb24gfSBmcm9tICdAL2xpYi9heGlvcydcblxuamVzdC5tb2NrKCdAL2xpYi9heGlvcycsICgpID0+ICh7XG4gIGF4aW9zR2VuZXJhdGlvbjogeyBnZXQ6IGplc3QuZm4oKSB9LFxufSkpXG5cbmRlc2NyaWJlKCdkYXRhLXRyYW5zZm9ybWF0aW9uOiByZWZyZXNoRmxhc2hjYXJkU2V0cycsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgKGF4aW9zR2VuZXJhdGlvbi5nZXQgYXMgamVzdC5Nb2NrKS5tb2NrUmVzZXQoKVxuICB9KVxuXG4gIGl0KCdjYWxscyBnZW5lcmF0aW9uIGVuZHBvaW50IGZvciBwcm9qZWN0LXNjb3BlZCBzZXRzJywgYXN5bmMgKCkgPT4ge1xuICAgIDsoYXhpb3NHZW5lcmF0aW9uLmdldCBhcyBqZXN0Lk1vY2spLm1vY2tSZXNvbHZlZFZhbHVlKHsgZGF0YTogeyByZXN1bHRzOiBbXSB9IH0pXG5cbiAgICBjb25zdCBwcm9qZWN0SWQgPSAnMjAzMDYyYmUtNThkMC00Zjk4LWJiZDQtMzNiNGNlMDgxMjc2J1xuICAgIGF3YWl0IHJlZnJlc2hGbGFzaGNhcmRTZXRzKHByb2plY3RJZClcblxuICAgIGV4cGVjdChheGlvc0dlbmVyYXRpb24uZ2V0KS50b0hhdmVCZWVuQ2FsbGVkV2l0aChgcHJvamVjdHMvJHtwcm9qZWN0SWR9L2ZsYXNoY2FyZC1zZXRzL2ApXG4gIH0pXG5cbiAgaXQoJ2ZhbGxzIGJhY2sgdG8gVVVJRCB3aGVuIHByb2plY3RJZCBpcyBudW1lcmljICh2aWEgZ2xvYmFsIGhpbnQpJywgYXN5bmMgKCkgPT4ge1xuICAgIDsoYXhpb3NHZW5lcmF0aW9uLmdldCBhcyBqZXN0Lk1vY2spLm1vY2tSZXNvbHZlZFZhbHVlKHsgZGF0YTogeyByZXN1bHRzOiBbXSB9IH0pXG5cbiAgICBjb25zdCB1dWlkID0gJzIwMzA2MmJlLTU4ZDAtNGY5OC1iYmQ0LTMzYjRjZTA4MTI3NidcbiAgICA7KGdsb2JhbCBhcyBhbnkpLl9fYWN0aXZlUHJvamVjdElkID0gdXVpZFxuXG4gICAgYXdhaXQgcmVmcmVzaEZsYXNoY2FyZFNldHMoJzEnIGFzIGFueSlcblxuICAgIGV4cGVjdChheGlvc0dlbmVyYXRpb24uZ2V0KS50b0hhdmVCZWVuQ2FsbGVkV2l0aChgcHJvamVjdHMvJHt1dWlkfS9mbGFzaGNhcmQtc2V0cy9gKVxuICB9KVxufSlcbiJdLCJuYW1lcyI6WyJqZXN0IiwibW9jayIsImF4aW9zR2VuZXJhdGlvbiIsImdldCIsImZuIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwibW9ja1Jlc2V0IiwiaXQiLCJtb2NrUmVzb2x2ZWRWYWx1ZSIsImRhdGEiLCJyZXN1bHRzIiwicHJvamVjdElkIiwicmVmcmVzaEZsYXNoY2FyZFNldHMiLCJleHBlY3QiLCJ0b0hhdmVCZWVuQ2FsbGVkV2l0aCIsInV1aWQiLCJnbG9iYWwiLCJfX2FjdGl2ZVByb2plY3RJZCJdLCJtYXBwaW5ncyI6IjtBQUdBQSxLQUFLQyxJQUFJLENBQUMsZUFBZSxJQUFPLENBQUE7UUFDOUJDLGlCQUFpQjtZQUFFQyxLQUFLSCxLQUFLSSxFQUFFO1FBQUc7SUFDcEMsQ0FBQTs7OztvQ0FMcUM7dUJBQ0w7QUFNaENDLFNBQVMsNkNBQTZDO0lBQ3BEQyxXQUFXO1FBQ1JKLHNCQUFlLENBQUNDLEdBQUcsQ0FBZUksU0FBUztJQUM5QztJQUVBQyxHQUFHLHFEQUFxRDs7UUFDcEROLHNCQUFlLENBQUNDLEdBQUcsQ0FBZU0saUJBQWlCLENBQUM7WUFBRUMsTUFBTTtnQkFBRUMsU0FBUyxFQUFFO1lBQUM7UUFBRTtRQUU5RSxNQUFNQyxZQUFZO1FBQ2xCLE1BQU1DLElBQUFBLHdDQUFvQixFQUFDRDtRQUUzQkUsT0FBT1osc0JBQWUsQ0FBQ0MsR0FBRyxFQUFFWSxvQkFBb0IsQ0FBQyxDQUFDLFNBQVMsRUFBRUgsVUFBVSxnQkFBZ0IsQ0FBQztJQUMxRjtJQUVBSixHQUFHLGtFQUFrRTs7UUFDakVOLHNCQUFlLENBQUNDLEdBQUcsQ0FBZU0saUJBQWlCLENBQUM7WUFBRUMsTUFBTTtnQkFBRUMsU0FBUyxFQUFFO1lBQUM7UUFBRTtRQUU5RSxNQUFNSyxPQUFPO1FBQ1hDLE9BQWVDLGlCQUFpQixHQUFHRjtRQUVyQyxNQUFNSCxJQUFBQSx3Q0FBb0IsRUFBQztRQUUzQkMsT0FBT1osc0JBQWUsQ0FBQ0MsR0FBRyxFQUFFWSxvQkFBb0IsQ0FBQyxDQUFDLFNBQVMsRUFBRUMsS0FBSyxnQkFBZ0IsQ0FBQztJQUNyRjtBQUNGIn0=