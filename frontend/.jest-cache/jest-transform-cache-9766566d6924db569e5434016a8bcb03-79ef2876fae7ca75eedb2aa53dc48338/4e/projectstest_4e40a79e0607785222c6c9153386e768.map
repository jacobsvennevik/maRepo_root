{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/tests/api-integration/projects.test.ts"],"sourcesContent":["/**\n * API Integration Tests for Projects\n * These tests will identify and help fix Project API endpoint issues\n */\n\nimport { axiosApi } from '@/lib/axios';\njest.setTimeout(30000);\nimport { joinUrl } from '../utils/url';\n\n// Mock console.error to capture API errors\nconst originalConsoleError = console.error;\nlet apiErrors: any[] = [];\n\nbeforeEach(() => {\n  apiErrors = [];\n  console.error = jest.fn((...args: any[]) => {\n    const first = args[0];\n    const isInterestingString = typeof first === 'string' && (first.includes('API error') || first.includes('Server error'));\n    const hasAxiosFields = args.some((a: any) => a && typeof a === 'object' && (a.url || a.fullURL || a.method));\n    if (isInterestingString || hasAxiosFields) {\n      apiErrors.push(args);\n    }\n    return originalConsoleError(...args);\n  });\n});\n\nafterEach(() => {\n  console.error = originalConsoleError;\n});\n\ndescribe('Projects API Integration Tests', () => {\n  const testProjectId = 'test-project-123';\n  \n  describe('Project CRUD Operations', () => {\n    it('should test project creation endpoint', async () => {\n      const endpoint = 'projects/';\n      const projectData = {\n        name: 'Test Project',\n        description: 'A test project for API validation',\n        education_level: 'undergraduate'\n      };\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        const response = await axiosApi.post(endpoint, projectData);\n        console.log('✅ Project creation success:', response.status);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n\n    it('should test project listing endpoint', async () => {\n      const endpoint = 'projects/';\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n\n    it('should test individual project retrieval', async () => {\n      const endpoint = `projects/${testProjectId}/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (fullURL) {\n          expect(fullURL).toContain(testProjectId);\n        }\n      }\n    });\n\n    it('should test project update endpoint', async () => {\n      const endpoint = `projects/${testProjectId}/`;\n      const updateData = {\n        name: 'Updated Test Project',\n        description: 'Updated description'\n      };\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.patch(endpoint, updateData);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.method) {\n          expect(error.config.method).toBe('patch');\n        }\n      }\n    });\n\n    it('should test project deletion endpoint', async () => {\n      const endpoint = `projects/${testProjectId}/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.delete(endpoint);\n      } catch (error: any) {\n        if (error.config?.method) {\n          expect(error.config.method).toBe('delete');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n  });\n\n  describe('Project Files API', () => {\n    it('should test project files listing', async () => {\n      const endpoint = `projects/${testProjectId}/files/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (fullURL) {\n          expect(fullURL).toContain('files');\n        }\n      }\n    });\n\n    it('should test file upload endpoint', async () => {\n      const endpoint = `projects/${testProjectId}/upload_file/`;\n      \n      // Create a mock FormData object\n      const mockFile = new File(['test content'], 'test.pdf', { type: 'application/pdf' });\n      const formData = new FormData();\n      formData.append('file', mockFile);\n      formData.append('file_type', 'course_files');\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.post(endpoint, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n      }\n    });\n\n    it('should test individual file retrieval', async () => {\n      const fileId = 'test-file-456';\n      const endpoint = `projects/${testProjectId}/files/${fileId}/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (fullURL) {\n          expect(fullURL).toContain(fileId);\n        }\n      }\n    });\n\n    it('should test file deletion', async () => {\n      const fileId = 'test-file-456';\n      const endpoint = `projects/${testProjectId}/files/${fileId}/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.delete(endpoint);\n      } catch (error: any) {\n        if (error.config?.method) {\n          expect(error.config.method).toBe('delete');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n  });\n\n  describe('Project Study Materials API', () => {\n    it('should test study materials listing', async () => {\n      const endpoint = `projects/${testProjectId}/study-materials/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (fullURL) {\n          expect(fullURL).toContain('study-materials');\n        }\n      }\n    });\n\n    it('should test study material creation', async () => {\n      const endpoint = `projects/${testProjectId}/study-materials/`;\n      const materialData = {\n        title: 'Test Study Material',\n        content: 'This is test content for study materials',\n        material_type: 'notes'\n      };\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.post(endpoint, materialData);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n      }\n    });\n  });\n\n  describe('Project Cleanup API', () => {\n    it('should test draft cleanup endpoint', async () => {\n      const endpoint = 'projects/cleanup_drafts/';\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.post(endpoint, {});\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n        if (error.config?.method) {\n          expect(error.config.method).toBe('post');\n        }\n        if (error.config?.url) {\n          expect(error.config.url).toBe(endpoint);\n        }\n      }\n    });\n\n    it('should test project analytics', async () => {\n      const endpoint = `projects/${testProjectId}/analytics/`;\n      \n      const full = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n      expect(full).toHaveNoDoubleSlash();\n      \n      try {\n        await axiosApi.get(endpoint);\n      } catch (error: any) {\n        const fullURL = joinUrl(error.config?.baseURL || '', error.config?.url || '');\n        expect(fullURL).toHaveNoDoubleSlash();\n      }\n    });\n  });\n\n  describe('Error Pattern Detection', () => {\n    it('should analyze Project API error patterns', () => {\n      // Check for double slash patterns\n      const doubleSlashErrors = apiErrors.filter(err => \n        err.some((arg: any) => \n          typeof arg === 'object' && \n          (arg.url?.includes('//') || arg.fullURL?.includes('//projects/'))\n        )\n      );\n      \n      expect(doubleSlashErrors.length).toBe(0);\n    });\n\n    it('should check for authentication errors', () => {\n      const authErrors = apiErrors.filter(err =>\n        err.some((arg: any) => \n          typeof arg === 'object' && \n          (arg.status === 401 || arg.status === 403)\n        )\n      );\n      \n      console.log('🔍 Authentication errors found:', authErrors.length);\n      \n      if (authErrors.length > 0) {\n        console.warn('⚠️  Authentication issues detected in Project API!');\n        authErrors.forEach((err, index) => {\n          console.warn(`🚫 Auth Error ${index + 1}:`, err);\n        });\n      }\n    });\n  });\n\n  describe('Project URL Validation', () => {\n    it('should validate all project-related endpoint URLs', () => {\n      const testEndpoints = [\n        'projects/',\n        `projects/${testProjectId}/`,\n        `projects/${testProjectId}/files/`,\n        `projects/${testProjectId}/files/123/`,\n        `projects/${testProjectId}/upload_file/`,\n        `projects/${testProjectId}/study-materials/`,\n        `projects/${testProjectId}/study-materials/456/`,\n        `projects/${testProjectId}/analytics/`,\n        'projects/cleanup_drafts/',\n      ];\n      \n      testEndpoints.forEach(endpoint => {\n        // Check for leading slash (should not have one)\n        expect(endpoint.startsWith('/')).toBe(false);\n        \n        // Check for double slashes\n        expect(endpoint.includes('//')).toBe(false);\n        \n        const fullURL = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n        // Verify no double slashes in full URL\n        expect(fullURL).toHaveNoDoubleSlash();\n      });\n    });\n\n    it('should validate specific problematic endpoints', () => {\n      // Test the specific endpoints that were causing issues\n      const problematicEndpoints = [\n        `projects/${testProjectId}/flashcard-sets/`,\n        `projects/${testProjectId}/files/`,\n        `projects/${testProjectId}/study-materials/`,\n      ];\n      \n      problematicEndpoints.forEach(endpoint => {\n        // These were the ones causing the double slash issues\n        expect(endpoint.startsWith('/')).toBe(false);\n        const fullURL = joinUrl((axiosApi.defaults as any).baseURL, endpoint);\n        // This should NOT contain double slashes\n        expect(fullURL).toHaveNoDoubleSlash();\n        expect(fullURL).toContain(endpoint);\n      });\n    });\n  });\n});\n"],"names":["jest","setTimeout","originalConsoleError","console","error","apiErrors","beforeEach","fn","args","first","isInterestingString","includes","hasAxiosFields","some","a","url","fullURL","method","push","afterEach","describe","testProjectId","it","endpoint","projectData","name","description","education_level","full","joinUrl","axiosApi","defaults","baseURL","expect","toHaveNoDoubleSlash","response","post","log","status","config","toBe","get","toContain","updateData","patch","delete","mockFile","File","type","formData","FormData","append","headers","fileId","materialData","title","content","material_type","doubleSlashErrors","filter","err","arg","length","authErrors","warn","forEach","index","testEndpoints","startsWith","problematicEndpoints"],"mappings":"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"}