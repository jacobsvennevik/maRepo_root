51b613adb0dca80c678ff64081bfdd82
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AIPreview", {
    enumerable: true,
    get: function() {
        return AIPreview;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _button = require("../../../../components/ui/button");
const _badge = require("../../../../components/ui/badge");
const _checkbox = require("../../../../components/ui/checkbox");
const _card = require("../../../../components/ui/card");
const _lucidereact = require("lucide-react");
const _formatters = require("../../services/formatters");
function AIPreview({ detectedTopics, detectedDates, detectedTestTypes, onApplyTopics, onApplyDates, onApplyTestTypes, onApplyRecommendations, onDismiss }) {
    const [selectedTopics, setSelectedTopics] = (0, _react.useState)([]);
    const [selectedDates, setSelectedDates] = (0, _react.useState)([]);
    const [selectedTestTypes, setSelectedTestTypes] = (0, _react.useState)([]);
    const [selectedRecommendations, setSelectedRecommendations] = (0, _react.useState)([]);
    const [smartRecommendations, setSmartRecommendations] = (0, _react.useState)([]);
    // Auto-select high-confidence items
    (0, _react.useEffect)(()=>{
        const highConfidenceTopics = detectedTopics.filter((topic)=>topic.confidence >= 90).map((topic)=>topic.id);
        setSelectedTopics(highConfidenceTopics);
        const highConfidenceDates = detectedDates.filter((date)=>date.type === 'exam' || date.type === 'assignment').map((date)=>date.id);
        setSelectedDates(highConfidenceDates);
        const highConfidenceTestTypes = detectedTestTypes.filter((type)=>type.confidence >= 85).map((type)=>type.id);
        setSelectedTestTypes(highConfidenceTestTypes);
    }, [
        detectedTopics,
        detectedDates,
        detectedTestTypes
    ]);
    // Generate smart recommendations
    (0, _react.useEffect)(()=>{
        const recommendations = [];
        // Study schedule recommendations
        if (detectedDates.length > 0) {
            recommendations.push({
                id: 'schedule-1',
                type: 'schedule',
                title: 'Optimized Study Schedule',
                description: `Based on ${detectedDates.length} detected dates, we recommend a spaced repetition schedule with review sessions before each deadline.`,
                confidence: 92,
                action: 'Apply 3-week study schedule'
            });
        }
        // Material recommendations
        if (detectedTopics.length > 0) {
            recommendations.push({
                id: 'material-1',
                type: 'material',
                title: 'Focused Study Materials',
                description: `Create flashcards and practice tests for the ${detectedTopics.length} detected topics with highest confidence scores.`,
                confidence: 88,
                action: 'Generate study materials'
            });
        }
        // Strategy recommendations
        if (detectedTestTypes.length > 0) {
            recommendations.push({
                id: 'strategy-1',
                type: 'strategy',
                title: 'Test Preparation Strategy',
                description: `Based on detected test types, we recommend a mix of practice tests and concept review sessions.`,
                confidence: 85,
                action: 'Apply test strategy'
            });
        }
        setSmartRecommendations(recommendations);
    }, [
        detectedTopics,
        detectedDates,
        detectedTestTypes
    ]);
    const handleTopicToggle = (topicId)=>{
        setSelectedTopics((prev)=>prev.includes(topicId) ? prev.filter((id)=>id !== topicId) : [
                ...prev,
                topicId
            ]);
    };
    const handleDateToggle = (dateId)=>{
        setSelectedDates((prev)=>prev.includes(dateId) ? prev.filter((id)=>id !== dateId) : [
                ...prev,
                dateId
            ]);
    };
    const handleTestTypeToggle = (testTypeId)=>{
        setSelectedTestTypes((prev)=>prev.includes(testTypeId) ? prev.filter((id)=>id !== testTypeId) : [
                ...prev,
                testTypeId
            ]);
    };
    const handleRecommendationToggle = (recommendationId)=>{
        setSelectedRecommendations((prev)=>prev.includes(recommendationId) ? prev.filter((id)=>id !== recommendationId) : [
                ...prev,
                recommendationId
            ]);
    };
    const handleApplyAll = ()=>{
        const selectedTopicObjects = detectedTopics.filter((topic)=>selectedTopics.includes(topic.id));
        const selectedDateObjects = detectedDates.filter((date)=>selectedDates.includes(date.id));
        const selectedTestTypeObjects = detectedTestTypes.filter((testType)=>selectedTestTypes.includes(testType.id));
        const selectedRecommendationObjects = smartRecommendations.filter((rec)=>selectedRecommendations.includes(rec.id));
        onApplyTopics(selectedTopics);
        onApplyDates(selectedDateObjects);
        onApplyTestTypes(selectedTestTypes);
        onApplyRecommendations(selectedRecommendationObjects);
        onDismiss();
    };
    const handleOneClickSetup = ()=>{
        // Auto-select all high-confidence items
        const allTopicIds = detectedTopics.map((t)=>t.id);
        const allDateIds = detectedDates.map((d)=>d.id);
        const allTestTypeIds = detectedTestTypes.map((t)=>t.id);
        const allRecommendationIds = smartRecommendations.map((r)=>r.id);
        setSelectedTopics(allTopicIds);
        setSelectedDates(allDateIds);
        setSelectedTestTypes(allTestTypeIds);
        setSelectedRecommendations(allRecommendationIds);
        // Apply everything immediately
        setTimeout(()=>{
            handleApplyAll();
        }, 500);
    };
    const totalDetections = detectedTopics.length + detectedDates.length + detectedTestTypes.length;
    const totalSelected = selectedTopics.length + selectedDates.length + selectedTestTypes.length + selectedRecommendations.length;
    if (totalDetections === 0) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: "border-blue-200 bg-blue-50/50",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                className: "pb-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-600 rounded-full flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Sparkles, {
                                    className: "h-4 w-4 text-white"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                className: "text-lg text-blue-900",
                                children: "AI Analysis Complete! \uD83C\uDF89"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                        className: "text-sm text-blue-700",
                        children: [
                            "We found ",
                            totalDetections,
                            " items and generated smart recommendations. High-confidence items are pre-selected:"
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "space-y-4",
                children: [
                    detectedTopics.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.BookOpen, {
                                        className: "h-4 w-4 text-blue-600"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                        className: "font-medium text-blue-900",
                                        children: [
                                            "Detected Topics (",
                                            detectedTopics.length,
                                            ")"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                        variant: "outline",
                                        className: "text-xs",
                                        children: [
                                            selectedTopics.length,
                                            " selected"
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "space-y-2",
                                children: detectedTopics.map((topic)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-3 p-2 bg-white rounded-lg border border-blue-200",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                id: topic.id,
                                                checked: selectedTopics.includes(topic.id),
                                                onCheckedChange: ()=>handleTopicToggle(topic.id)
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                htmlFor: topic.id,
                                                className: "flex-1 cursor-pointer",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "text-sm font-medium text-gray-900",
                                                        children: topic.label
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                        variant: "outline",
                                                        className: "ml-2 text-xs",
                                                        children: [
                                                            topic.confidence,
                                                            "% confidence"
                                                        ]
                                                    }),
                                                    topic.confidence >= 90 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                        variant: "secondary",
                                                        className: "ml-1 text-xs bg-green-100 text-green-800",
                                                        children: "Auto-selected"
                                                    })
                                                ]
                                            })
                                        ]
                                    }, topic.id))
                            })
                        ]
                    }),
                    detectedDates.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Calendar, {
                                        className: "h-4 w-4 text-green-600"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                        className: "font-medium text-green-900",
                                        children: [
                                            "Detected Dates (",
                                            detectedDates.length,
                                            ")"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                        variant: "outline",
                                        className: "text-xs",
                                        children: [
                                            selectedDates.length,
                                            " selected"
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "space-y-2",
                                children: detectedDates.map((date)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-3 p-2 bg-white rounded-lg border border-green-200",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                id: date.id,
                                                checked: selectedDates.includes(date.id),
                                                onCheckedChange: ()=>handleDateToggle(date.id)
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                htmlFor: date.id,
                                                className: "flex-1 cursor-pointer",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-1",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex items-center gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                    className: "text-sm font-medium text-gray-900",
                                                                    children: date.description
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                                    variant: "outline",
                                                                    className: "text-xs",
                                                                    children: date.type
                                                                })
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                            className: "text-xs text-gray-600",
                                                            children: (0, _formatters.formatDate)(date.date)
                                                        })
                                                    ]
                                                })
                                            })
                                        ]
                                    }, date.id))
                            })
                        ]
                    }),
                    detectedTestTypes.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                                        className: "h-4 w-4 text-orange-600"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                        className: "font-medium text-orange-900",
                                        children: [
                                            "Detected Test Types (",
                                            detectedTestTypes.length,
                                            ")"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                        variant: "outline",
                                        className: "text-xs",
                                        children: [
                                            selectedTestTypes.length,
                                            " selected"
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "space-y-2",
                                children: detectedTestTypes.map((testType)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-3 p-2 bg-white rounded-lg border border-orange-200",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                id: testType.id,
                                                checked: selectedTestTypes.includes(testType.id),
                                                onCheckedChange: ()=>handleTestTypeToggle(testType.id)
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                htmlFor: testType.id,
                                                className: "flex-1 cursor-pointer",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "text-sm font-medium text-gray-900",
                                                        children: testType.type
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                        variant: "outline",
                                                        className: "ml-2 text-xs",
                                                        children: [
                                                            testType.confidence,
                                                            "% confidence"
                                                        ]
                                                    })
                                                ]
                                            })
                                        ]
                                    }, testType.id))
                            })
                        ]
                    }),
                    smartRecommendations.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Brain, {
                                        className: "h-4 w-4 text-purple-600"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                        className: "font-medium text-purple-900",
                                        children: [
                                            "Smart Recommendations (",
                                            smartRecommendations.length,
                                            ")"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                        variant: "outline",
                                        className: "text-xs",
                                        children: [
                                            selectedRecommendations.length,
                                            " selected"
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "space-y-2",
                                children: smartRecommendations.map((recommendation)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-3 p-3 bg-purple-50 rounded-lg border border-purple-200",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                id: recommendation.id,
                                                checked: selectedRecommendations.includes(recommendation.id),
                                                onCheckedChange: ()=>handleRecommendationToggle(recommendation.id)
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                htmlFor: recommendation.id,
                                                className: "flex-1 cursor-pointer",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-1",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex items-center gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                    className: "text-sm font-medium text-purple-900",
                                                                    children: recommendation.title
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                                    variant: "outline",
                                                                    className: "text-xs",
                                                                    children: [
                                                                        recommendation.confidence,
                                                                        "% confidence"
                                                                    ]
                                                                })
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                            className: "text-xs text-purple-700",
                                                            children: recommendation.description
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                            variant: "secondary",
                                                            className: "text-xs bg-purple-100 text-purple-800",
                                                            children: recommendation.action
                                                        })
                                                    ]
                                                })
                                            })
                                        ]
                                    }, recommendation.id))
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex gap-2 pt-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                onClick: handleOneClickSetup,
                                className: "bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Zap, {
                                        className: "h-4 w-4 mr-2"
                                    }),
                                    "One-Click Setup"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                onClick: handleApplyAll,
                                disabled: totalSelected === 0,
                                className: "bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 text-white",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                                        className: "h-4 w-4 mr-2"
                                    }),
                                    "Apply Selected (",
                                    totalSelected,
                                    ")"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "outline",
                                onClick: onDismiss,
                                className: "border-gray-300 text-gray-600 hover:bg-gray-50",
                                children: "Dismiss"
                            })
                        ]
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,