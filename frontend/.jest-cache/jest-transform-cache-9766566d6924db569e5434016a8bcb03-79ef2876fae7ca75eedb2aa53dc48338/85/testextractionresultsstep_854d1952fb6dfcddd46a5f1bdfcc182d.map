{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/steps/test-extraction-results-step.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  ClipboardList, \n  BarChart3, \n  FileText, \n  CheckCircle, \n  Brain,\n  Award,\n  Sparkles,\n  Edit3,\n  ArrowRight,\n  Clock,\n  Target,\n  TrendingUp\n} from \"lucide-react\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\n\ninterface ProcessedTest {\n  id: number;\n  original_text: string;\n  metadata: {\n    source_file: string;\n    test_type?: string;\n    course?: string;\n    total_points?: number;\n    duration?: string;\n    question_types?: {\n      type: string;\n      count: number;\n      points: number;\n    }[];\n    topics_covered?: string[];\n    difficulty_level?: string;\n    estimated_study_time?: string;\n    key_concepts?: string[];\n    error?: string;\n  };\n  status: 'pending' | 'processing' | 'completed' | 'error';\n}\n\ninterface TestExtractionResultsStepProps {\n  extractedTests: ProcessedTest[];\n  fileNames: string[];\n  onConfirm: () => void;\n  onEdit?: () => void;\n  isTestMode?: boolean;\n}\n\nexport function TestExtractionResultsStep({ \n  extractedTests, \n  fileNames, \n  onConfirm, \n  onEdit,\n  isTestMode = false \n}: TestExtractionResultsStepProps) {\n  const [expandedTest, setExpandedTest] = useState<number | null>(null);\n  const [showAllTopics, setShowAllTopics] = useState<Record<number, boolean>>({});\n  const [showAllConcepts, setShowAllConcepts] = useState<Record<number, boolean>>({});\n\n  const toggleTestExpansion = (testId: number) => {\n    setExpandedTest(prev => prev === testId ? null : testId);\n  };\n\n  const toggleTopics = (testId: number) => {\n    setShowAllTopics(prev => ({ ...prev, [testId]: !prev[testId] }));\n  };\n\n  const toggleConcepts = (testId: number) => {\n    setShowAllConcepts(prev => ({ ...prev, [testId]: !prev[testId] }));\n  };\n\n  const getDifficultyColor = (difficulty?: string) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy': return 'bg-green-100 text-green-800 border-green-200';\n      case 'intermediate': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'hard': return 'bg-red-100 text-red-800 border-red-200';\n      default: return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getTestTypeIcon = (type?: string) => {\n    switch (type?.toLowerCase()) {\n      case 'midterm exam': return <Award className=\"h-4 w-4 text-orange-500\" />;\n      case 'final exam': return <Award className=\"h-4 w-4 text-red-500\" />;\n      case 'quiz': return <FileText className=\"h-4 w-4 text-blue-500\" />;\n      case 'practice test': return <Brain className=\"h-4 w-4 text-purple-500\" />;\n      default: return <ClipboardList className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const completedTests = extractedTests.filter(test => test.status === 'completed');\n  const errorTests = extractedTests.filter(test => test.status === 'error');\n  const totalTopics = completedTests.reduce((sum, test) => sum + (test.metadata.topics_covered?.length || 0), 0);\n  const totalQuestions = completedTests.reduce((sum, test) => \n    sum + (test.metadata.question_types?.reduce((qSum, qt) => qSum + qt.count, 0) || 0), 0\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Test Mode Banner */}\n      {isTestMode && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-yellow-600 text-sm\">üß™</span>\n            <span className=\"text-yellow-800 text-sm font-medium\">Test Mode - Test Analysis Results</span>\n          </div>\n          <p className=\"text-yellow-700 text-xs mt-1\">\n            These results are from mock test analysis. Use these insights to plan your study strategy.\n          </p>\n        </div>\n      )}\n      \n      {/* Header */}\n      <div className=\"text-center space-y-3\">\n        <div className=\"w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-600 rounded-full flex items-center justify-center mx-auto\">\n          <Sparkles className=\"h-6 w-6 text-white\" />\n        </div>\n        <div>\n          <h2 className=\"text-xl font-semibold text-gray-900\">Test Analysis Complete!</h2>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            We've analyzed {completedTests.length} test {completedTests.length === 1 ? 'file' : 'files'} and identified patterns for your study plan\n          </p>\n        </div>\n      </div>\n\n      {/* Error Summary */}\n      {errorTests.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-red-600 text-sm\">‚ö†Ô∏è</span>\n            <span className=\"text-red-800 text-sm font-medium\">\n              {errorTests.length} file{errorTests.length === 1 ? '' : 's'} could not be processed\n            </span>\n          </div>\n          <p className=\"text-red-700 text-xs mt-1\">\n            These files may be corrupted or in an unsupported format. You can try uploading them again.\n          </p>\n        </div>\n      )}\n\n      {/* Summary Stats */}\n      {completedTests.length > 0 && (\n        <Card className=\"border-purple-200 bg-purple-50/50\">\n          <CardHeader>\n            <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\n              <BarChart3 className=\"h-5 w-5 text-purple-600\" />\n              Analysis Summary\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">{completedTests.length}</div>\n                <div className=\"text-xs text-gray-600\">Tests Analyzed</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">{totalQuestions}</div>\n                <div className=\"text-xs text-gray-600\">Total Questions</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">{totalTopics}</div>\n                <div className=\"text-xs text-gray-600\">Topics Covered</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-orange-600\">\n                  {Math.round(completedTests.reduce((sum, test) => {\n                    const timeStr = test.metadata.estimated_study_time || '0';\n                    const hours = parseInt(timeStr.split('-')[0]) || 0;\n                    return sum + hours;\n                  }, 0) / Math.max(completedTests.length, 1))}h\n                </div>\n                <div className=\"text-xs text-gray-600\">Avg Study Time</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Individual Test Results */}\n      <div className=\"space-y-4\">\n        {completedTests.length > 0 && (\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            Individual Test Results\n          </h3>\n        )}\n        \n        {completedTests.map((test) => (\n          <Card key={test.id} className=\"border-gray-200 hover:border-purple-300 transition-colors\">\n            <CardHeader \n              className=\"flex flex-row items-center justify-between cursor-pointer hover:bg-gray-50\"\n              onClick={() => toggleTestExpansion(test.id)}\n            >\n              <div className=\"flex items-center gap-3\">\n                {getTestTypeIcon(test.metadata.test_type)}\n                <div>\n                  <CardTitle className=\"text-base font-medium\">\n                    {test.metadata.test_type || 'Test'}\n                  </CardTitle>\n                  <p className=\"text-sm text-gray-500\">{test.metadata.source_file}</p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {test.metadata.difficulty_level && (\n                  <Badge \n                    variant=\"outline\" \n                    className={`text-xs ${getDifficultyColor(test.metadata.difficulty_level)}`}\n                  >\n                    {test.metadata.difficulty_level}\n                  </Badge>\n                )}\n                {test.metadata.total_points && (\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {test.metadata.total_points} pts\n                  </Badge>\n                )}\n              </div>\n            </CardHeader>\n            \n            {expandedTest === test.id && (\n              <CardContent className=\"space-y-4\">\n                {/* Test Details */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {/* Basic Info */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n                      <FileText className=\"h-4 w-4\" />\n                      Test Details\n                    </h4>\n                    {test.metadata.course && (\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm text-gray-600\">Course:</span>\n                        <span className=\"text-sm font-medium\">{test.metadata.course}</span>\n                      </div>\n                    )}\n                    {test.metadata.duration && (\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm text-gray-600\">Duration:</span>\n                        <span className=\"text-sm font-medium flex items-center gap-1\">\n                          <Clock className=\"h-3 w-3\" />\n                          {test.metadata.duration}\n                        </span>\n                      </div>\n                    )}\n                    {test.metadata.estimated_study_time && (\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm text-gray-600\">Study Time:</span>\n                        <span className=\"text-sm font-medium flex items-center gap-1\">\n                          <TrendingUp className=\"h-3 w-3\" />\n                          {test.metadata.estimated_study_time}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Question Types */}\n                  {test.metadata.question_types && test.metadata.question_types.length > 0 && (\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n                        <Target className=\"h-4 w-4\" />\n                        Question Types\n                      </h4>\n                      <div className=\"space-y-2\">\n                        {test.metadata.question_types.map((qt, index) => (\n                          <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                            <span className=\"text-sm font-medium\">{qt.type}</span>\n                            <div className=\"flex items-center gap-2\">\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {qt.count} Q\n                              </Badge>\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {qt.points} pts\n                              </Badge>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Topics Covered */}\n                {test.metadata.topics_covered && test.metadata.topics_covered.length > 0 && (\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n                      <Brain className=\"h-4 w-4\" />\n                      Topics Covered ({test.metadata.topics_covered.length})\n                    </h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {test.metadata.topics_covered\n                        .slice(0, showAllTopics[test.id] ? undefined : 6)\n                        .map((topic, index) => (\n                        <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                          {topic}\n                        </Badge>\n                      ))}\n                    </div>\n                    {test.metadata.topics_covered.length > 6 && (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => toggleTopics(test.id)}\n                        className=\"text-xs\"\n                      >\n                        {showAllTopics[test.id] \n                          ? 'Show less' \n                          : `Show ${test.metadata.topics_covered.length - 6} more topics`\n                        }\n                      </Button>\n                    )}\n                  </div>\n                )}\n\n                {/* Key Concepts */}\n                {test.metadata.key_concepts && test.metadata.key_concepts.length > 0 && (\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-medium text-gray-900 flex items-center gap-2\">\n                      <Sparkles className=\"h-4 w-4\" />\n                      Key Concepts ({test.metadata.key_concepts.length})\n                    </h4>\n                    <div className=\"space-y-2\">\n                      {test.metadata.key_concepts\n                        .slice(0, showAllConcepts[test.id] ? undefined : 4)\n                        .map((concept, index) => (\n                        <div key={index} className=\"p-2 bg-blue-50 rounded border-l-4 border-blue-200\">\n                          <span className=\"text-sm font-medium\">{concept}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {test.metadata.key_concepts.length > 4 && (\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => toggleConcepts(test.id)}\n                        className=\"text-xs\"\n                      >\n                        {showAllConcepts[test.id] \n                          ? 'Show less' \n                          : `Show ${test.metadata.key_concepts.length - 4} more concepts`\n                        }\n                      </Button>\n                    )}\n                  </div>\n                )}\n              </CardContent>\n            )}\n          </Card>\n        ))}\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n        {onEdit && (\n          <Button \n            variant=\"outline\" \n            onClick={onEdit}\n            className=\"flex items-center gap-2\"\n          >\n            <Edit3 className=\"h-4 w-4\" />\n            Edit Analysis\n          </Button>\n        )}\n        <Button \n          onClick={onConfirm}\n          className=\"flex items-center gap-2 bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700\"\n        >\n          <CheckCircle className=\"h-4 w-4\" />\n          Use This Analysis\n          <ArrowRight className=\"h-4 w-4\" />\n        </Button>\n      </div>\n\n      {/* Footer Note */}\n      <div className=\"text-center\">\n        <p className=\"text-xs text-gray-500\">\n          This analysis will help us create personalized study materials and practice questions based on your test patterns.\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":["TestExtractionResultsStep","extractedTests","fileNames","onConfirm","onEdit","isTestMode","expandedTest","setExpandedTest","useState","showAllTopics","setShowAllTopics","showAllConcepts","setShowAllConcepts","toggleTestExpansion","testId","prev","toggleTopics","toggleConcepts","getDifficultyColor","difficulty","toLowerCase","getTestTypeIcon","type","Award","className","FileText","Brain","ClipboardList","completedTests","filter","test","status","errorTests","totalTopics","reduce","sum","metadata","topics_covered","length","totalQuestions","question_types","qSum","qt","count","div","span","p","Sparkles","h2","Card","CardHeader","CardTitle","BarChart3","CardContent","Math","round","timeStr","estimated_study_time","hours","parseInt","split","max","h3","map","onClick","id","test_type","source_file","difficulty_level","Badge","variant","total_points","h4","course","duration","Clock","TrendingUp","Target","index","points","slice","undefined","topic","Button","size","key_concepts","concept","Edit3","CheckCircle","ArrowRight"],"mappings":"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"}