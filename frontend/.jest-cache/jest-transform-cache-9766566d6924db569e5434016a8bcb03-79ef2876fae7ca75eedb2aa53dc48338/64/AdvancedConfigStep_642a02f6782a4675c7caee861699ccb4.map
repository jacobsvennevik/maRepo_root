{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/quiz/components/QuizWizard/steps/AdvancedConfigStep.tsx"],"sourcesContent":["/**\n * AdvancedConfigStep\n */\n\nimport React from 'react';\nimport { FormProvider } from 'react-hook-form';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { \n  DELIVERY_MODE_OPTIONS,\n  LANGUAGE_OPTIONS,\n  TEST_STYLE_OPTIONS,\n} from '../../../constants';\nimport { getQuestionMixTotal } from '../../../utils';\n\ninterface AdvancedConfigStepProps {\n  form: any;\n}\n\nexport const AdvancedConfigStep: React.FC<AdvancedConfigStepProps> = ({ form }) => {\n  const { register, watch, setValue } = form;\n\n  return (\n    <FormProvider {...form}>\n      <div className=\"space-y-4\">\n        <div className=\"text-center space-y-2\">\n          <h2 className=\"text-xl font-semibold text-slate-900\">Advanced Configuration</h2>\n          <p className=\"text-sm text-slate-600\">Fine-tune your quiz settings</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-4\">\n          <div>\n            <Label htmlFor=\"delivery_mode\">Feedback Mode</Label>\n            <Select \n              value={watch('delivery_mode')} \n              onValueChange={(value) => setValue('delivery_mode', value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select feedback mode\" />\n              </SelectTrigger>\n              <SelectContent>\n                {DELIVERY_MODE_OPTIONS.map((option: any) => (\n                  <SelectItem key={option.value} value={option.value}>\n                    <div>\n                      <div className=\"font-medium\">{option.label}</div>\n                      <div className=\"text-xs text-slate-500\">{option.description}</div>\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div>\n            <Label>Question Mix</Label>\n            <div className=\"grid grid-cols-3 gap-2\">\n              <div>\n                <Label htmlFor=\"MCQ\" className=\"text-xs\">Multiple Choice</Label>\n                <Input \n                  id=\"MCQ\" \n                  type=\"number\" \n                  min={0} \n                  max={50}\n                  {...register('question_mix.MCQ', { valueAsNumber: true })}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"SHORT_ANSWER\" className=\"text-xs\">Short Answer</Label>\n                <Input \n                  id=\"SHORT_ANSWER\" \n                  type=\"number\" \n                  min={0} \n                  max={50}\n                  {...register('question_mix.SHORT_ANSWER', { valueAsNumber: true })}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"PRINCIPLE\" className=\"text-xs\">Principle</Label>\n                <Input \n                  id=\"PRINCIPLE\" \n                  type=\"number\" \n                  min={0} \n                  max={50}\n                  {...register('question_mix.PRINCIPLE', { valueAsNumber: true })}\n                />\n              </div>\n            </div>\n            <p className=\"text-xs text-slate-500 mt-1\">\n              Total: {getQuestionMixTotal(watch('question_mix'))} questions\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"language\">Language</Label>\n              <Select \n                value={watch('language')} \n                onValueChange={(value) => setValue('language', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select language\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {LANGUAGE_OPTIONS.map((option: any) => (\n                    <SelectItem key={option.value} value={option.value}>\n                      {option.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <Label htmlFor=\"test_style\">Test Style</Label>\n              <Select \n                value={watch('test_style') || ''} \n                onValueChange={(value) => setValue('test_style', value || null)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select test style\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {TEST_STYLE_OPTIONS.map((option: any) => (\n                    <SelectItem key={option.value} value={option.value}>\n                      {option.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            <Label>Quiz Options</Label>\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox \n                  id=\"allow_retakes\" \n                  checked={watch('allow_retakes')}\n                  onCheckedChange={(checked) => setValue('allow_retakes', checked)}\n                />\n                <Label htmlFor=\"allow_retakes\" className=\"text-sm\">Allow multiple attempts</Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox \n                  id=\"show_hints\" \n                  checked={watch('show_hints')}\n                  onCheckedChange={(checked) => setValue('show_hints', checked)}\n                />\n                <Label htmlFor=\"show_hints\" className=\"text-sm\">Show hints during quiz</Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox \n                  id=\"randomize_questions\" \n                  checked={watch('randomize_questions')}\n                  onCheckedChange={(checked) => setValue('randomize_questions', checked)}\n                />\n                <Label htmlFor=\"randomize_questions\" className=\"text-sm\">Randomize question order</Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox \n                  id=\"randomize_choices\" \n                  checked={watch('randomize_choices')}\n                  onCheckedChange={(checked) => setValue('randomize_choices', checked)}\n                />\n                <Label htmlFor=\"randomize_choices\" className=\"text-sm\">Randomize answer choices</Label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </FormProvider>\n  );\n};\n\nexport default AdvancedConfigStep;\n\n\n"],"names":["AdvancedConfigStep","form","register","watch","setValue","FormProvider","div","className","h2","p","Label","htmlFor","Select","value","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","DELIVERY_MODE_OPTIONS","map","option","SelectItem","label","description","Input","id","type","min","max","valueAsNumber","getQuestionMixTotal","LANGUAGE_OPTIONS","TEST_STYLE_OPTIONS","Checkbox","checked","onCheckedChange"],"mappings":"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"}