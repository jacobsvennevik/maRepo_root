{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/flashcards/services/flashcardApi.ts"],"sourcesContent":["import { axiosGeneration } from '@/lib/axios';\nimport { getProjectScoped, postProjectScoped } from '@/lib/projectApi'\nimport { buildTestModeHeaders } from '@/lib/testMode'\nimport type { \n  Flashcard, \n  FlashcardSet, \n  CreateFlashcardForm, \n  CreateFlashcardSetForm, \n  StudyStats,\n  FlashcardApiResponse,\n  FlashcardSetApiResponse\n} from '../types';\n\nclass FlashcardApiService {\n  async getProjectFlashcardSets(projectId: string): Promise<FlashcardSet[]> {\n    const data = await getProjectScoped<FlashcardSetApiResponse | FlashcardSet[]>(`flashcard-sets/`, projectId)\n    const sets = (data as any).results || data || []\n    return sets\n  }\n\n  async createProjectFlashcardSet(projectId: string, form: CreateFlashcardSetForm): Promise<FlashcardSet | null> {\n    const data = await postProjectScoped<FlashcardSet>(`flashcard-sets/`, projectId, { title: form.title })\n    return data\n  }\n\n  async deleteFlashcardSet(setId: number): Promise<void> {\n    console.group('üîç Delete Flashcard Set API');\n    console.log('‚Üí DELETE /flashcard-sets/${setId}/');\n\n    try {\n      await axiosGeneration.delete(`flashcard-sets/${setId}/`);\n      console.log('‚úÖ Set deleted successfully');\n    } catch (err) {\n      console.error('‚ùå Delete failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async getFlashcards(setId: number, projectId?: string): Promise<Flashcard[]> {\n    const endpoint = projectId \n      ? `projects/${projectId}/flashcard-sets/${setId}/flashcards/`\n      : `flashcards/?flashcard_set=${setId}`\n    const res = await axiosGeneration.get(endpoint)\n    const responseData = res.data\n    const cards = (responseData as any)?.results || responseData || []\n    return Array.isArray(cards) ? cards : []\n  }\n\n  async createFlashcard(setId: number, form: CreateFlashcardForm): Promise<Flashcard | null> {\n    console.group('üîç Create Flashcard API');\n    console.log('‚Üí POST /flashcards/');\n    console.log('‚Üí Payload:', form);\n\n    try {\n      const payload = {\n        ...form,\n        flashcard_set: setId\n      };\n\n      const response = await axiosGeneration.post<Flashcard>(`/flashcards/`, payload);\n      console.log('‚úÖ Created flashcard:', response.data);\n      return response.data;\n    } catch (err) {\n      console.error('‚ùå Create failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async updateFlashcard(cardId: number, form: Partial<CreateFlashcardForm>): Promise<Flashcard | null> {\n    console.group('üîç Update Flashcard API');\n    console.log('‚Üí PUT /api/flashcards/${cardId}/');\n    console.log('‚Üí Payload:', form);\n\n    try {\n      const response = await axiosGeneration.put<Flashcard>(`/flashcards/${cardId}/`, form);\n      console.log('‚úÖ Updated flashcard:', response.data);\n      return response.data;\n    } catch (err) {\n      console.error('‚ùå Update failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async deleteFlashcard(cardId: number): Promise<void> {\n    console.group('üîç Delete Flashcard API');\n    console.log('‚Üí DELETE /api/flashcards/${cardId}/');\n\n    try {\n      await axiosGeneration.delete(`flashcards/${cardId}/`);\n      console.log('‚úÖ Flashcard deleted successfully');\n    } catch (err) {\n      console.error('‚ùå Delete failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  // Study Operations\n  async markCardReviewed(cardId: number, wasCorrect: boolean): Promise<void> {\n    console.group('üîç Mark Card Reviewed API');\n    console.log('‚Üí POST /api/flashcards/${cardId}/review/');\n    console.log('‚Üí Was correct:', wasCorrect);\n\n    try {\n      await axiosGeneration.post(`flashcards/${cardId}/review/`, { was_correct: wasCorrect });\n      console.log('‚úÖ Card review recorded');\n    } catch (err) {\n      console.error('‚ùå Review failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  // Stats Operations\n  async calculateProjectStats(projectId: string, sets: FlashcardSet[]): Promise<StudyStats> {\n    console.group('üìä Calculate Project Stats');\n    console.log('‚Üí Calculating stats from', sets.length, 'sets');\n\n    try {\n      let totalCards = 0;\n      let totalDueCards = 0;\n      let totalLearningCards = 0;\n      let totalReviewCards = 0;\n      let totalMasteredCards = 0;\n      \n      for (const set of sets) {\n        if (set.flashcards) {\n          totalCards += set.flashcards.length;\n          \n          for (const card of set.flashcards) {\n            if (card.learning_state === 'learning') totalLearningCards++;\n            else if (card.learning_state === 'review') totalReviewCards++;\n            else if (card.learning_state === 'mastered') totalMasteredCards++;\n            \n            if (card.next_review && new Date(card.next_review) <= new Date()) {\n              totalDueCards++;\n            }\n          }\n        }\n      }\n      \n      const retentionRate = totalCards > 0 ? Math.round((totalMasteredCards / totalCards) * 100) : 0;\n      \n      const stats: StudyStats = {\n        total_cards: totalCards,\n        due_cards: totalDueCards,\n        mastered_cards: totalMasteredCards,\n        learning_cards: totalLearningCards,\n        review_cards: totalReviewCards,\n        retention_rate: retentionRate,\n        streak_days: 0, // TODO: Implement streak calculation\n        next_review: new Date().toISOString(),\n      };\n      \n      console.log('‚úÖ Calculated stats:', stats);\n      return stats;\n    } catch (err) {\n      console.error('‚ùå Stats calculation failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n}\n\nexport const flashcardApi = new FlashcardApiService();\n"],"names":["flashcardApi","FlashcardApiService","getProjectFlashcardSets","projectId","data","getProjectScoped","sets","results","createProjectFlashcardSet","form","postProjectScoped","title","deleteFlashcardSet","setId","console","group","log","axiosGeneration","delete","err","error","groupEnd","getFlashcards","endpoint","res","get","responseData","cards","Array","isArray","createFlashcard","payload","flashcard_set","response","post","updateFlashcard","cardId","put","deleteFlashcard","markCardReviewed","wasCorrect","was_correct","calculateProjectStats","length","totalCards","totalDueCards","totalLearningCards","totalReviewCards","totalMasteredCards","set","flashcards","card","learning_state","next_review","Date","retentionRate","Math","round","stats","total_cards","due_cards","mastered_cards","learning_cards","review_cards","retention_rate","streak_days","toISOString"],"mappings":"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"}