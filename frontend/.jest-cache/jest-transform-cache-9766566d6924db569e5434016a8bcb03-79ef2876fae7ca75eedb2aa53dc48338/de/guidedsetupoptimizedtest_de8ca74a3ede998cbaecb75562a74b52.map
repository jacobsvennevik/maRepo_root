{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/components/__tests__/guided-setup-optimized.test.tsx"],"sourcesContent":["import React from \"react\";\nimport { screen, fireEvent, waitFor } from \"@testing-library/react\";\nimport \"@testing-library/jest-dom\";\n\n// Import new centralized utilities\nimport {\n  renderWithProviders,\n  setupFullTestEnvironment,\n  testFactories,\n  standardMocks\n} from \"../../../../../src/test-utils\";\n\n// Setup test environment\nconst testEnv = setupFullTestEnvironment({\n  timeout: 10000,\n  includeAPI: true,\n  includeStorage: true,\n  includeNavigation: true\n});\n\nconst { apiMocks } = standardMocks;\n\n// Mock dependencies using centralized patterns\njest.mock(\"next/navigation\", () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    replace: jest.fn()\n  }),\n}));\n\njest.mock(\"next/dynamic\", () => () => {\n  const DynamicComponent = () => <div>Calendar</div>;\n  return DynamicComponent;\n});\n\n// Mock components using centralized component mocks\njest.mock('../guided-setup/components/KeyboardShortcuts', () => () => \n  <div data-testid=\"keyboard-shortcuts\" />\n);\n\njest.mock('../guided-setup/components/StepIndicator', () => ({\n  StepIndicator: () => <div role=\"progressbar\" data-testid=\"step-indicator\" />,\n}));\n\n// Mock the features barrel with centralized component patterns\njest.mock('@/features/projects', () => ({\n  ProjectNameStep: ({ projectName, onProjectNameChange }: any) => (\n    <div data-testid=\"project-name-step\">\n      <input\n        value={projectName || \"\"}\n        onChange={(e) => onProjectNameChange(e.target.value)}\n        data-testid=\"project-name-input\"\n      />\n    </div>\n  ),\n  EducationLevelStep: ({ testLevel, onTestLevelChange }: any) => (\n    <div data-testid=\"education-level-step\">\n      <button onClick={() => onTestLevelChange(\"high-school\")} data-testid=\"high-school-btn\">\n        High School\n      </button>\n      <button onClick={() => onTestLevelChange(\"university\")} data-testid=\"university-btn\">\n        University\n      </button>\n    </div>\n  ),\n  SyllabusUploadStep: ({ onUploadComplete, onNext }: any) => (\n    <div data-testid=\"syllabus-upload-step\">\n      <button \n        onClick={() => { \n          onUploadComplete(\"test-project\", {}, \"test.pdf\"); \n          onNext?.(); \n        }}\n        data-testid=\"upload-btn\"\n      >\n        Upload\n      </button>\n    </div>\n  ),\n  ExtractionResultsStep: ({ onConfirm }: any) => (\n    <div data-testid=\"extraction-results-step\">\n      <button onClick={onConfirm} data-testid=\"confirm-btn\">Confirm</button>\n    </div>\n  ),\n  CourseContentUploadStep: ({ onUploadComplete }: any) => (\n    <div data-testid=\"course-content-upload-step\">\n      <button \n        onClick={() => onUploadComplete(\"test-project\", {}, \"course.pdf\")}\n        data-testid=\"course-upload-btn\"\n      >\n        Upload Course Content\n      </button>\n    </div>\n  ),\n  TestUploadStep: ({ onUploadComplete }: any) => (\n    <div data-testid=\"test-upload-step\">\n      <button \n        onClick={() => onUploadComplete(\"test-project\", {}, \"test.pdf\")}\n        data-testid=\"test-upload-btn\"\n      >\n        Upload Tests\n      </button>\n    </div>\n  ),\n  ProjectSummaryStep: ({ onComplete }: any) => (\n    <div data-testid=\"project-summary-step\">\n      <button onClick={onComplete} data-testid=\"complete-btn\">Complete</button>\n    </div>\n  ),\n}));\n\ndescribe('GuidedSetup - Optimized', () => {\n  beforeEach(() => {\n    testEnv.mocks.resetAll();\n    \n    // Setup default API responses\n    apiMocks.setupMockResponses({\n      'POST:/backend/api/projects/': {\n        ok: true,\n        status: 201,\n        json: async () => ({ id: 'project-123', name: 'Test Project' })\n      }\n    });\n  });\n\n  describe('Wizard Navigation', () => {\n    it('should render initial step correctly', () => {\n      renderWithProviders(<div data-testid=\"guided-setup\" />);\n\n      expect(screen.getByTestId('guided-setup')).toBeInTheDocument();\n    });\n\n    it('should handle step progression', async () => {\n      renderWithProviders(<div data-testid=\"guided-setup\" />);\n\n      // Simulate step progression\n      const stepIndicator = screen.getByTestId('step-indicator');\n      expect(stepIndicator).toBeInTheDocument();\n    });\n  });\n\n  describe('Project Name Step', () => {\n    it('should handle project name input', async () => {\n      renderWithProviders(<div data-testid=\"project-name-step\" />);\n\n      const projectNameInput = screen.getByTestId('project-name-input');\n      expect(projectNameInput).toBeInTheDocument();\n\n      fireEvent.change(projectNameInput, { target: { value: 'My Test Project' } });\n      expect(projectNameInput).toHaveValue('My Test Project');\n    });\n  });\n\n  describe('Education Level Step', () => {\n    it('should handle education level selection', async () => {\n      renderWithProviders(<div data-testid=\"education-level-step\" />);\n\n      const highSchoolBtn = screen.getByTestId('high-school-btn');\n      const universityBtn = screen.getByTestId('university-btn');\n\n      expect(highSchoolBtn).toBeInTheDocument();\n      expect(universityBtn).toBeInTheDocument();\n\n      fireEvent.click(highSchoolBtn);\n      fireEvent.click(universityBtn);\n    });\n  });\n\n  describe('File Upload Steps', () => {\n    it('should handle syllabus upload', async () => {\n      renderWithProviders(<div data-testid=\"syllabus-upload-step\" />);\n\n      const uploadBtn = screen.getByTestId('upload-btn');\n      expect(uploadBtn).toBeInTheDocument();\n\n      fireEvent.click(uploadBtn);\n    });\n\n    it('should handle course content upload', async () => {\n      renderWithProviders(<div data-testid=\"course-content-upload-step\" />);\n\n      const courseUploadBtn = screen.getByTestId('course-upload-btn');\n      expect(courseUploadBtn).toBeInTheDocument();\n\n      fireEvent.click(courseUploadBtn);\n    });\n\n    it('should handle test upload', async () => {\n      renderWithProviders(<div data-testid=\"test-upload-step\" />);\n\n      const testUploadBtn = screen.getByTestId('test-upload-btn');\n      expect(testUploadBtn).toBeInTheDocument();\n\n      fireEvent.click(testUploadBtn);\n    });\n  });\n\n  describe('Extraction Results Step', () => {\n    it('should handle extraction confirmation', async () => {\n      renderWithProviders(<div data-testid=\"extraction-results-step\" />);\n\n      const confirmBtn = screen.getByTestId('confirm-btn');\n      expect(confirmBtn).toBeInTheDocument();\n\n      fireEvent.click(confirmBtn);\n    });\n  });\n\n  describe('Project Summary Step', () => {\n    it('should handle project completion', async () => {\n      renderWithProviders(<div data-testid=\"project-summary-step\" />);\n\n      const completeBtn = screen.getByTestId('complete-btn');\n      expect(completeBtn).toBeInTheDocument();\n\n      fireEvent.click(completeBtn);\n    });\n  });\n\n  describe('Keyboard Shortcuts', () => {\n    it('should render keyboard shortcuts component', () => {\n      renderWithProviders(<div data-testid=\"keyboard-shortcuts\" />);\n\n      expect(screen.getByTestId('keyboard-shortcuts')).toBeInTheDocument();\n    });\n  });\n\n  describe('API Integration', () => {\n    it('should handle successful project creation', async () => {\n      renderWithProviders(<div data-testid=\"guided-setup\" />);\n\n      // Simulate project creation API call\n      const response = await apiMocks.mockFetch('/backend/api/projects/', {\n        method: 'POST',\n        body: JSON.stringify({ name: 'Test Project' })\n      });\n\n      expect(response.ok).toBe(true);\n    });\n\n    it('should handle API errors gracefully', async () => {\n      // Mock API error\n      apiMocks.mockFetch.mockResolvedValueOnce({\n        ok: false,\n        status: 500,\n        json: async () => ({ error: 'Internal server error' })\n      });\n\n      renderWithProviders(<div data-testid=\"guided-setup\" />);\n\n      // Simulate API call that fails\n      const response = await apiMocks.mockFetch('/backend/api/projects/', {\n        method: 'POST',\n        body: JSON.stringify({ name: 'Test Project' })\n      });\n\n      expect(response.ok).toBe(false);\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('should have proper ARIA attributes', () => {\n      renderWithProviders(<div data-testid=\"step-indicator\" />);\n\n      const stepIndicator = screen.getByTestId('step-indicator');\n      expect(stepIndicator).toHaveAttribute('role', 'progressbar');\n    });\n\n    it('should support keyboard navigation', () => {\n      renderWithProviders(<div data-testid=\"project-name-input\" />);\n\n      const input = screen.getByTestId('project-name-input');\n      input.focus();\n      expect(document.activeElement).toBe(input);\n    });\n  });\n});\n"],"names":["jest","mock","useRouter","push","fn","back","forward","refresh","replace","DynamicComponent","div","data-testid","StepIndicator","role","ProjectNameStep","projectName","onProjectNameChange","input","value","onChange","e","target","EducationLevelStep","testLevel","onTestLevelChange","button","onClick","SyllabusUploadStep","onUploadComplete","onNext","ExtractionResultsStep","onConfirm","CourseContentUploadStep","TestUploadStep","ProjectSummaryStep","onComplete","testEnv","setupFullTestEnvironment","timeout","includeAPI","includeStorage","includeNavigation","apiMocks","standardMocks","describe","beforeEach","mocks","resetAll","setupMockResponses","ok","status","json","id","name","it","renderWithProviders","expect","screen","getByTestId","toBeInTheDocument","stepIndicator","projectNameInput","fireEvent","change","toHaveValue","highSchoolBtn","universityBtn","click","uploadBtn","courseUploadBtn","testUploadBtn","confirmBtn","completeBtn","response","mockFetch","method","body","JSON","stringify","toBe","mockResolvedValueOnce","error","toHaveAttribute","focus","document","activeElement"],"mappings":"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"}