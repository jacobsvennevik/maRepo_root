582f1e3b7ce8bff08c780d9ef149b8e0
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return AIMetadataTagsClient;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _tagbadge = require("../../../components/ui/tag-badge");
// Temporarily disable feature flag check to fix import issues
const isFeatureEnabled = (flag)=>false;
function AIMetadataTagsClient({ project }) {
    const [showAITags, setShowAITags] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        // Check feature flag on client side only
        setShowAITags(isFeatureEnabled("SHOW_AI_META"));
    }, []);
    if (!showAITags || !project.meta?.ai_generated_tags || project.meta.ai_generated_tags.length === 0) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "mb-4",
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_tagbadge.TagBadgeList, {
            tags: project.meta.ai_generated_tags,
            maxTags: 3,
            showMore: true,
            variant: "secondary",
            size: "sm"
        })
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWNvYmhvcm5zdmVubmV2aWsvRG9jdW1lbnRzL0dpdEh1Yi9tYVJlcG9fcm9vdC9mcm9udGVuZC9zcmMvZmVhdHVyZXMvcHJvamVjdHMvY29tcG9uZW50cy9haS1tZXRhZGF0YS10YWdzLWNsaWVudC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUHJvamVjdFYyIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHsgVGFnQmFkZ2VMaXN0IH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL3RhZy1iYWRnZSc7XG4vLyBUZW1wb3JhcmlseSBkaXNhYmxlIGZlYXR1cmUgZmxhZyBjaGVjayB0byBmaXggaW1wb3J0IGlzc3Vlc1xuY29uc3QgaXNGZWF0dXJlRW5hYmxlZCA9IChmbGFnOiBzdHJpbmcpID0+IGZhbHNlO1xuXG5pbnRlcmZhY2UgQUlNZXRhZGF0YVRhZ3NDbGllbnRQcm9wcyB7XG4gIHByb2plY3Q6IFByb2plY3RWMjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQUlNZXRhZGF0YVRhZ3NDbGllbnQoeyBwcm9qZWN0IH06IEFJTWV0YWRhdGFUYWdzQ2xpZW50UHJvcHMpIHtcbiAgY29uc3QgW3Nob3dBSVRhZ3MsIHNldFNob3dBSVRhZ3NdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gQ2hlY2sgZmVhdHVyZSBmbGFnIG9uIGNsaWVudCBzaWRlIG9ubHlcbiAgICBzZXRTaG93QUlUYWdzKGlzRmVhdHVyZUVuYWJsZWQoXCJTSE9XX0FJX01FVEFcIikpO1xuICB9LCBbXSk7XG5cbiAgaWYgKCFzaG93QUlUYWdzIHx8ICFwcm9qZWN0Lm1ldGE/LmFpX2dlbmVyYXRlZF90YWdzIHx8IHByb2plY3QubWV0YS5haV9nZW5lcmF0ZWRfdGFncy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICA8VGFnQmFkZ2VMaXN0XG4gICAgICAgIHRhZ3M9e3Byb2plY3QubWV0YS5haV9nZW5lcmF0ZWRfdGFnc31cbiAgICAgICAgbWF4VGFncz17M31cbiAgICAgICAgc2hvd01vcmU9e3RydWV9XG4gICAgICAgIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIlxuICAgICAgICBzaXplPVwic21cIlxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn0gIl0sIm5hbWVzIjpbIkFJTWV0YWRhdGFUYWdzQ2xpZW50IiwiaXNGZWF0dXJlRW5hYmxlZCIsImZsYWciLCJwcm9qZWN0Iiwic2hvd0FJVGFncyIsInNldFNob3dBSVRhZ3MiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIm1ldGEiLCJhaV9nZW5lcmF0ZWRfdGFncyIsImxlbmd0aCIsImRpdiIsImNsYXNzTmFtZSIsIlRhZ0JhZGdlTGlzdCIsInRhZ3MiLCJtYXhUYWdzIiwic2hvd01vcmUiLCJ2YXJpYW50Iiwic2l6ZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OytCQVlBOzs7ZUFBd0JBOzs7O3VCQVZZOzBCQUVQO0FBQzdCLDhEQUE4RDtBQUM5RCxNQUFNQyxtQkFBbUIsQ0FBQ0MsT0FBaUI7QUFNNUIsU0FBU0YscUJBQXFCLEVBQUVHLE9BQU8sRUFBNkI7SUFDakYsTUFBTSxDQUFDQyxZQUFZQyxjQUFjLEdBQUdDLElBQUFBLGVBQVEsRUFBQztJQUU3Q0MsSUFBQUEsZ0JBQVMsRUFBQztRQUNSLHlDQUF5QztRQUN6Q0YsY0FBY0osaUJBQWlCO0lBQ2pDLEdBQUcsRUFBRTtJQUVMLElBQUksQ0FBQ0csY0FBYyxDQUFDRCxRQUFRSyxJQUFJLEVBQUVDLHFCQUFxQk4sUUFBUUssSUFBSSxDQUFDQyxpQkFBaUIsQ0FBQ0MsTUFBTSxLQUFLLEdBQUc7UUFDbEcsT0FBTztJQUNUO0lBRUEscUJBQ0UscUJBQUNDO1FBQUlDLFdBQVU7a0JBQ2IsY0FBQSxxQkFBQ0Msc0JBQVk7WUFDWEMsTUFBTVgsUUFBUUssSUFBSSxDQUFDQyxpQkFBaUI7WUFDcENNLFNBQVM7WUFDVEMsVUFBVTtZQUNWQyxTQUFRO1lBQ1JDLE1BQUs7OztBQUliIn0=