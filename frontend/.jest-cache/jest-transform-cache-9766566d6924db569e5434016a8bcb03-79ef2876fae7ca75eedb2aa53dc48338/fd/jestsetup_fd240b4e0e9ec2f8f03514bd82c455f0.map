{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/jest.setup.ts"],"sourcesContent":["import '@testing-library/jest-dom'\nrequire('jest-fetch-mock').enableMocks()\n\n// Mock ResizeObserver which is not available in jsdom\nglobal.ResizeObserver = class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n}\n\n// Mock window.matchMedia which is not available in jsdom\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(),\n    removeListener: jest.fn(),\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n})\n\n// Mock window.URL.createObjectURL\nObject.defineProperty(window.URL, 'createObjectURL', {\n  writable: true,\n  value: jest.fn(),\n})\n\n// Default mock for axios instances to avoid real network during unit tests\njest.mock('@/lib/axios', () => {\n  const resolve = (data: any = {}) => Promise.resolve({ data, status: 200, config: {}, headers: {}, statusText: 'OK' });\n  const api = {\n    get: jest.fn(() => resolve({ results: [] })),\n    post: jest.fn(() => resolve({})),\n    patch: jest.fn(() => resolve({})),\n    delete: jest.fn(() => resolve({})),\n    defaults: { baseURL: 'http://localhost:8000/api/' }\n  };\n  const gen = {\n    get: jest.fn(() => resolve({ results: [] })),\n    post: jest.fn(() => resolve({})),\n    patch: jest.fn(() => resolve({})),\n    delete: jest.fn(() => resolve({})),\n    defaults: { baseURL: 'http://localhost:8000/generation/api/' }\n  };\n  const def = { ...api };\n  return {\n    __esModule: true,\n    axiosApi: api,\n    axiosGeneration: gen,\n    default: def,\n  };\n});\n\n// Mock Next.js router\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    prefetch: jest.fn(),\n  }),\n  useSearchParams: () => ({\n    get: jest.fn(),\n    has: jest.fn(),\n    getAll: jest.fn(),\n    keys: jest.fn(),\n    values: jest.fn(),\n    entries: jest.fn(),\n    forEach: jest.fn(),\n    toString: jest.fn(),\n  }),\n  usePathname: () => '/test-path',\n  notFound: jest.fn(),\n  redirect: jest.fn(),\n}));\n\n// Mock Next.js Link component\njest.mock('next/link', () => {\n  const React = require('react');\n  return function MockLink({ children, href, ...props }: any) {\n    return React.createElement('a', { href, ...props }, children);\n  };\n});\n\n// Mock fetch globally\nglobal.fetch = jest.fn(() =>\n  Promise.resolve({\n    ok: true,\n    json: () => Promise.resolve({}),\n    text: () => Promise.resolve(''),\n    status: 200,\n    statusText: 'OK',\n  })\n) as jest.Mock;\n\n// Suppress console errors during tests unless they're expected\nconst originalError = console.error;\nbeforeAll(() => {\n  console.error = (...args: any[]) => {\n    if (typeof args[0] === 'string') {\n      const msg = args[0];\n      if (\n        msg.includes('Warning: ReactDOM.render is no longer supported') ||\n        msg.includes('API error (axios') ||\n        msg.includes('Network error (axios')\n      ) {\n        return;\n      }\n    }\n    originalError.call(console, ...args);\n  };\n});\n\nafterAll(() => {\n  console.error = originalError;\n});\n\n// Mock process.env for all tests\nconst processEnvMock = {\n  NODE_ENV: 'test',\n  NEXT_PUBLIC_TEST_MODE: 'false'\n};\n\nObject.defineProperty(process, 'env', {\n  get: () => processEnvMock,\n  set: (value) => {\n    Object.assign(processEnvMock, value);\n  }\n});\n\n// Helper to set environment variables in tests\nglobal.setTestEnvironment = (env: Partial<typeof processEnvMock>) => {\n  Object.assign(processEnvMock, env);\n};\n\n// Helper to reset environment variables\nglobal.resetTestEnvironment = () => {\n  Object.assign(processEnvMock, {\n    NODE_ENV: 'test',\n    NEXT_PUBLIC_TEST_MODE: 'false'\n  });\n};\n\n// Polyfill StorageEvent for jsdom usage in tests that dispatch it\ntry {\n  if (typeof (global as any).StorageEvent === 'undefined') {\n    class PolyfillStorageEvent extends Event {\n      key: string | null;\n      newValue: string | null;\n      oldValue: string | null;\n      storageArea: Storage | null;\n      url: string;\n      constructor(type: string, init: any = {}) {\n        super(type);\n        this.key = init.key ?? null;\n        this.newValue = init.newValue ?? null;\n        this.oldValue = init.oldValue ?? null;\n        this.storageArea = init.storageArea ?? null;\n        this.url = init.url ?? '';\n      }\n    }\n    ;(global as any).StorageEvent = PolyfillStorageEvent as any;\n  }\n} catch {}\n\n// Add type definitions\ndeclare global {\n  var setTestEnvironment: (env: Partial<typeof processEnvMock>) => void;\n  var resetTestEnvironment: () => void;\n} "],"names":["jest","mock","resolve","data","Promise","status","config","headers","statusText","api","get","fn","results","post","patch","delete","defaults","baseURL","gen","def","__esModule","axiosApi","axiosGeneration","default","useRouter","push","replace","back","forward","refresh","prefetch","useSearchParams","has","getAll","keys","values","entries","forEach","toString","usePathname","notFound","redirect","React","require","MockLink","children","href","props","createElement","enableMocks","global","ResizeObserver","observe","unobserve","disconnect","Object","defineProperty","window","writable","value","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","URL","fetch","ok","json","text","originalError","console","error","beforeAll","args","msg","includes","call","afterAll","processEnvMock","NODE_ENV","NEXT_PUBLIC_TEST_MODE","process","set","assign","setTestEnvironment","env","resetTestEnvironment","StorageEvent","PolyfillStorageEvent","Event","constructor","type","init","key","newValue","oldValue","storageArea","url"],"mappings":";AA+BA,2EAA2E;AAC3EA,KAAKC,IAAI,CAAC,eAAe;IACvB,MAAMC,UAAU,CAACC,OAAY,CAAC,CAAC,GAAKC,QAAQF,OAAO,CAAC;YAAEC;YAAME,QAAQ;YAAKC,QAAQ,CAAC;YAAGC,SAAS,CAAC;YAAGC,YAAY;QAAK;IACnH,MAAMC,MAAM;QACVC,KAAKV,KAAKW,EAAE,CAAC,IAAMT,QAAQ;gBAAEU,SAAS,EAAE;YAAC;QACzCC,MAAMb,KAAKW,EAAE,CAAC,IAAMT,QAAQ,CAAC;QAC7BY,OAAOd,KAAKW,EAAE,CAAC,IAAMT,QAAQ,CAAC;QAC9Ba,QAAQf,KAAKW,EAAE,CAAC,IAAMT,QAAQ,CAAC;QAC/Bc,UAAU;YAAEC,SAAS;QAA6B;IACpD;IACA,MAAMC,MAAM;QACVR,KAAKV,KAAKW,EAAE,CAAC,IAAMT,QAAQ;gBAAEU,SAAS,EAAE;YAAC;QACzCC,MAAMb,KAAKW,EAAE,CAAC,IAAMT,QAAQ,CAAC;QAC7BY,OAAOd,KAAKW,EAAE,CAAC,IAAMT,QAAQ,CAAC;QAC9Ba,QAAQf,KAAKW,EAAE,CAAC,IAAMT,QAAQ,CAAC;QAC/Bc,UAAU;YAAEC,SAAS;QAAwC;IAC/D;IACA,MAAME,MAAM;QAAE,GAAGV,GAAG;IAAC;IACrB,OAAO;QACLW,YAAY;QACZC,UAAUZ;QACVa,iBAAiBJ;QACjBK,SAASJ;IACX;AACF;AAEA,sBAAsB;AACtBnB,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCuB,WAAW,IAAO,CAAA;gBAChBC,MAAMzB,KAAKW,EAAE;gBACbe,SAAS1B,KAAKW,EAAE;gBAChBgB,MAAM3B,KAAKW,EAAE;gBACbiB,SAAS5B,KAAKW,EAAE;gBAChBkB,SAAS7B,KAAKW,EAAE;gBAChBmB,UAAU9B,KAAKW,EAAE;YACnB,CAAA;QACAoB,iBAAiB,IAAO,CAAA;gBACtBrB,KAAKV,KAAKW,EAAE;gBACZqB,KAAKhC,KAAKW,EAAE;gBACZsB,QAAQjC,KAAKW,EAAE;gBACfuB,MAAMlC,KAAKW,EAAE;gBACbwB,QAAQnC,KAAKW,EAAE;gBACfyB,SAASpC,KAAKW,EAAE;gBAChB0B,SAASrC,KAAKW,EAAE;gBAChB2B,UAAUtC,KAAKW,EAAE;YACnB,CAAA;QACA4B,aAAa,IAAM;QACnBC,UAAUxC,KAAKW,EAAE;QACjB8B,UAAUzC,KAAKW,EAAE;IACnB,CAAA;AAEA,8BAA8B;AAC9BX,KAAKC,IAAI,CAAC,aAAa;IACrB,MAAMyC,QAAQC,QAAQ;IACtB,OAAO,SAASC,SAAS,EAAEC,QAAQ,EAAEC,IAAI,EAAE,GAAGC,OAAY;QACxD,OAAOL,MAAMM,aAAa,CAAC,KAAK;YAAEF;YAAM,GAAGC,KAAK;QAAC,GAAGF;IACtD;AACF;;;;QAxFO;AACPF,QAAQ,mBAAmBM,WAAW;AAEtC,sDAAsD;AACtDC,OAAOC,cAAc,GAAG,MAAMA;IAC5BC,UAAU,CAAC;IACXC,YAAY,CAAC;IACbC,aAAa,CAAC;AAChB;AAEA,yDAAyD;AACzDC,OAAOC,cAAc,CAACC,QAAQ,cAAc;IAC1CC,UAAU;IACVC,OAAO3D,KAAKW,EAAE,GAAGiD,kBAAkB,CAACC,CAAAA,QAAU,CAAA;YAC5CC,SAAS;YACTC,OAAOF;YACPG,UAAU;YACVC,aAAajE,KAAKW,EAAE;YACpBuD,gBAAgBlE,KAAKW,EAAE;YACvBwD,kBAAkBnE,KAAKW,EAAE;YACzByD,qBAAqBpE,KAAKW,EAAE;YAC5B0D,eAAerE,KAAKW,EAAE;QACxB,CAAA;AACF;AAEA,kCAAkC;AAClC4C,OAAOC,cAAc,CAACC,OAAOa,GAAG,EAAE,mBAAmB;IACnDZ,UAAU;IACVC,OAAO3D,KAAKW,EAAE;AAChB;AA6DA,sBAAsB;AACtBuC,OAAOqB,KAAK,GAAGvE,KAAKW,EAAE,CAAC,IACrBP,QAAQF,OAAO,CAAC;QACdsE,IAAI;QACJC,MAAM,IAAMrE,QAAQF,OAAO,CAAC,CAAC;QAC7BwE,MAAM,IAAMtE,QAAQF,OAAO,CAAC;QAC5BG,QAAQ;QACRG,YAAY;IACd;AAGF,+DAA+D;AAC/D,MAAMmE,gBAAgBC,QAAQC,KAAK;AACnCC,UAAU;IACRF,QAAQC,KAAK,GAAG,CAAC,GAAGE;QAClB,IAAI,OAAOA,IAAI,CAAC,EAAE,KAAK,UAAU;YAC/B,MAAMC,MAAMD,IAAI,CAAC,EAAE;YACnB,IACEC,IAAIC,QAAQ,CAAC,sDACbD,IAAIC,QAAQ,CAAC,uBACbD,IAAIC,QAAQ,CAAC,yBACb;gBACA;YACF;QACF;QACAN,cAAcO,IAAI,CAACN,YAAYG;IACjC;AACF;AAEAI,SAAS;IACPP,QAAQC,KAAK,GAAGF;AAClB;AAEA,iCAAiC;AACjC,MAAMS,iBAAiB;IACrBC,UAAU;IACVC,uBAAuB;AACzB;AAEA/B,OAAOC,cAAc,CAAC+B,SAAS,OAAO;IACpC7E,KAAK,IAAM0E;IACXI,KAAK,CAAC7B;QACJJ,OAAOkC,MAAM,CAACL,gBAAgBzB;IAChC;AACF;AAEA,+CAA+C;AAC/CT,OAAOwC,kBAAkB,GAAG,CAACC;IAC3BpC,OAAOkC,MAAM,CAACL,gBAAgBO;AAChC;AAEA,wCAAwC;AACxCzC,OAAO0C,oBAAoB,GAAG;IAC5BrC,OAAOkC,MAAM,CAACL,gBAAgB;QAC5BC,UAAU;QACVC,uBAAuB;IACzB;AACF;AAEA,kEAAkE;AAClE,IAAI;IACF,IAAI,OAAO,AAACpC,OAAe2C,YAAY,KAAK,aAAa;QACvD,MAAMC,6BAA6BC;YAMjCC,YAAYC,IAAY,EAAEC,OAAY,CAAC,CAAC,CAAE;gBACxC,KAAK,CAACD;gBACN,IAAI,CAACE,GAAG,GAAGD,KAAKC,GAAG,IAAI;gBACvB,IAAI,CAACC,QAAQ,GAAGF,KAAKE,QAAQ,IAAI;gBACjC,IAAI,CAACC,QAAQ,GAAGH,KAAKG,QAAQ,IAAI;gBACjC,IAAI,CAACC,WAAW,GAAGJ,KAAKI,WAAW,IAAI;gBACvC,IAAI,CAACC,GAAG,GAAGL,KAAKK,GAAG,IAAI;YACzB;QACF;;QACErD,OAAe2C,YAAY,GAAGC;IAClC;AACF,EAAE,OAAM,CAAC"}