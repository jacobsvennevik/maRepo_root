{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/projects/services/file-helpers.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport { formatFileSize as sharedFormatFileSize } from \"@/utils/fileHelpers\";\n\nexport const formatFileSize = sharedFormatFileSize;\n\n// Upload progress tracking utilities\nexport const updateProgress = (fileName: string, progress: number) => {\n  return (prev: Record<string, number>) => ({\n    ...prev,\n    [fileName]: progress,\n  });\n};\n\nexport const removeProgress = (fileName: string) => {\n  return (prev: Record<string, number>) => {\n    const newProgress = { ...prev };\n    delete newProgress[fileName];\n    return newProgress;\n  };\n};\n\n// Drag and drop handlers factory\nexport const createDragHandlers = (\n  onDrop: (files: File[]) => void,\n  setIsDragOver: (isDragOver: boolean) => void,\n) => {\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    onDrop(droppedFiles);\n  };\n\n  return { handleDragOver, handleDragLeave, handleDrop };\n};\n\n// File removal handler hook\nexport const useFileRemover = <T extends { name?: string }>(\n  files: T[],\n  setFiles: (files: T[]) => void,\n  setUploadProgress?: (\n    updater: (prev: Record<string, number>) => Record<string, number>,\n  ) => void,\n) => {\n  return useCallback(\n    (index: number) => {\n      const newFiles = files.filter((_, i) => i !== index);\n      setFiles(newFiles);\n\n      // Clear progress for the removed file if progress tracking is enabled\n      const removedFile = files[index];\n      if (removedFile && removedFile.name && setUploadProgress) {\n        setUploadProgress((prev) => {\n          const newProgress = { ...prev };\n          delete newProgress[removedFile.name!];\n          return newProgress;\n        });\n      }\n    },\n    [files, setFiles, setUploadProgress],\n  );\n};\n\n// Legacy factory for compatibility\nexport const createFileRemover = <T extends { name?: string }>(\n  files: T[],\n  setFiles: (files: T[]) => void,\n  setUploadProgress?: (\n    updater: (prev: Record<string, number>) => Record<string, number>,\n  ) => void,\n) => {\n  return (index: number) => {\n    const newFiles = files.filter((_, i) => i !== index);\n    setFiles(newFiles);\n\n    // Clear progress for the removed file if progress tracking is enabled\n    const removedFile = files[index];\n    if (removedFile && removedFile.name && setUploadProgress) {\n      setUploadProgress((prev) => {\n        const newProgress = { ...prev };\n        delete newProgress[removedFile.name!];\n        return newProgress;\n      });\n    }\n  };\n};\n\n// File selection handler hook\nexport const useFileSelector = <T>(\n  existingFiles: T[],\n  onFilesChange: (files: T[]) => void,\n  fileTransformer?: (file: File) => T,\n) => {\n  return useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const selectedFiles = Array.from(e.target.files || []);\n      const transformedFiles = fileTransformer\n        ? selectedFiles.map(fileTransformer)\n        : (selectedFiles as unknown as T[]);\n      onFilesChange([...existingFiles, ...transformedFiles]);\n    },\n    [existingFiles, onFilesChange, fileTransformer],\n  );\n};\n\n// Common file upload error handling\nexport const handleUploadError = (\n  error: unknown,\n  fileName: string,\n  setError: (error: string | null) => void,\n  setUploadProgress?: (\n    updater: (prev: Record<string, number>) => Record<string, number>,\n  ) => void,\n) => {\n  console.error(\"File upload error:\", error);\n\n  let errorMessage: string;\n  if (error instanceof Error) {\n    if (\"statusCode\" in error && error.statusCode === 401) {\n      errorMessage = \"Your session has expired. Please log in again.\";\n    } else {\n      errorMessage = error.message;\n    }\n  } else {\n    errorMessage = `Failed to upload ${fileName}. Please try again.`;\n  }\n\n  setError(errorMessage);\n\n  // Mark upload as failed in progress tracking\n  if (setUploadProgress) {\n    setUploadProgress((prev) => ({\n      ...prev,\n      [fileName]: -1,\n    }));\n  }\n};\n"],"names":["createDragHandlers","createFileRemover","formatFileSize","handleUploadError","removeProgress","updateProgress","useFileRemover","useFileSelector","sharedFormatFileSize","fileName","progress","prev","newProgress","onDrop","setIsDragOver","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","droppedFiles","Array","from","dataTransfer","files","setFiles","setUploadProgress","useCallback","index","newFiles","filter","_","i","removedFile","name","existingFiles","onFilesChange","fileTransformer","selectedFiles","target","transformedFiles","map","error","setError","console","errorMessage","Error","statusCode","message"],"mappings":"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"}