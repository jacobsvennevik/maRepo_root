{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/diagnostics/components/DiagnosticAnalytics.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { axiosApi } from '@/lib/axios-api';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Progress } from '@/components/ui/progress';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { \n  BarChart3, \n  Users, \n  Target, \n  TrendingUp, \n  AlertTriangle, \n  CheckCircle, \n  XCircle,\n  Download,\n  Eye,\n  Brain,\n  Clock,\n  Zap\n} from 'lucide-react';\n\ninterface DiagnosticAnalytics {\n  id: string;\n  session: {\n    id: string;\n    topic: string;\n    status: string;\n    max_questions: number;\n  };\n  total_participants: number;\n  participation_rate: number;\n  average_score: number;\n  median_confidence: number;\n  overconfidence_rate: number;\n  brier_score: number;\n  concept_analytics: Record<string, {\n    total_responses: number;\n    correct_responses: number;\n    avg_confidence: number;\n    avg_score: number;\n    accuracy: number;\n    avg_brier: number;\n  }>;\n  top_misconceptions: Array<{\n    concept: string;\n    accuracy: number;\n    total_responses: number;\n    avg_confidence: number;\n  }>;\n  talking_points: Array<{\n    type: string;\n    message: string;\n    priority: 'high' | 'medium' | 'low';\n  }>;\n}\n\ninterface ConceptBreakdown {\n  concept: string;\n  accuracy: number;\n  totalResponses: number;\n  avgConfidence: number;\n  avgScore: number;\n}\n\nexport default function DiagnosticAnalytics({ sessionId }: { sessionId: string }) {\n  const [analytics, setAnalytics] = useState<DiagnosticAnalytics | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    fetchAnalytics();\n  }, [sessionId]);\n\n  const fetchAnalytics = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axiosApi.get(`diagnostics/sessions/${sessionId}/analytics/`);\n      setAnalytics(response.data);\n    } catch (error) {\n      console.error('Failed to fetch analytics:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleExportAnalytics = async () => {\n    try {\n      const response = await axiosApi.get(`diagnostics/sessions/${sessionId}/analytics/export/`, { responseType: 'blob' });\n      if (response.status === 200) {\n        const blob = response.data as Blob;\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `diagnostic-analytics-${sessionId}.csv`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }\n    } catch (error) {\n      console.error('Failed to export analytics:', error);\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    const colors = {\n      high: 'text-red-600 bg-red-50 border-red-200',\n      medium: 'text-yellow-600 bg-yellow-50 border-yellow-200',\n      low: 'text-blue-600 bg-blue-50 border-blue-200',\n    };\n    return colors[priority as keyof typeof colors] || colors.low;\n  };\n\n  const getPriorityIcon = (priority: string) => {\n    const icons = {\n      high: AlertTriangle,\n      medium: Clock,\n      low: Eye,\n    };\n    return icons[priority as keyof typeof icons] || Eye;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <div className=\"text-center\">\n          <BarChart3 className=\"mx-auto h-12 w-12 text-muted-foreground animate-pulse\" />\n          <p className=\"mt-4 text-lg\">Loading analytics...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!analytics) {\n    return (\n      <Alert>\n        <AlertTriangle className=\"h-4 w-4\" />\n        <AlertDescription>Failed to load diagnostic analytics</AlertDescription>\n      </Alert>\n    );\n  }\n\n  const conceptBreakdown: ConceptBreakdown[] = Object.entries(analytics.concept_analytics).map(\n    ([concept, data]) => ({\n      concept,\n      accuracy: data.accuracy,\n      totalResponses: data.total_responses,\n      avgConfidence: data.avg_confidence,\n      avgScore: data.avg_score,\n    })\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Diagnostic Analytics</h2>\n          <p className=\"text-muted-foreground\">\n            {analytics.session.topic} â€¢ {analytics.session.max_questions} questions\n          </p>\n        </div>\n        <Button onClick={handleExportAnalytics} variant=\"outline\">\n          <Download className=\"mr-2 h-4 w-4\" />\n          Export Data\n        </Button>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-2\">\n              <Users className=\"h-5 w-5 text-blue-600\" />\n              <span className=\"text-sm font-medium text-muted-foreground\">Participants</span>\n            </div>\n            <div className=\"mt-2 text-3xl font-bold\">{analytics.total_participants}</div>\n            <div className=\"mt-1 text-sm text-muted-foreground\">\n              {Math.round(analytics.participation_rate * 100)}% participation rate\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-2\">\n              <Target className=\"h-5 w-5 text-green-600\" />\n              <span className=\"text-sm font-medium text-muted-foreground\">Average Score</span>\n            </div>\n            <div className=\"mt-2 text-3xl font-bold\">\n              {Math.round(analytics.average_score * 100)}%\n            </div>\n            <div className=\"mt-1 text-sm text-muted-foreground\">\n              Across all questions\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-2\">\n              <Brain className=\"h-5 w-5 text-purple-600\" />\n              <span className=\"text-sm font-medium text-muted-foreground\">Confidence</span>\n            </div>\n            <div className=\"mt-2 text-3xl font-bold\">\n              {Math.round(analytics.median_confidence)}%\n            </div>\n            <div className=\"mt-1 text-sm text-muted-foreground\">\n              Median confidence level\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center space-x-2\">\n              <TrendingUp className=\"h-5 w-5 text-orange-600\" />\n              <span className=\"text-sm font-medium text-muted-foreground\">Calibration</span>\n            </div>\n            <div className=\"mt-2 text-3xl font-bold\">\n              {Math.round((1 - analytics.overconfidence_rate) * 100)}%\n            </div>\n            <div className=\"mt-1 text-sm text-muted-foreground\">\n              Well-calibrated responses\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"concepts\">Concepts</TabsTrigger>\n          <TabsTrigger value=\"insights\">Insights</TabsTrigger>\n          <TabsTrigger value=\"recommendations\">Recommendations</TabsTrigger>\n        </TabsList>\n\n        {/* Overview Tab */}\n        <TabsContent value=\"overview\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Participation Overview */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Users className=\"h-5 w-5\" />\n                  <span>Participation Overview</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span>Participation Rate</span>\n                    <span className=\"font-medium\">\n                      {Math.round(analytics.participation_rate * 100)}%\n                    </span>\n                  </div>\n                  <Progress value={analytics.participation_rate * 100} className=\"h-2\" />\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4 text-center\">\n                  <div className=\"p-3 bg-muted rounded-lg\">\n                    <div className=\"text-2xl font-bold text-blue-600\">\n                      {analytics.total_participants}\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">Participants</div>\n                  </div>\n                  <div className=\"p-3 bg-muted rounded-lg\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {Math.round(analytics.average_score * 100)}%\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">Avg Score</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Performance Overview */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Target className=\"h-5 w-5\" />\n                  <span>Performance Overview</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm\">Score Distribution</span>\n                    <span className=\"text-sm font-medium\">\n                      {analytics.average_score < 0.6 ? 'Needs Improvement' : 'Good Performance'}\n                    </span>\n                  </div>\n                  <Progress \n                    value={analytics.average_score * 100} \n                    className=\"h-2\"\n                    color={analytics.average_score < 0.6 ? 'bg-red-500' : 'bg-green-500'}\n                  />\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm\">Confidence Calibration</span>\n                    <span className=\"text-sm font-medium\">\n                      {analytics.overconfidence_rate > 0.4 ? 'High Overconfidence' : 'Well Calibrated'}\n                    </span>\n                  </div>\n                  <Progress \n                    value={analytics.overconfidence_rate * 100} \n                    className=\"h-2\"\n                    color={analytics.overconfidence_rate > 0.4 ? 'bg-orange-500' : 'bg-blue-500'}\n                  />\n                </div>\n\n                <div className=\"text-center p-3 bg-muted rounded-lg\">\n                  <div className=\"text-lg font-semibold\">\n                    Brier Score: {analytics.brier_score.toFixed(3)}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    Lower is better (0.0 = perfect calibration)\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Concepts Tab */}\n        <TabsContent value=\"concepts\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Concept-Level Performance</CardTitle>\n              <CardDescription>\n                Detailed breakdown of performance by concept area\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {conceptBreakdown.map((concept) => (\n                  <div key={concept.concept} className=\"border rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <h4 className=\"font-semibold\">{concept.concept}</h4>\n                      <div className=\"flex items-center space-x-2\">\n                        <Badge variant={concept.accuracy < 0.7 ? 'destructive' : 'default'}>\n                          {Math.round(concept.accuracy * 100)}% accuracy\n                        </Badge>\n                        <Badge variant=\"outline\">\n                          {concept.totalResponses} responses\n                        </Badge>\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                      <div>\n                        <div className=\"text-muted-foreground\">Accuracy</div>\n                        <div className=\"font-medium\">{Math.round(concept.accuracy * 100)}%</div>\n                      </div>\n                      <div>\n                        <div className=\"text-muted-foreground\">Avg Confidence</div>\n                        <div className=\"font-medium\">{Math.round(concept.avgConfidence)}%</div>\n                      </div>\n                      <div>\n                        <div className=\"text-muted-foreground\">Avg Score</div>\n                        <div className=\"font-medium\">{Math.round(concept.avgScore * 100)}%</div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"mt-3\">\n                      <Progress \n                        value={concept.accuracy * 100} \n                        className=\"h-2\"\n                        color={concept.accuracy < 0.7 ? 'bg-red-500' : 'bg-green-500'}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Insights Tab */}\n        <TabsContent value=\"insights\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Top Misconceptions */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <AlertTriangle className=\"h-5 w-5 text-red-600\" />\n                  <span>Top Misconceptions</span>\n                </CardTitle>\n                <CardDescription>\n                  Concepts where students struggled the most\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {analytics.top_misconceptions.map((misconception, index) => (\n                    <div key={misconception.concept} className=\"flex items-center justify-between p-3 bg-red-50 rounded-lg border border-red-200\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-medium text-red-800\">\n                          {index + 1}.\n                        </span>\n                        <span className=\"text-sm text-red-800\">{misconception.concept}</span>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-sm font-medium text-red-800\">\n                          {Math.round(misconception.accuracy * 100)}%\n                        </div>\n                        <div className=\"text-xs text-red-600\">\n                          {misconception.total_responses} responses\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Calibration Insights */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Brain className=\"h-5 w-5 text-purple-600\" />\n                  <span>Calibration Insights</span>\n                </CardTitle>\n                <CardDescription>\n                  How well students assess their own knowledge\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"text-center p-4 bg-muted rounded-lg\">\n                    <div className=\"text-2xl font-bold text-purple-600\">\n                      {Math.round(analytics.median_confidence)}%\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">Median Confidence</div>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span>Overconfidence Rate</span>\n                      <span className=\"font-medium\">\n                        {Math.round(analytics.overconfidence_rate * 100)}%\n                      </span>\n                    </div>\n                    <Progress \n                      value={analytics.overconfidence_rate * 100} \n                      className=\"h-2\"\n                      color={analytics.overconfidence_rate > 0.4 ? 'bg-orange-500' : 'bg-blue-500'}\n                    />\n                  </div>\n                  \n                  <div className=\"text-center p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                    <div className=\"text-sm font-medium text-blue-800\">\n                      Brier Score: {analytics.brier_score.toFixed(3)}\n                    </div>\n                    <div className=\"text-xs text-blue-600\">\n                      {analytics.brier_score < 0.2 ? 'Excellent calibration' : \n                       analytics.brier_score < 0.4 ? 'Good calibration' : 'Needs improvement'}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Recommendations Tab */}\n        <TabsContent value=\"recommendations\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Zap className=\"h-5 w-5 text-yellow-600\" />\n                <span>Actionable Insights</span>\n              </CardTitle>\n              <CardDescription>\n                Key talking points and recommendations for your lecture\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {analytics.talking_points.map((point, index) => {\n                  const IconComponent = getPriorityIcon(point.priority);\n                  return (\n                    <div\n                      key={index}\n                      className={`p-4 rounded-lg border ${getPriorityColor(point.priority)}`}\n                    >\n                      <div className=\"flex items-start space-x-3\">\n                        <IconComponent className=\"h-5 w-5 mt-0.5 flex-shrink-0\" />\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-2\">\n                            <Badge variant=\"outline\" className=\"capitalize\">\n                              {point.type}\n                            </Badge>\n                            <Badge variant={point.priority === 'high' ? 'destructive' : 'default'}>\n                              {point.priority} priority\n                            </Badge>\n                          </div>\n                          <p className=\"text-sm\">{point.message}</p>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":["DiagnosticAnalytics","sessionId","analytics","setAnalytics","useState","isLoading","setIsLoading","activeTab","setActiveTab","useEffect","fetchAnalytics","response","axiosApi","get","data","error","console","handleExportAnalytics","responseType","status","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild","getPriorityColor","priority","colors","high","medium","low","getPriorityIcon","icons","AlertTriangle","Clock","Eye","div","className","BarChart3","p","Alert","AlertDescription","conceptBreakdown","Object","entries","concept_analytics","map","concept","accuracy","totalResponses","total_responses","avgConfidence","avg_confidence","avgScore","avg_score","h2","session","topic","max_questions","Button","onClick","variant","Download","Card","CardContent","Users","span","total_participants","Math","round","participation_rate","Target","average_score","Brain","median_confidence","TrendingUp","overconfidence_rate","Tabs","value","onValueChange","TabsList","TabsTrigger","TabsContent","CardHeader","CardTitle","Progress","color","brier_score","toFixed","CardDescription","h4","Badge","top_misconceptions","misconception","index","Zap","talking_points","point","IconComponent","type","message"],"mappings":"AAAA;;;;;+BAoEA;;;eAAwBA;;;;+DAlEmB;0BAClB;sBACiD;wBACnD;uBACD;sBACmC;0BAChC;uBACe;6BAcjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CQ,SAASA,oBAAoB,EAAEC,SAAS,EAAyB;IAC9E,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAA6B;IACvE,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,WAAWC,aAAa,GAAGJ,IAAAA,eAAQ,EAAC;IAE3CK,IAAAA,gBAAS,EAAC;QACRC;IACF,GAAG;QAACT;KAAU;IAEd,MAAMS,iBAAiB;QACrB,IAAI;YACFJ,aAAa;YACb,MAAMK,WAAW,MAAMC,kBAAQ,CAACC,GAAG,CAAC,CAAC,qBAAqB,EAAEZ,UAAU,WAAW,CAAC;YAClFE,aAAaQ,SAASG,IAAI;QAC5B,EAAE,OAAOC,OAAO;YACdC,QAAQD,KAAK,CAAC,8BAA8BA;QAC9C,SAAU;YACRT,aAAa;QACf;IACF;IAEA,MAAMW,wBAAwB;QAC5B,IAAI;YACF,MAAMN,WAAW,MAAMC,kBAAQ,CAACC,GAAG,CAAC,CAAC,qBAAqB,EAAEZ,UAAU,kBAAkB,CAAC,EAAE;gBAAEiB,cAAc;YAAO;YAClH,IAAIP,SAASQ,MAAM,KAAK,KAAK;gBAC3B,MAAMC,OAAOT,SAASG,IAAI;gBAC1B,MAAMO,MAAMC,OAAOC,GAAG,CAACC,eAAe,CAACJ;gBACvC,MAAMK,IAAIC,SAASC,aAAa,CAAC;gBACjCF,EAAEG,IAAI,GAAGP;gBACTI,EAAEI,QAAQ,GAAG,CAAC,qBAAqB,EAAE5B,UAAU,IAAI,CAAC;gBACpDyB,SAASI,IAAI,CAACC,WAAW,CAACN;gBAC1BA,EAAEO,KAAK;gBACPV,OAAOC,GAAG,CAACU,eAAe,CAACZ;gBAC3BK,SAASI,IAAI,CAACI,WAAW,CAACT;YAC5B;QACF,EAAE,OAAOV,OAAO;YACdC,QAAQD,KAAK,CAAC,+BAA+BA;QAC/C;IACF;IAEA,MAAMoB,mBAAmB,CAACC;QACxB,MAAMC,SAAS;YACbC,MAAM;YACNC,QAAQ;YACRC,KAAK;QACP;QACA,OAAOH,MAAM,CAACD,SAAgC,IAAIC,OAAOG,GAAG;IAC9D;IAEA,MAAMC,kBAAkB,CAACL;QACvB,MAAMM,QAAQ;YACZJ,MAAMK,0BAAa;YACnBJ,QAAQK,kBAAK;YACbJ,KAAKK,gBAAG;QACV;QACA,OAAOH,KAAK,CAACN,SAA+B,IAAIS,gBAAG;IACrD;IAEA,IAAIxC,WAAW;QACb,qBACE,qBAACyC;YAAIC,WAAU;sBACb,cAAA,sBAACD;gBAAIC,WAAU;;kCACb,qBAACC,sBAAS;wBAACD,WAAU;;kCACrB,qBAACE;wBAAEF,WAAU;kCAAe;;;;;IAIpC;IAEA,IAAI,CAAC7C,WAAW;QACd,qBACE,sBAACgD,YAAK;;8BACJ,qBAACP,0BAAa;oBAACI,WAAU;;8BACzB,qBAACI,uBAAgB;8BAAC;;;;IAGxB;IAEA,MAAMC,mBAAuCC,OAAOC,OAAO,CAACpD,UAAUqD,iBAAiB,EAAEC,GAAG,CAC1F,CAAC,CAACC,SAAS3C,KAAK,GAAM,CAAA;YACpB2C;YACAC,UAAU5C,KAAK4C,QAAQ;YACvBC,gBAAgB7C,KAAK8C,eAAe;YACpCC,eAAe/C,KAAKgD,cAAc;YAClCC,UAAUjD,KAAKkD,SAAS;QAC1B,CAAA;IAGF,qBACE,sBAAClB;QAAIC,WAAU;;0BAEb,sBAACD;gBAAIC,WAAU;;kCACb,sBAACD;;0CACC,qBAACmB;gCAAGlB,WAAU;0CAAoC;;0CAClD,sBAACE;gCAAEF,WAAU;;oCACV7C,UAAUgE,OAAO,CAACC,KAAK;oCAAC;oCAAIjE,UAAUgE,OAAO,CAACE,aAAa;oCAAC;;;;;kCAGjE,sBAACC,cAAM;wBAACC,SAASrD;wBAAuBsD,SAAQ;;0CAC9C,qBAACC,qBAAQ;gCAACzB,WAAU;;4BAAiB;;;;;0BAMzC,sBAACD;gBAAIC,WAAU;;kCACb,qBAAC0B,UAAI;kCACH,cAAA,sBAACC,iBAAW;4BAAC3B,WAAU;;8CACrB,sBAACD;oCAAIC,WAAU;;sDACb,qBAAC4B,kBAAK;4CAAC5B,WAAU;;sDACjB,qBAAC6B;4CAAK7B,WAAU;sDAA4C;;;;8CAE9D,qBAACD;oCAAIC,WAAU;8CAA2B7C,UAAU2E,kBAAkB;;8CACtE,sBAAC/B;oCAAIC,WAAU;;wCACZ+B,KAAKC,KAAK,CAAC7E,UAAU8E,kBAAkB,GAAG;wCAAK;;;;;;kCAKtD,qBAACP,UAAI;kCACH,cAAA,sBAACC,iBAAW;4BAAC3B,WAAU;;8CACrB,sBAACD;oCAAIC,WAAU;;sDACb,qBAACkC,mBAAM;4CAAClC,WAAU;;sDAClB,qBAAC6B;4CAAK7B,WAAU;sDAA4C;;;;8CAE9D,sBAACD;oCAAIC,WAAU;;wCACZ+B,KAAKC,KAAK,CAAC7E,UAAUgF,aAAa,GAAG;wCAAK;;;8CAE7C,qBAACpC;oCAAIC,WAAU;8CAAqC;;;;;kCAMxD,qBAAC0B,UAAI;kCACH,cAAA,sBAACC,iBAAW;4BAAC3B,WAAU;;8CACrB,sBAACD;oCAAIC,WAAU;;sDACb,qBAACoC,kBAAK;4CAACpC,WAAU;;sDACjB,qBAAC6B;4CAAK7B,WAAU;sDAA4C;;;;8CAE9D,sBAACD;oCAAIC,WAAU;;wCACZ+B,KAAKC,KAAK,CAAC7E,UAAUkF,iBAAiB;wCAAE;;;8CAE3C,qBAACtC;oCAAIC,WAAU;8CAAqC;;;;;kCAMxD,qBAAC0B,UAAI;kCACH,cAAA,sBAACC,iBAAW;4BAAC3B,WAAU;;8CACrB,sBAACD;oCAAIC,WAAU;;sDACb,qBAACsC,uBAAU;4CAACtC,WAAU;;sDACtB,qBAAC6B;4CAAK7B,WAAU;sDAA4C;;;;8CAE9D,sBAACD;oCAAIC,WAAU;;wCACZ+B,KAAKC,KAAK,CAAC,AAAC,CAAA,IAAI7E,UAAUoF,mBAAmB,AAAD,IAAK;wCAAK;;;8CAEzD,qBAACxC;oCAAIC,WAAU;8CAAqC;;;;;;;0BAQ1D,sBAACwC,UAAI;gBAACC,OAAOjF;gBAAWkF,eAAejF;gBAAcuC,WAAU;;kCAC7D,sBAAC2C,cAAQ;wBAAC3C,WAAU;;0CAClB,qBAAC4C,iBAAW;gCAACH,OAAM;0CAAW;;0CAC9B,qBAACG,iBAAW;gCAACH,OAAM;0CAAW;;0CAC9B,qBAACG,iBAAW;gCAACH,OAAM;0CAAW;;0CAC9B,qBAACG,iBAAW;gCAACH,OAAM;0CAAkB;;;;kCAIvC,qBAACI,iBAAW;wBAACJ,OAAM;wBAAWzC,WAAU;kCACtC,cAAA,sBAACD;4BAAIC,WAAU;;8CAEb,sBAAC0B,UAAI;;sDACH,qBAACoB,gBAAU;sDACT,cAAA,sBAACC,eAAS;gDAAC/C,WAAU;;kEACnB,qBAAC4B,kBAAK;wDAAC5B,WAAU;;kEACjB,qBAAC6B;kEAAK;;;;;sDAGV,sBAACF,iBAAW;4CAAC3B,WAAU;;8DACrB,sBAACD;oDAAIC,WAAU;;sEACb,sBAACD;4DAAIC,WAAU;;8EACb,qBAAC6B;8EAAK;;8EACN,sBAACA;oEAAK7B,WAAU;;wEACb+B,KAAKC,KAAK,CAAC7E,UAAU8E,kBAAkB,GAAG;wEAAK;;;;;sEAGpD,qBAACe,kBAAQ;4DAACP,OAAOtF,UAAU8E,kBAAkB,GAAG;4DAAKjC,WAAU;;;;8DAGjE,sBAACD;oDAAIC,WAAU;;sEACb,sBAACD;4DAAIC,WAAU;;8EACb,qBAACD;oEAAIC,WAAU;8EACZ7C,UAAU2E,kBAAkB;;8EAE/B,qBAAC/B;oEAAIC,WAAU;8EAAgC;;;;sEAEjD,sBAACD;4DAAIC,WAAU;;8EACb,sBAACD;oEAAIC,WAAU;;wEACZ+B,KAAKC,KAAK,CAAC7E,UAAUgF,aAAa,GAAG;wEAAK;;;8EAE7C,qBAACpC;oEAAIC,WAAU;8EAAgC;;;;;;;;;;8CAOvD,sBAAC0B,UAAI;;sDACH,qBAACoB,gBAAU;sDACT,cAAA,sBAACC,eAAS;gDAAC/C,WAAU;;kEACnB,qBAACkC,mBAAM;wDAAClC,WAAU;;kEAClB,qBAAC6B;kEAAK;;;;;sDAGV,sBAACF,iBAAW;4CAAC3B,WAAU;;8DACrB,sBAACD;oDAAIC,WAAU;;sEACb,sBAACD;4DAAIC,WAAU;;8EACb,qBAAC6B;oEAAK7B,WAAU;8EAAU;;8EAC1B,qBAAC6B;oEAAK7B,WAAU;8EACb7C,UAAUgF,aAAa,GAAG,MAAM,sBAAsB;;;;sEAG3D,qBAACa,kBAAQ;4DACPP,OAAOtF,UAAUgF,aAAa,GAAG;4DACjCnC,WAAU;4DACViD,OAAO9F,UAAUgF,aAAa,GAAG,MAAM,eAAe;;;;8DAI1D,sBAACpC;oDAAIC,WAAU;;sEACb,sBAACD;4DAAIC,WAAU;;8EACb,qBAAC6B;oEAAK7B,WAAU;8EAAU;;8EAC1B,qBAAC6B;oEAAK7B,WAAU;8EACb7C,UAAUoF,mBAAmB,GAAG,MAAM,wBAAwB;;;;sEAGnE,qBAACS,kBAAQ;4DACPP,OAAOtF,UAAUoF,mBAAmB,GAAG;4DACvCvC,WAAU;4DACViD,OAAO9F,UAAUoF,mBAAmB,GAAG,MAAM,kBAAkB;;;;8DAInE,sBAACxC;oDAAIC,WAAU;;sEACb,sBAACD;4DAAIC,WAAU;;gEAAwB;gEACvB7C,UAAU+F,WAAW,CAACC,OAAO,CAAC;;;sEAE9C,qBAACpD;4DAAIC,WAAU;sEAAgC;;;;;;;;;;;kCAUzD,qBAAC6C,iBAAW;wBAACJ,OAAM;wBAAWzC,WAAU;kCACtC,cAAA,sBAAC0B,UAAI;;8CACH,sBAACoB,gBAAU;;sDACT,qBAACC,eAAS;sDAAC;;sDACX,qBAACK,qBAAe;sDAAC;;;;8CAInB,qBAACzB,iBAAW;8CACV,cAAA,qBAAC5B;wCAAIC,WAAU;kDACZK,iBAAiBI,GAAG,CAAC,CAACC,wBACrB,sBAACX;gDAA0BC,WAAU;;kEACnC,sBAACD;wDAAIC,WAAU;;0EACb,qBAACqD;gEAAGrD,WAAU;0EAAiBU,QAAQA,OAAO;;0EAC9C,sBAACX;gEAAIC,WAAU;;kFACb,sBAACsD,YAAK;wEAAC9B,SAASd,QAAQC,QAAQ,GAAG,MAAM,gBAAgB;;4EACtDoB,KAAKC,KAAK,CAACtB,QAAQC,QAAQ,GAAG;4EAAK;;;kFAEtC,sBAAC2C,YAAK;wEAAC9B,SAAQ;;4EACZd,QAAQE,cAAc;4EAAC;;;;;;;kEAK9B,sBAACb;wDAAIC,WAAU;;0EACb,sBAACD;;kFACC,qBAACA;wEAAIC,WAAU;kFAAwB;;kFACvC,sBAACD;wEAAIC,WAAU;;4EAAe+B,KAAKC,KAAK,CAACtB,QAAQC,QAAQ,GAAG;4EAAK;;;;;0EAEnE,sBAACZ;;kFACC,qBAACA;wEAAIC,WAAU;kFAAwB;;kFACvC,sBAACD;wEAAIC,WAAU;;4EAAe+B,KAAKC,KAAK,CAACtB,QAAQI,aAAa;4EAAE;;;;;0EAElE,sBAACf;;kFACC,qBAACA;wEAAIC,WAAU;kFAAwB;;kFACvC,sBAACD;wEAAIC,WAAU;;4EAAe+B,KAAKC,KAAK,CAACtB,QAAQM,QAAQ,GAAG;4EAAK;;;;;;;kEAIrE,qBAACjB;wDAAIC,WAAU;kEACb,cAAA,qBAACgD,kBAAQ;4DACPP,OAAO/B,QAAQC,QAAQ,GAAG;4DAC1BX,WAAU;4DACViD,OAAOvC,QAAQC,QAAQ,GAAG,MAAM,eAAe;;;;+CAhC3CD,QAAQA,OAAO;;;;;;kCA2CnC,qBAACmC,iBAAW;wBAACJ,OAAM;wBAAWzC,WAAU;kCACtC,cAAA,sBAACD;4BAAIC,WAAU;;8CAEb,sBAAC0B,UAAI;;sDACH,sBAACoB,gBAAU;;8DACT,sBAACC,eAAS;oDAAC/C,WAAU;;sEACnB,qBAACJ,0BAAa;4DAACI,WAAU;;sEACzB,qBAAC6B;sEAAK;;;;8DAER,qBAACuB,qBAAe;8DAAC;;;;sDAInB,qBAACzB,iBAAW;sDACV,cAAA,qBAAC5B;gDAAIC,WAAU;0DACZ7C,UAAUoG,kBAAkB,CAAC9C,GAAG,CAAC,CAAC+C,eAAeC,sBAChD,sBAAC1D;wDAAgCC,WAAU;;0EACzC,sBAACD;gEAAIC,WAAU;;kFACb,sBAAC6B;wEAAK7B,WAAU;;4EACbyD,QAAQ;4EAAE;;;kFAEb,qBAAC5B;wEAAK7B,WAAU;kFAAwBwD,cAAc9C,OAAO;;;;0EAE/D,sBAACX;gEAAIC,WAAU;;kFACb,sBAACD;wEAAIC,WAAU;;4EACZ+B,KAAKC,KAAK,CAACwB,cAAc7C,QAAQ,GAAG;4EAAK;;;kFAE5C,sBAACZ;wEAAIC,WAAU;;4EACZwD,cAAc3C,eAAe;4EAAC;;;;;;uDAZ3B2C,cAAc9C,OAAO;;;;;8CAsBvC,sBAACgB,UAAI;;sDACH,sBAACoB,gBAAU;;8DACT,sBAACC,eAAS;oDAAC/C,WAAU;;sEACnB,qBAACoC,kBAAK;4DAACpC,WAAU;;sEACjB,qBAAC6B;sEAAK;;;;8DAER,qBAACuB,qBAAe;8DAAC;;;;sDAInB,qBAACzB,iBAAW;sDACV,cAAA,sBAAC5B;gDAAIC,WAAU;;kEACb,sBAACD;wDAAIC,WAAU;;0EACb,sBAACD;gEAAIC,WAAU;;oEACZ+B,KAAKC,KAAK,CAAC7E,UAAUkF,iBAAiB;oEAAE;;;0EAE3C,qBAACtC;gEAAIC,WAAU;0EAAgC;;;;kEAGjD,sBAACD;wDAAIC,WAAU;;0EACb,sBAACD;gEAAIC,WAAU;;kFACb,qBAAC6B;kFAAK;;kFACN,sBAACA;wEAAK7B,WAAU;;4EACb+B,KAAKC,KAAK,CAAC7E,UAAUoF,mBAAmB,GAAG;4EAAK;;;;;0EAGrD,qBAACS,kBAAQ;gEACPP,OAAOtF,UAAUoF,mBAAmB,GAAG;gEACvCvC,WAAU;gEACViD,OAAO9F,UAAUoF,mBAAmB,GAAG,MAAM,kBAAkB;;;;kEAInE,sBAACxC;wDAAIC,WAAU;;0EACb,sBAACD;gEAAIC,WAAU;;oEAAoC;oEACnC7C,UAAU+F,WAAW,CAACC,OAAO,CAAC;;;0EAE9C,qBAACpD;gEAAIC,WAAU;0EACZ7C,UAAU+F,WAAW,GAAG,MAAM,0BAC9B/F,UAAU+F,WAAW,GAAG,MAAM,qBAAqB;;;;;;;;;;;;kCAUlE,qBAACL,iBAAW;wBAACJ,OAAM;wBAAkBzC,WAAU;kCAC7C,cAAA,sBAAC0B,UAAI;;8CACH,sBAACoB,gBAAU;;sDACT,sBAACC,eAAS;4CAAC/C,WAAU;;8DACnB,qBAAC0D,gBAAG;oDAAC1D,WAAU;;8DACf,qBAAC6B;8DAAK;;;;sDAER,qBAACuB,qBAAe;sDAAC;;;;8CAInB,qBAACzB,iBAAW;8CACV,cAAA,qBAAC5B;wCAAIC,WAAU;kDACZ7C,UAAUwG,cAAc,CAAClD,GAAG,CAAC,CAACmD,OAAOH;4CACpC,MAAMI,gBAAgBnE,gBAAgBkE,MAAMvE,QAAQ;4CACpD,qBACE,qBAACU;gDAECC,WAAW,CAAC,sBAAsB,EAAEZ,iBAAiBwE,MAAMvE,QAAQ,GAAG;0DAEtE,cAAA,sBAACU;oDAAIC,WAAU;;sEACb,qBAAC6D;4DAAc7D,WAAU;;sEACzB,sBAACD;4DAAIC,WAAU;;8EACb,sBAACD;oEAAIC,WAAU;;sFACb,qBAACsD,YAAK;4EAAC9B,SAAQ;4EAAUxB,WAAU;sFAChC4D,MAAME,IAAI;;sFAEb,sBAACR,YAAK;4EAAC9B,SAASoC,MAAMvE,QAAQ,KAAK,SAAS,gBAAgB;;gFACzDuE,MAAMvE,QAAQ;gFAAC;;;;;8EAGpB,qBAACa;oEAAEF,WAAU;8EAAW4D,MAAMG,OAAO;;;;;;+CAdpCN;wCAmBX;;;;;;;;;;AAQhB"}