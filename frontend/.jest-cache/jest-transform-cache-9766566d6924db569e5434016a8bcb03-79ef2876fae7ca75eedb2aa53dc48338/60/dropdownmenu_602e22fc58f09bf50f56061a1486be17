039b8656ee8449a7c43c0d7aac8b1a67
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DropdownMenu: function() {
        return DropdownMenu;
    },
    DropdownMenuCheckboxItem: function() {
        return DropdownMenuCheckboxItem;
    },
    DropdownMenuContent: function() {
        return DropdownMenuContent;
    },
    DropdownMenuGroup: function() {
        return DropdownMenuGroup;
    },
    DropdownMenuItem: function() {
        return DropdownMenuItem;
    },
    DropdownMenuLabel: function() {
        return DropdownMenuLabel;
    },
    DropdownMenuPortal: function() {
        return DropdownMenuPortal;
    },
    DropdownMenuRadioGroup: function() {
        return DropdownMenuRadioGroup;
    },
    DropdownMenuRadioItem: function() {
        return DropdownMenuRadioItem;
    },
    DropdownMenuSeparator: function() {
        return DropdownMenuSeparator;
    },
    DropdownMenuShortcut: function() {
        return DropdownMenuShortcut;
    },
    DropdownMenuSub: function() {
        return DropdownMenuSub;
    },
    DropdownMenuSubContent: function() {
        return DropdownMenuSubContent;
    },
    DropdownMenuSubTrigger: function() {
        return DropdownMenuSubTrigger;
    },
    DropdownMenuTrigger: function() {
        return DropdownMenuTrigger;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactdropdownmenu = /*#__PURE__*/ _interop_require_wildcard(require("@radix-ui/react-dropdown-menu"));
const _lucidereact = require("lucide-react");
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const DropdownMenu = _reactdropdownmenu.Root;
const DropdownMenuTrigger = _reactdropdownmenu.Trigger;
const DropdownMenuGroup = _reactdropdownmenu.Group;
const DropdownMenuPortal = _reactdropdownmenu.Portal;
const DropdownMenuSub = _reactdropdownmenu.Sub;
const DropdownMenuRadioGroup = _reactdropdownmenu.RadioGroup;
const DropdownMenuSubTrigger = /*#__PURE__*/ _react.forwardRef(({ className, inset, children, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdropdownmenu.SubTrigger, {
        ref: ref,
        className: (0, _utils.cn)("flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0", inset && "pl-8", className),
        ...props,
        children: [
            children,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
                className: "ml-auto"
            })
        ]
    }));
DropdownMenuSubTrigger.displayName = _reactdropdownmenu.SubTrigger.displayName;
const DropdownMenuSubContent = /*#__PURE__*/ _react.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.SubContent, {
        ref: ref,
        className: (0, _utils.cn)("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]", className),
        ...props
    }));
DropdownMenuSubContent.displayName = _reactdropdownmenu.SubContent.displayName;
const DropdownMenuContent = /*#__PURE__*/ _react.forwardRef(({ className, sideOffset = 4, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Portal, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Content, {
            ref: ref,
            sideOffset: sideOffset,
            className: (0, _utils.cn)("z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md", "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]", className),
            ...props
        })
    }));
DropdownMenuContent.displayName = _reactdropdownmenu.Content.displayName;
const DropdownMenuItem = /*#__PURE__*/ _react.forwardRef(({ className, inset, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Item, {
        ref: ref,
        className: (0, _utils.cn)("relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0", inset && "pl-8", className),
        ...props
    }));
DropdownMenuItem.displayName = _reactdropdownmenu.Item.displayName;
const DropdownMenuCheckboxItem = /*#__PURE__*/ _react.forwardRef(({ className, children, checked, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdropdownmenu.CheckboxItem, {
        ref: ref,
        className: (0, _utils.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className),
        checked: checked,
        ...props,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.ItemIndicator, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Check, {
                        className: "h-4 w-4"
                    })
                })
            }),
            children
        ]
    }));
DropdownMenuCheckboxItem.displayName = _reactdropdownmenu.CheckboxItem.displayName;
const DropdownMenuRadioItem = /*#__PURE__*/ _react.forwardRef(({ className, children, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdropdownmenu.RadioItem, {
        ref: ref,
        className: (0, _utils.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className),
        ...props,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.ItemIndicator, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Circle, {
                        className: "h-2 w-2 fill-current"
                    })
                })
            }),
            children
        ]
    }));
DropdownMenuRadioItem.displayName = _reactdropdownmenu.RadioItem.displayName;
const DropdownMenuLabel = /*#__PURE__*/ _react.forwardRef(({ className, inset, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Label, {
        ref: ref,
        className: (0, _utils.cn)("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className),
        ...props
    }));
DropdownMenuLabel.displayName = _reactdropdownmenu.Label.displayName;
const DropdownMenuSeparator = /*#__PURE__*/ _react.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Separator, {
        ref: ref,
        className: (0, _utils.cn)("-mx-1 my-1 h-px bg-muted", className),
        ...props
    }));
DropdownMenuSeparator.displayName = _reactdropdownmenu.Separator.displayName;
const DropdownMenuShortcut = ({ className, ...props })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
        className: (0, _utils.cn)("ml-auto text-xs tracking-widest opacity-60", className),
        ...props
    });
};
DropdownMenuShortcut.displayName = "DropdownMenuShortcut";

//# sourceMappingURL=data:application/json;base64,