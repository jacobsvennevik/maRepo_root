{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/app/projects/[projectId]/flashcards/[setId]/__tests__/page.test.tsx"],"sourcesContent":["import { render, screen, waitFor } from '@testing-library/react';\nimport { useParams, useRouter } from 'next/navigation';\nimport FlashcardSetCarouselPage from '../page';\nimport { axiosGeneration } from '@/lib/axios';\nimport type { FlashcardSet } from '@/features/flashcards/types';\n\n// Mock Next.js navigation\njest.mock('next/navigation', () => ({\n  useParams: jest.fn(),\n  useRouter: jest.fn(),\n}));\n\n// Mock axios instances\njest.mock('@/lib/axios', () => ({\n  axiosGeneration: {\n    get: jest.fn(),\n  },\n}));\n\n// Mock FlashcardCarousel component\njest.mock('@/features/flashcards/components/FlashcardCarousel', () => {\n  return function MockFlashcardCarousel({ flashcardSet }: { flashcardSet: FlashcardSet }) {\n    return <div data-testid=\"flashcard-carousel\">Flashcard Set: {flashcardSet.title}</div>;\n  };\n});\n\nconst mockUseParams = useParams as jest.MockedFunction<typeof useParams>;\nconst mockUseRouter = useRouter as jest.MockedFunction<typeof useRouter>;\nconst mockAxiosGeneration = axiosGeneration as jest.Mocked<typeof axiosGeneration>;\n\ndescribe('FlashcardSetCarouselPage', () => {\n  const mockProjectId = '203062be-58d0-4f98-bbd4-33b4ce081276';\n  const mockSetId = '9';\n  const mockRouter = {\n    push: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    replace: jest.fn(),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockUseParams.mockReturnValue({\n      projectId: mockProjectId,\n      setId: mockSetId,\n    });\n    mockUseRouter.mockReturnValue(mockRouter);\n  });\n\n  describe('Real flashcard set loading', () => {\n    it('should use axiosGeneration for real flashcard set requests', async () => {\n      const mockFlashcardSet: FlashcardSet = {\n        id: 9,\n        title: 'Test Flashcard Set',\n        description: 'Test description',\n        owner: 1,\n        difficulty_level: 'INTERMEDIATE',\n        target_audience: 'Students',\n        estimated_study_time: 15,\n        tags: ['test'],\n        created_at: '2024-01-01T00:00:00Z',\n        updated_at: '2024-01-01T00:00:00Z',\n        flashcard_count: 3,\n        is_public: false,\n        study_stats: {\n          total_cards: 3,\n          due_cards: 3,\n          mastered_cards: 0,\n          learning_cards: 0,\n          review_cards: 0,\n          retention_rate: 0,\n          streak_days: 0,\n          next_review: '2024-01-01T00:00:00Z'\n        },\n        flashcards: []\n      };\n\n      mockAxiosGeneration.get.mockResolvedValue({ data: mockFlashcardSet });\n\n      render(<FlashcardSetCarouselPage />);\n\n      await waitFor(() => {\n        expect(mockAxiosGeneration.get).toHaveBeenCalledWith(\n          `projects/${mockProjectId}/flashcard-sets/${mockSetId}/`\n        );\n      });\n\n      expect(screen.getByTestId('flashcard-carousel')).toBeInTheDocument();\n      expect(screen.getByText('Flashcard Set: Test Flashcard Set')).toBeInTheDocument();\n    });\n\n    it('should handle API errors gracefully', async () => {\n      const errorMessage = 'Page not found at /api/projects/203062be-58d0-4f98-bbd4-33b4ce081276/flashcard-sets/9/';\n      mockAxiosGeneration.get.mockRejectedValue(new Error(errorMessage));\n\n      render(<FlashcardSetCarouselPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText(errorMessage)).toBeInTheDocument();\n      });\n    });\n\n    it('should show loading state initially', () => {\n      mockAxiosGeneration.get.mockImplementation(() => new Promise(() => {})); // Never resolves\n\n      render(<FlashcardSetCarouselPage />);\n\n      expect(screen.getByRole('status', { hidden: true })).toBeInTheDocument();\n    });\n  });\n\n  describe('Mock flashcard set handling', () => {\n    it('should handle mock flashcard sets correctly', async () => {\n      mockUseParams.mockReturnValue({\n        projectId: mockProjectId,\n        setId: 'mock_test',\n      });\n\n      render(<FlashcardSetCarouselPage />);\n\n      await waitFor(() => {\n        expect(screen.getByTestId('flashcard-carousel')).toBeInTheDocument();\n        expect(screen.getByText('Flashcard Set: Mock Flashcard Set')).toBeInTheDocument();\n      });\n\n      // Should not make any API calls for mock sets\n      expect(mockAxiosGeneration.get).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('URL routing validation', () => {\n    it('should use correct API endpoint for flashcard sets', async () => {\n      const mockFlashcardSet: FlashcardSet = {\n        id: 9,\n        title: 'Test Set',\n        description: 'Test',\n        owner: 1,\n        difficulty_level: 'INTERMEDIATE',\n        target_audience: 'Students',\n        estimated_study_time: 15,\n        tags: ['test'],\n        created_at: '2024-01-01T00:00:00Z',\n        updated_at: '2024-01-01T00:00:00Z',\n        flashcard_count: 0,\n        is_public: false,\n        study_stats: {\n          total_cards: 0,\n          due_cards: 0,\n          mastered_cards: 0,\n          learning_cards: 0,\n          review_cards: 0,\n          retention_rate: 0,\n          streak_days: 0,\n          next_review: '2024-01-01T00:00:00Z'\n        },\n        flashcards: []\n      };\n\n      mockAxiosGeneration.get.mockResolvedValue({ data: mockFlashcardSet });\n\n      render(<FlashcardSetCarouselPage />);\n\n      await waitFor(() => {\n        // Verify the correct endpoint is called\n        expect(mockAxiosGeneration.get).toHaveBeenCalledWith(\n          `projects/${mockProjectId}/flashcard-sets/${mockSetId}/`\n        );\n      });\n    });\n  });\n\n  describe('Error handling', () => {\n    it('should display error message when flashcard set is not found', async () => {\n      const notFoundError = new Error('Not found');\n      notFoundError.response = { status: 404 };\n      mockAxiosGeneration.get.mockRejectedValue(notFoundError);\n\n      render(<FlashcardSetCarouselPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Not found')).toBeInTheDocument();\n      });\n    });\n\n    it('should display generic error message when no specific error is provided', async () => {\n      mockAxiosGeneration.get.mockRejectedValue(new Error());\n\n      render(<FlashcardSetCarouselPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Failed to load flashcard set')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('Invalid setId handling', () => {\n    it('should not render anything for invalid setId', () => {\n      mockUseParams.mockReturnValue({\n        projectId: mockProjectId,\n        setId: 'invalid',\n      });\n\n      const { container } = render(<FlashcardSetCarouselPage />);\n      \n      expect(container.firstChild).toBeNull();\n    });\n  });\n});\n"],"names":["jest","mock","useParams","fn","useRouter","axiosGeneration","get","MockFlashcardCarousel","flashcardSet","div","data-testid","title","mockUseParams","mockUseRouter","mockAxiosGeneration","describe","mockProjectId","mockSetId","mockRouter","push","back","forward","refresh","replace","beforeEach","clearAllMocks","mockReturnValue","projectId","setId","it","mockFlashcardSet","id","description","owner","difficulty_level","target_audience","estimated_study_time","tags","created_at","updated_at","flashcard_count","is_public","study_stats","total_cards","due_cards","mastered_cards","learning_cards","review_cards","retention_rate","streak_days","next_review","flashcards","mockResolvedValue","data","render","FlashcardSetCarouselPage","waitFor","expect","toHaveBeenCalledWith","screen","getByTestId","toBeInTheDocument","getByText","errorMessage","mockRejectedValue","Error","mockImplementation","Promise","getByRole","hidden","not","toHaveBeenCalled","notFoundError","response","status","container","firstChild","toBeNull"],"mappings":"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"}