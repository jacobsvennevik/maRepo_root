{"version":3,"sources":["/Users/jacobhornsvennevik/Documents/GitHub/maRepo_root/frontend/src/features/flashcards/services/flashcardApi.ts"],"sourcesContent":["import { axiosGeneration } from '@/lib/axios';\nimport type { \n  Flashcard, \n  FlashcardSet, \n  CreateFlashcardForm, \n  CreateFlashcardSetForm, \n  StudyStats,\n  FlashcardApiResponse,\n  FlashcardSetApiResponse\n} from '../types';\n\nclass FlashcardApiService {\n  // Flashcard Set Operations\n  async getProjectFlashcardSets(projectId: string): Promise<FlashcardSet[]> {\n    console.group('üîç Flashcard Sets API');\n    console.log('‚Üí GET /projects/${projectId}/flashcard-sets/');\n\n    try {\n      const response = await axiosGeneration.get<FlashcardSetApiResponse | FlashcardSet[]>(`/projects/${projectId}/flashcard-sets/`);\n      const data = response.data;\n      console.log('‚úÖ Payload:', data);\n      \n      // Handle different response formats\n      const sets = (data as any).results || data || [];\n      console.log('üìã Normalized sets:', sets);\n      \n      return sets;\n    } catch (err) {\n      console.error('‚ùå Network/parse failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async createProjectFlashcardSet(projectId: string, form: CreateFlashcardSetForm): Promise<FlashcardSet | null> {\n    console.group('üîç Create Flashcard Set API');\n    console.log('‚Üí POST /projects/${projectId}/flashcard-sets/');\n    console.log('‚Üí Payload:', form);\n\n    try {\n      // Create flashcard set for the specific project\n      const response = await axiosGeneration.post<FlashcardSet>(`/projects/${projectId}/flashcard-sets/`, { title: form.title });\n      const data = response.data;\n      console.log('‚úÖ Created set:', data);\n      \n      return data;\n    } catch (err) {\n      console.error('‚ùå Create failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async deleteFlashcardSet(setId: number): Promise<void> {\n    console.group('üîç Delete Flashcard Set API');\n    console.log('‚Üí DELETE /flashcard-sets/${setId}/');\n\n    try {\n      await axiosGeneration.delete(`flashcard-sets/${setId}/`);\n      console.log('‚úÖ Set deleted successfully');\n    } catch (err) {\n      console.error('‚ùå Delete failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  // Flashcard Operations\n  async getFlashcards(setId: number, projectId?: string): Promise<Flashcard[]> {\n    console.group('üîç Flashcards API');\n    \n    // Try project-scoped endpoint first if projectId is provided\n    const endpoint = projectId \n      ? `/projects/${projectId}/flashcard-sets/${setId}/flashcards/`\n      : `/flashcards/?flashcard_set=${setId}`;\n    \n    console.log('‚Üí GET', endpoint);\n\n    try {\n      const response = await axiosGeneration.get<FlashcardApiResponse | Flashcard[]>(endpoint);\n      console.log('‚úÖ Response:', response);\n      \n      // Extract data from axios response\n      const responseData = response.data;\n      console.log('‚úÖ Response data:', responseData);\n      \n      // Handle different response formats\n      const cards = (responseData as any)?.results || responseData || [];\n      console.log('üìã Normalized cards:', cards);\n      \n      // Ensure we return an array\n      return Array.isArray(cards) ? cards : [];\n    } catch (err) {\n      console.error('‚ùå Network/parse failure:', err);\n      // Return empty array on error to prevent .map() errors\n      return [];\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async createFlashcard(setId: number, form: CreateFlashcardForm): Promise<Flashcard | null> {\n    console.group('üîç Create Flashcard API');\n    console.log('‚Üí POST /flashcards/');\n    console.log('‚Üí Payload:', form);\n\n    try {\n      const payload = {\n        ...form,\n        flashcard_set: setId\n      };\n\n      const response = await axiosGeneration.post<Flashcard>(`/flashcards/`, payload);\n      console.log('‚úÖ Created flashcard:', response.data);\n      return response.data;\n    } catch (err) {\n      console.error('‚ùå Create failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async updateFlashcard(cardId: number, form: Partial<CreateFlashcardForm>): Promise<Flashcard | null> {\n    console.group('üîç Update Flashcard API');\n    console.log('‚Üí PUT /api/flashcards/${cardId}/');\n    console.log('‚Üí Payload:', form);\n\n    try {\n      const response = await axiosGeneration.put<Flashcard>(`/flashcards/${cardId}/`, form);\n      console.log('‚úÖ Updated flashcard:', response.data);\n      return response.data;\n    } catch (err) {\n      console.error('‚ùå Update failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  async deleteFlashcard(cardId: number): Promise<void> {\n    console.group('üîç Delete Flashcard API');\n    console.log('‚Üí DELETE /api/flashcards/${cardId}/');\n\n    try {\n      await axiosGeneration.delete(`flashcards/${cardId}/`);\n      console.log('‚úÖ Flashcard deleted successfully');\n    } catch (err) {\n      console.error('‚ùå Delete failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  // Study Operations\n  async markCardReviewed(cardId: number, wasCorrect: boolean): Promise<void> {\n    console.group('üîç Mark Card Reviewed API');\n    console.log('‚Üí POST /api/flashcards/${cardId}/review/');\n    console.log('‚Üí Was correct:', wasCorrect);\n\n    try {\n      await axiosGeneration.post(`flashcards/${cardId}/review/`, { was_correct: wasCorrect });\n      console.log('‚úÖ Card review recorded');\n    } catch (err) {\n      console.error('‚ùå Review failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n\n  // Stats Operations\n  async calculateProjectStats(projectId: string, sets: FlashcardSet[]): Promise<StudyStats> {\n    console.group('üìä Calculate Project Stats');\n    console.log('‚Üí Calculating stats from', sets.length, 'sets');\n\n    try {\n      let totalCards = 0;\n      let totalDueCards = 0;\n      let totalLearningCards = 0;\n      let totalReviewCards = 0;\n      let totalMasteredCards = 0;\n      \n      for (const set of sets) {\n        if (set.flashcards) {\n          totalCards += set.flashcards.length;\n          \n          for (const card of set.flashcards) {\n            if (card.learning_state === 'learning') totalLearningCards++;\n            else if (card.learning_state === 'review') totalReviewCards++;\n            else if (card.learning_state === 'mastered') totalMasteredCards++;\n            \n            if (card.next_review && new Date(card.next_review) <= new Date()) {\n              totalDueCards++;\n            }\n          }\n        }\n      }\n      \n      const retentionRate = totalCards > 0 ? Math.round((totalMasteredCards / totalCards) * 100) : 0;\n      \n      const stats: StudyStats = {\n        total_cards: totalCards,\n        due_cards: totalDueCards,\n        mastered_cards: totalMasteredCards,\n        learning_cards: totalLearningCards,\n        review_cards: totalReviewCards,\n        retention_rate: retentionRate,\n        streak_days: 0, // TODO: Implement streak calculation\n        next_review: new Date().toISOString(),\n      };\n      \n      console.log('‚úÖ Calculated stats:', stats);\n      return stats;\n    } catch (err) {\n      console.error('‚ùå Stats calculation failure:', err);\n      throw err;\n    } finally {\n      console.groupEnd();\n    }\n  }\n}\n\n// Export singleton instance\nexport const flashcardApi = new FlashcardApiService();\n"],"names":["flashcardApi","FlashcardApiService","getProjectFlashcardSets","projectId","console","group","log","response","axiosGeneration","get","data","sets","results","err","error","groupEnd","createProjectFlashcardSet","form","post","title","deleteFlashcardSet","setId","delete","getFlashcards","endpoint","responseData","cards","Array","isArray","createFlashcard","payload","flashcard_set","updateFlashcard","cardId","put","deleteFlashcard","markCardReviewed","wasCorrect","was_correct","calculateProjectStats","length","totalCards","totalDueCards","totalLearningCards","totalReviewCards","totalMasteredCards","set","flashcards","card","learning_state","next_review","Date","retentionRate","Math","round","stats","total_cards","due_cards","mastered_cards","learning_cards","review_cards","retention_rate","streak_days","toISOString"],"mappings":"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"}