# Generated by Django 5.2.3 on 2025-08-15 04:24

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('generation', '0007_flashcardprofile_interleavingsessionconfig_principle_and_more'),
        ('pdf_service', '0006_document_error_message_alter_document_document_type'),
        ('projects', '0008_projectflashcardset'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiagnosticQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('MCQ', 'Multiple Choice'), ('SHORT_ANSWER', 'Short Answer'), ('PRINCIPLE', 'Principle')], max_length=14)),
                ('text', models.TextField()),
                ('choices', models.JSONField(blank=True, null=True)),
                ('correct_choice_index', models.IntegerField(blank=True, null=True)),
                ('acceptable_answers', models.JSONField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True)),
                ('difficulty', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=2)),
                ('bloom_level', models.CharField(blank=True, choices=[('Remember', 'Remember'), ('Understand', 'Understand'), ('Apply', 'Apply'), ('Analyze', 'Analyze'), ('Evaluate', 'Evaluate'), ('Create', 'Create')], max_length=16)),
                ('concept_id', models.CharField(blank=True, max_length=64)),
                ('source_anchor', models.JSONField(blank=True, null=True)),
                ('tags', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='interleavingsessionconfig',
            options={'verbose_name': 'Interleaving Session Configuration', 'verbose_name_plural': 'Interleaving Session Configurations'},
        ),
        migrations.CreateModel(
            name='DiagnosticSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('OPEN', 'Open'), ('CLOSED', 'Closed')], default='DRAFT', max_length=12)),
                ('delivery_mode', models.CharField(choices=[('IMMEDIATE', 'Immediate Feedback'), ('DEFERRED_FEEDBACK', 'Deferred Feedback')], default='DEFERRED_FEEDBACK', max_length=18)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('due_at', models.DateTimeField(blank=True, null=True)),
                ('time_limit_sec', models.PositiveIntegerField(blank=True, null=True)),
                ('max_questions', models.PositiveSmallIntegerField(default=3)),
                ('questions_order', models.CharField(choices=[('FIXED', 'Fixed Order'), ('SCRAMBLED', 'Scrambled Order')], default='SCRAMBLED', max_length=10)),
                ('seed', models.IntegerField(blank=True, null=True)),
                ('variant', models.CharField(default='A', max_length=1)),
                ('feature_flag_key', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pdf_service.document')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_diagnostics', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic_sessions', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiagnosticResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('selected_choice_index', models.IntegerField(blank=True, null=True)),
                ('confidence', models.PositiveSmallIntegerField()),
                ('is_correct', models.BooleanField(default=False)),
                ('score', models.FloatField(default=0.0)),
                ('brier_component', models.FloatField(default=0.0)),
                ('latency_ms', models.IntegerField(default=0)),
                ('attempt_no', models.PositiveSmallIntegerField(default=1)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('feedback_shown_at', models.DateTimeField(blank=True, null=True)),
                ('meta', models.JSONField(default=dict)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='generation.diagnosticquestion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnostic_responses', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='generation.diagnosticsession')),
            ],
        ),
        migrations.AddField(
            model_name='diagnosticquestion',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='generation.diagnosticsession'),
        ),
        migrations.CreateModel(
            name='DiagnosticAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_participants', models.PositiveIntegerField(default=0)),
                ('participation_rate', models.FloatField(default=0.0)),
                ('average_score', models.FloatField(default=0.0)),
                ('median_confidence', models.FloatField(default=0.0)),
                ('overconfidence_rate', models.FloatField(default=0.0)),
                ('brier_score', models.FloatField(default=0.0)),
                ('concept_analytics', models.JSONField(default=dict)),
                ('top_misconceptions', models.JSONField(default=list)),
                ('talking_points', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='generation.diagnosticsession')),
            ],
            options={
                'verbose_name_plural': 'Diagnostic Analytics',
            },
        ),
        migrations.AddIndex(
            model_name='diagnosticsession',
            index=models.Index(fields=['project', 'status'], name='generation__project_75632a_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticsession',
            index=models.Index(fields=['scheduled_for', 'due_at'], name='generation__schedul_7765ab_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticsession',
            index=models.Index(fields=['created_by', 'created_at'], name='generation__created_8340e7_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticresponse',
            index=models.Index(fields=['session', 'user'], name='generation__session_94dba4_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticresponse',
            index=models.Index(fields=['question'], name='generation__questio_742314_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticresponse',
            index=models.Index(fields=['user', 'submitted_at'], name='generation__user_id_3e7bd7_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticresponse',
            index=models.Index(fields=['is_correct', 'confidence'], name='generation__is_corr_0d94b1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='diagnosticresponse',
            unique_together={('user', 'question', 'attempt_no')},
        ),
        migrations.AddIndex(
            model_name='diagnosticquestion',
            index=models.Index(fields=['session', 'type'], name='generation__session_1a83ac_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticquestion',
            index=models.Index(fields=['concept_id'], name='generation__concept_84d0eb_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticquestion',
            index=models.Index(fields=['difficulty'], name='generation__difficu_ced0a8_idx'),
        ),
        migrations.AddIndex(
            model_name='diagnosticanalytics',
            index=models.Index(fields=['session', 'created_at'], name='generation__session_2ece46_idx'),
        ),
    ]
