# Generated by Django 5.2.4 on 2025-09-01 15:25

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('generation', '0012_merge_20250831_1844'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Flashcard',
        ),
        migrations.DeleteModel(
            name='FlashcardSet',
        ),
        migrations.RemoveField(
            model_name='assessmentitem',
            name='assessment_set',
        ),
        migrations.RemoveField(
            model_name='assessmentset',
            name='document',
        ),
        migrations.RemoveField(
            model_name='assessmentset',
            name='owner',
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('algorithm', models.CharField(choices=[('sm2', 'SM-2'), ('leitner', 'Leitner')], default='sm2', max_length=20)),
                ('learning_state', models.CharField(choices=[('new', 'New'), ('learning', 'Learning'), ('review', 'Review')], default='new', max_length=20)),
                ('interval', models.PositiveIntegerField(default=1)),
                ('repetitions', models.PositiveIntegerField(default=0)),
                ('ease_factor', models.FloatField(default=2.5)),
                ('leitner_box', models.PositiveIntegerField(default=1)),
                ('next_review', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('correct_reviews', models.PositiveIntegerField(default=0)),
                ('metrics', models.JSONField(blank=True, default=dict)),
                ('bloom_level', models.CharField(choices=[('apply', 'Apply'), ('analyze', 'Analyze'), ('evaluate', 'Evaluate'), ('create', 'Create')], default='apply', max_length=15)),
                ('card_type', models.CharField(choices=[('definition', 'Definition'), ('application', 'Application'), ('analysis', 'Analysis'), ('synthesis', 'Synthesis'), ('evaluation', 'Evaluation'), ('problem_solving', 'Problem Solving'), ('comparison', 'Comparison'), ('critique', 'Critique'), ('cloze', 'Cloze'), ('scenario', 'Scenario')], default='definition', max_length=20)),
                ('common_misconceptions', models.JSONField(blank=True, default=list)),
                ('concept_id', models.CharField(blank=True, default='', max_length=255)),
                ('difficulty', models.CharField(choices=[('medium', 'Medium'), ('hard', 'Hard'), ('expert', 'Expert')], default='medium', max_length=10)),
                ('examples', models.JSONField(blank=True, default=list)),
                ('hints', models.JSONField(blank=True, default=list)),
                ('learning_objective', models.CharField(blank=True, default='', max_length=500)),
                ('related_concepts', models.JSONField(blank=True, default=list)),
                ('theme', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'ordering': ['next_review', 'updated_at'],
            },
        ),
        migrations.CreateModel(
            name='FlashcardSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Untitled Flashcard Set', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('learning_objectives', models.JSONField(blank=True, default=list)),
                ('themes', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.DeleteModel(
            name='AssessmentAttempt',
        ),
    ]
